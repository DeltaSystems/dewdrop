{"version":3,"sources":["webpack:///1.js","webpack:///./www/src/js/sort-fields.js","webpack:///./www/src/js/sort-fields/add-group-popover-template.html","webpack:///./www/src/js/sort-fields/list-field-template.html","webpack:///./www/src/js/sort-fields/list-template.html","webpack:///./www/src/js/sort-fields/add-group-popover-view.js","webpack:///./www/src/js/sort-fields/groups-collection.js","webpack:///./www/src/js/sort-fields/groups-view.js","webpack:///./www/src/js/sort-fields/list-view.js"],"names":["webpackJsonp","135","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__sort_fields_groups_collection__","__WEBPACK_IMPORTED_MODULE_1__sort_fields_groups_view__","__WEBPACK_IMPORTED_MODULE_2__sort_fields_add_group_popover_view__","SortFields","this","collection","initializeWithGlobalVariable","$","on","e","val","JSON","stringify","toJSON","153","exports","154","155","168","__WEBPACK_IMPORTED_MODULE_0__add_group_popover_template_html__","__WEBPACK_IMPORTED_MODULE_0__add_group_popover_template_html___default","n","__WEBPACK_IMPORTED_MODULE_1_underscore__","__WEBPACK_IMPORTED_MODULE_1_underscore___default","AddGroupPopoverView","Backbone","View","extend","el","events","click #add-group","show.bs.popover #add-group","keydown .popover-content input:first","click .popover-content .btn","groups","initialize","attributes","options","$el","find","popover","html","placement","content","a","setGroups","preventSubmission","preventDefault","focusInput","setTimeout","bind","focus","addGroupOnEnter","keyCode","addGroup","add","title","169","__WEBPACK_IMPORTED_MODULE_0_underscore__","__WEBPACK_IMPORTED_MODULE_0_underscore___default","Model","defaults","allowEditing","animate","caption","sortIndex","fields","GroupsCollection","Collection","model","comparator","map","pick","window","initialFieldGroupsConfig","each","group","index","170","__WEBPACK_IMPORTED_MODULE_0__list_view__","GroupsView","sortstop","render","hideTitle","length","empty","view","ungroupedModel","first","append","sortable","items","disableSelection","updateSortIndexes","list","get","data","set","sort","171","__WEBPACK_IMPORTED_MODULE_0__list_template_html__","__WEBPACK_IMPORTED_MODULE_0__list_template_html___default","__WEBPACK_IMPORTED_MODULE_1__list_field_template_html__","__WEBPACK_IMPORTED_MODULE_1__list_field_template_html___default","__WEBPACK_IMPORTED_MODULE_2_underscore__","__WEBPACK_IMPORTED_MODULE_2_underscore___default","listTemplate","template","fieldTemplate","ListView","tagName","className","sortremove","sortreceive","click .btn-remove","click .btn-edit","click .btn-save-title","click .btn-cancel","keydown .title-input","updateBadge","hide","velocity","remove","cid","connectWith","field","delete","concat","destroy","showTitleInput","show","saveTitleOnEnter","saveTitle","cancelTitleInput","count","suffix","text","updateModelFields","ui","element","push","id","label"],"mappings":"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","file":"1.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 135:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sort_fields_groups_collection__ = __webpack_require__(169);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sort_fields_groups_view__ = __webpack_require__(170);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sort_fields_add_group_popover_view__ = __webpack_require__(168);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\nvar SortFields = function SortFields() {\n    _classCallCheck(this, SortFields);\n\n    var collection = new __WEBPACK_IMPORTED_MODULE_0__sort_fields_groups_collection__[\"a\" /* default */](),\n        popover = new __WEBPACK_IMPORTED_MODULE_2__sort_fields_add_group_popover_view__[\"a\" /* default */]({ collection: collection }),\n        groups = new __WEBPACK_IMPORTED_MODULE_1__sort_fields_groups_view__[\"a\" /* default */]({ collection: collection });\n\n    collection.initializeWithGlobalVariable();\n\n    $('#sort-form').on('submit', function (e) {\n        $('#sorted-fields').val(JSON.stringify(collection.toJSON()));\n    });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SortFields);\n\n/***/ }),\n\n/***/ 153:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"form-inline\\\">\\n    <input placeholder=\\\"Enter group title...\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\n    <button class=\\\"btn btn-success btn-add-group\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ 154:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li data-field-id=\\\"<%- id %>\\\" class=\\\"list-group-item\\\">\\n    <span class=\\\"field-label\\\"><%- label %></span>\\n    <span class=\\\"text-muted glyphicon glyphicon-align-justify pull-right\\\"></span>\\n</li>\\n\";\n\n/***/ }),\n\n/***/ 155:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li class=\\\"list-group-item list-group-item-title\\\">\\n    <span class=\\\"badge\\\">\\n        <%- fields.length %>\\n        <%- (1 === fields.length ? 'Field' : 'Fields') %>\\n    </span>\\n    <h4>\\n        <%- title %>\\n    </h4>\\n    <% if (caption) { %>\\n    <div class=\\\"help-block\\\"><%- caption %></div>\\n    <% } %>\\n    <% if (allowEditing) { %>\\n    <div class=\\\"title-input form-inline\\\">\\n        <input type=\\\"text\\\" class=\\\"title-input form-control\\\" value=\\\"<%- title %>\\\" />\\n        <button type=\\\"button\\\" class=\\\"btn btn-save-title btn-success btn-sm\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-cancel btn-link btn-sm\\\">Cancel</button>\\n    </div>\\n    <div class=\\\"title-buttons\\\">\\n        <a href=\\\"#\\\" class=\\\"btn-remove pull-right btn btn-sm btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n            Delete Group\\n        </a>\\n        <a href=\\\"#\\\" class=\\\"btn-edit pull-right btn btn-sm btn-success\\\">\\n            <span class=\\\"glyphicon glyphicon-pencil\\\"></span>\\n            Edit Title\\n        </a>\\n    </div>\\n    <% } %>\\n</li>\\n\";\n\n/***/ }),\n\n/***/ 168:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__add_group_popover_template_html__ = __webpack_require__(153);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__add_group_popover_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__add_group_popover_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n\n\n\nvar AddGroupPopoverView = Backbone.View.extend({\n    el: '#add-group-wrapper',\n\n    events: {\n        'click #add-group': 'preventSubmission',\n        'show.bs.popover #add-group': 'focusInput',\n        'keydown .popover-content input:first': 'addGroupOnEnter',\n        'click .popover-content .btn': 'addGroup'\n    },\n\n    groups: null,\n\n    initialize: function initialize(attributes, options) {\n        this.$el.find('#add-group').popover({\n            html: true,\n            placement: 'top',\n            content: __WEBPACK_IMPORTED_MODULE_0__add_group_popover_template_html___default.a\n        });\n    },\n\n    setGroups: function setGroups(groups) {\n        this.groups = groups;\n\n        return this;\n    },\n\n    preventSubmission: function preventSubmission(e) {\n        e.preventDefault();\n    },\n\n    focusInput: function focusInput(e) {\n        setTimeout(__WEBPACK_IMPORTED_MODULE_1_underscore___default.a.bind(function () {\n            this.$el.find('.popover-content input').focus();\n        }, this), 1);\n    },\n\n    addGroupOnEnter: function addGroupOnEnter(e) {\n        if (13 === e.keyCode) {\n            return this.addGroup(e);\n        }\n    },\n\n    addGroup: function addGroup(e) {\n        e.preventDefault();\n\n        $('#add-group').popover('hide');\n\n        this.collection.add({\n            title: this.$el.find('.popover-content input').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (AddGroupPopoverView);\n\n/***/ }),\n\n/***/ 169:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_underscore__);\n\n\nvar Model = Backbone.Model.extend({\n    defaults: {\n        allowEditing: true,\n        animate: true,\n        title: '',\n        caption: '',\n        sortIndex: null,\n        fields: []\n    }\n});\n\nvar GroupsCollection = Backbone.Collection.extend({\n    model: Model,\n\n    comparator: 'sortIndex',\n\n    toJSON: function toJSON() {\n        return this.map(function (model) {\n            return __WEBPACK_IMPORTED_MODULE_0_underscore___default.a.pick(model.toJSON(this), ['title', 'fields']);\n        });\n    },\n\n    initializeWithGlobalVariable: function initializeWithGlobalVariable() {\n        if ('undefined' === typeof window.initialFieldGroupsConfig) {\n            throw 'Could not find initialFieldGroupsConfig variable in global scope';\n        }\n\n        __WEBPACK_IMPORTED_MODULE_0_underscore___default.a.each(window.initialFieldGroupsConfig, function (group, index) {\n            group.allowEditing = true;\n            group.animate = false;\n            group.sortIndex = index;\n\n            if (0 === index) {\n                group.allowEditing = false;\n            }\n\n            this.add(group);\n        }, this);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (GroupsCollection);\n\n/***/ }),\n\n/***/ 170:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_view__ = __webpack_require__(171);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n\n\n\nvar GroupsView = Backbone.View.extend({\n    el: '#groups-wrapper',\n\n    events: {\n        'sortstop': 'updateSortIndexes'\n    },\n\n    initialize: function initialize() {\n        this.collection.on('add remove', this.render, this);\n    },\n\n    render: function render() {\n        var hideTitle = 1 === this.collection.length;\n\n        this.$el.empty();\n\n        this.collection.each(function (group, index) {\n            var view = new __WEBPACK_IMPORTED_MODULE_0__list_view__[\"a\" /* default */]({\n                model: group,\n                hideTitle: hideTitle,\n                ungroupedModel: this.collection.first()\n            });\n\n            this.$el.append(view.render().el);\n        }, this);\n\n        this.$el.sortable({\n            items: 'ul:not(.list-group:first)'\n        }).disableSelection();\n\n        return this;\n    },\n\n    updateSortIndexes: function updateSortIndexes() {\n        this.$el.find('.list-group').each(__WEBPACK_IMPORTED_MODULE_1_underscore___default.a.bind(function (index, list) {\n            this.collection.get($(list).data('model-id')).set('sortIndex', index);\n            this.collection.sort();\n        }, this));\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (GroupsView);\n\n/***/ }),\n\n/***/ 171:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_template_html__ = __webpack_require__(155);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__list_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__list_field_template_html__ = __webpack_require__(154);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__list_field_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__list_field_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar listTemplate = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_0__list_template_html___default.a),\n    fieldTemplate = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__list_field_template_html___default.a);\n\nvar ListView = Backbone.View.extend({\n    template: listTemplate,\n\n    tagName: 'ul',\n\n    className: 'list-group',\n\n    hideTitle: false,\n\n    events: {\n        'sortstop': 'updateModelFields',\n        'sortremove': 'updateModelFields',\n        'sortreceive': 'updateModelFields',\n        'click .btn-remove': 'delete',\n        'click .btn-edit': 'showTitleInput',\n        'click .btn-save-title': 'saveTitle',\n        'click .btn-cancel': 'cancelTitleInput',\n        'keydown .title-input': 'saveTitleOnEnter'\n    },\n\n    initialize: function initialize(attributes, options) {\n        this.model.on('change:title', this.render, this);\n        this.model.on('change:fields', this.updateBadge, this);\n\n        this.hideTitle = attributes.hideTitle;\n        this.ungroupedModel = attributes.ungroupedModel;\n    },\n\n    render: function render() {\n        var list;\n\n        this.$el.html(this.template(this.model.toJSON()));\n        this.$el.find('.title-input').hide();\n\n        if (this.model.get('animate') && !this.model.get('fields').length) {\n            this.$el.velocity('transition.flipYIn');\n        }\n\n        // We don't want to show the title at all when there is only 1 group\n        if (this.hideTitle) {\n            this.$el.find('.list-group-item-title').remove();\n        }\n\n        this.$el.data('model-id', this.model.cid);\n\n        this.$el.sortable({\n            items: 'li:not(.list-group-item-title)',\n            connectWith: '.list-group'\n        }).disableSelection();\n\n        __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.each(this.model.get('fields'), function (field, index) {\n            this.$el.append(fieldTemplate(field));\n        }, this);\n\n        return this;\n    },\n\n    delete: function _delete(e) {\n        e.preventDefault();\n\n        // Pass remaining fields over to the \"ungrouped\" set\n        this.ungroupedModel.set('fields', this.ungroupedModel.get('fields').concat(this.model.get('fields')));\n\n        this.model.destroy();\n    },\n\n    showTitleInput: function showTitleInput(e) {\n        e.preventDefault();\n\n        this.$el.find('h4').hide();\n        this.$el.find('.title-input').show();\n        this.$el.find('.title-input').focus();\n    },\n\n    saveTitleOnEnter: function saveTitleOnEnter(e) {\n        if (13 === e.keyCode) {\n            this.saveTitle(e);\n        }\n    },\n\n    saveTitle: function saveTitle(e) {\n        e.preventDefault();\n\n        this.model.set('title', this.$el.find('.title-input input').val());\n\n        this.cancelTitleInput(e);\n    },\n\n    cancelTitleInput: function cancelTitleInput(e) {\n        e.preventDefault();\n\n        this.$el.find('.title-input').hide();\n        this.$el.find('h4').show();\n    },\n\n    updateBadge: function updateBadge() {\n        var count = this.model.get('fields').length,\n            suffix = 1 === count ? '' : 's';\n\n        this.$el.find('.badge').text(count + ' Field' + suffix);\n    },\n\n    updateModelFields: function updateModelFields(e, ui) {\n        var fields = [];\n\n        this.$el.find('li:not(.list-group-item-title)').each(function (index, element) {\n            fields.push({\n                id: $(element).data('field-id'),\n                label: $(element).find('.field-label').text()\n            });\n        });\n\n        this.model.set('fields', fields);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ListView);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.js","import GroupsCollection from './sort-fields/groups-collection';\nimport GroupsView from './sort-fields/groups-view';\nimport Popover from './sort-fields/add-group-popover-view';\n\nclass SortFields {\n    constructor() {\n        var collection = new GroupsCollection(),\n            popover    = new Popover({collection: collection}),\n            groups     = new GroupsView({collection: collection});\n\n        collection.initializeWithGlobalVariable();\n\n        $('#sort-form').on(\n            'submit',\n            function (e) {\n                $('#sorted-fields').val(JSON.stringify(collection.toJSON()));\n            }\n        );\n    }\n}\n\nexport default SortFields;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/sort-fields.js","module.exports = \"<div class=\\\"form-inline\\\">\\n    <input placeholder=\\\"Enter group title...\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\n    <button class=\\\"btn btn-success btn-add-group\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button>\\n</div>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/sort-fields/add-group-popover-template.html","module.exports = \"<li data-field-id=\\\"<%- id %>\\\" class=\\\"list-group-item\\\">\\n    <span class=\\\"field-label\\\"><%- label %></span>\\n    <span class=\\\"text-muted glyphicon glyphicon-align-justify pull-right\\\"></span>\\n</li>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/sort-fields/list-field-template.html","module.exports = \"<li class=\\\"list-group-item list-group-item-title\\\">\\n    <span class=\\\"badge\\\">\\n        <%- fields.length %>\\n        <%- (1 === fields.length ? 'Field' : 'Fields') %>\\n    </span>\\n    <h4>\\n        <%- title %>\\n    </h4>\\n    <% if (caption) { %>\\n    <div class=\\\"help-block\\\"><%- caption %></div>\\n    <% } %>\\n    <% if (allowEditing) { %>\\n    <div class=\\\"title-input form-inline\\\">\\n        <input type=\\\"text\\\" class=\\\"title-input form-control\\\" value=\\\"<%- title %>\\\" />\\n        <button type=\\\"button\\\" class=\\\"btn btn-save-title btn-success btn-sm\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span></button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-cancel btn-link btn-sm\\\">Cancel</button>\\n    </div>\\n    <div class=\\\"title-buttons\\\">\\n        <a href=\\\"#\\\" class=\\\"btn-remove pull-right btn btn-sm btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n            Delete Group\\n        </a>\\n        <a href=\\\"#\\\" class=\\\"btn-edit pull-right btn btn-sm btn-success\\\">\\n            <span class=\\\"glyphicon glyphicon-pencil\\\"></span>\\n            Edit Title\\n        </a>\\n    </div>\\n    <% } %>\\n</li>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/sort-fields/list-template.html","import popoverHtml from './add-group-popover-template.html';\nimport _ from 'underscore';\n\nvar AddGroupPopoverView = Backbone.View.extend({\n    el: '#add-group-wrapper',\n\n    events: {\n        'click #add-group':                     'preventSubmission',\n        'show.bs.popover #add-group':           'focusInput',\n        'keydown .popover-content input:first': 'addGroupOnEnter',\n        'click .popover-content .btn':          'addGroup',\n    },\n\n    groups: null,\n\n    initialize: function (attributes, options) {\n        this.$el.find('#add-group').popover(\n            {\n                html:      true,\n                placement: 'top',\n                content:   popoverHtml\n            }\n        );\n    },\n\n    setGroups: function (groups) {\n        this.groups = groups;\n\n        return this;\n    },\n\n    preventSubmission: function (e) {\n        e.preventDefault();\n    },\n\n    focusInput: function (e) {\n        setTimeout(\n            _.bind(\n                function () {\n                    this.$el.find('.popover-content input').focus();\n                },\n                this\n            ),\n            1\n        );\n    },\n\n    addGroupOnEnter: function (e) {\n        if (13 === e.keyCode) {\n            return this.addGroup(e);\n        }\n    },\n\n    addGroup: function (e) {\n        e.preventDefault();\n\n        $('#add-group').popover('hide');\n\n        this.collection.add({\n            title: this.$el.find('.popover-content input').val()\n        });\n    }\n});\n\nexport default AddGroupPopoverView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/sort-fields/add-group-popover-view.js","import _ from 'underscore';\n\nvar Model = Backbone.Model.extend({\n    defaults: {\n        allowEditing: true,\n        animate:      true,\n        title:        '',\n        caption:      '',\n        sortIndex:    null,\n        fields:       []\n    }\n});\n\nvar GroupsCollection = Backbone.Collection.extend({\n    model: Model,\n\n    comparator: 'sortIndex',\n\n    toJSON: function () {\n        return this.map(\n            function (model) {\n                return _.pick(model.toJSON(this), ['title', 'fields'])\n            }\n        );\n    },\n\n    initializeWithGlobalVariable: function () {\n        if ('undefined' === typeof window.initialFieldGroupsConfig) {\n            throw 'Could not find initialFieldGroupsConfig variable in global scope';\n        }\n\n        _.each(\n            window.initialFieldGroupsConfig,\n            function (group, index) {\n                group.allowEditing = true;\n                group.animate      = false;\n                group.sortIndex    = index;\n\n                if (0 === index) {\n                    group.allowEditing = false;\n                }\n\n                this.add(group);\n            },\n            this\n        );\n    }\n});\n\nexport default GroupsCollection;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/sort-fields/groups-collection.js","import List from './list-view';\nimport _ from 'underscore';\n\nvar GroupsView = Backbone.View.extend({\n    el: '#groups-wrapper',\n\n    events: {\n        'sortstop': 'updateSortIndexes'\n    },\n\n    initialize: function () {\n        this.collection.on('add remove', this.render, this);\n    },\n\n    render: function () {\n        var hideTitle = (1 === this.collection.length);\n\n        this.$el.empty();\n\n        this.collection.each(\n            function (group, index) {\n                var view = new List({\n                    model:          group,\n                    hideTitle:      hideTitle,\n                    ungroupedModel: this.collection.first()\n                });\n\n                this.$el.append(view.render().el);\n            },\n            this\n        );\n\n        this.$el.sortable({\n            items: 'ul:not(.list-group:first)',\n        }).disableSelection();\n\n        return this;\n    },\n\n    updateSortIndexes: function () {\n        this.$el.find('.list-group').each(\n            _.bind(\n                function (index, list) {\n                    this.collection.get($(list).data('model-id')).set('sortIndex', index);\n                    this.collection.sort();\n                },\n                this\n            )\n        );\n    }\n});\n\nexport default GroupsView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/sort-fields/groups-view.js","import listHtml from './list-template.html';\nimport fieldHtml from './list-field-template.html';\nimport _ from 'underscore';\n\nvar listTemplate  = _.template(listHtml),\n    fieldTemplate = _.template(fieldHtml);\n\nvar ListView =Backbone.View.extend({\n    template: listTemplate,\n\n    tagName: 'ul',\n\n    className: 'list-group',\n\n    hideTitle: false,\n\n    events: {\n        'sortstop':              'updateModelFields',\n        'sortremove':            'updateModelFields',\n        'sortreceive':           'updateModelFields',\n        'click .btn-remove':     'delete',\n        'click .btn-edit':       'showTitleInput',\n        'click .btn-save-title': 'saveTitle',\n        'click .btn-cancel':     'cancelTitleInput',\n        'keydown .title-input':  'saveTitleOnEnter'\n    },\n\n    initialize: function (attributes, options) {\n        this.model.on('change:title', this.render, this);\n        this.model.on('change:fields', this.updateBadge, this);\n\n        this.hideTitle      = attributes.hideTitle;\n        this.ungroupedModel = attributes.ungroupedModel;\n    },\n\n    render: function () {\n        var list;\n\n        this.$el.html(this.template(this.model.toJSON()));\n        this.$el.find('.title-input').hide();\n\n        if (this.model.get('animate') && !this.model.get('fields').length) {\n            this.$el.velocity('transition.flipYIn');\n        }\n\n        // We don't want to show the title at all when there is only 1 group\n        if (this.hideTitle) {\n            this.$el.find('.list-group-item-title').remove();\n        }\n\n        this.$el.data('model-id', this.model.cid);\n\n        this.$el.sortable({\n            items:       'li:not(.list-group-item-title)',\n            connectWith: '.list-group'\n        }).disableSelection();\n\n        _.each(\n            this.model.get('fields'),\n            function (field, index) {\n                this.$el.append(fieldTemplate(field));\n            },\n            this\n        );\n\n        return this;\n    },\n\n    delete: function (e) {\n        e.preventDefault();\n\n        // Pass remaining fields over to the \"ungrouped\" set\n        this.ungroupedModel.set(\n            'fields',\n            this.ungroupedModel.get('fields').concat(this.model.get('fields'))\n        );\n\n        this.model.destroy();\n    },\n\n    showTitleInput: function (e) {\n        e.preventDefault();\n\n        this.$el.find('h4').hide();\n        this.$el.find('.title-input').show();\n        this.$el.find('.title-input').focus();\n    },\n\n    saveTitleOnEnter: function (e) {\n        if (13 === e.keyCode) {\n            this.saveTitle(e);\n        }\n    },\n\n    saveTitle: function (e) {\n        e.preventDefault();\n\n        this.model.set('title', this.$el.find('.title-input input').val());\n\n        this.cancelTitleInput(e);\n    },\n\n    cancelTitleInput: function (e) {\n        e.preventDefault();\n\n        this.$el.find('.title-input').hide();\n        this.$el.find('h4').show();\n    },\n\n    updateBadge: function () {\n        var count  = this.model.get('fields').length,\n            suffix = (1 === count ? '' : 's');\n\n        this.$el.find('.badge').text(count + ' Field' + suffix);\n    },\n\n    updateModelFields: function (e, ui) {\n        var fields = [];\n\n        this.$el.find('li:not(.list-group-item-title)').each(\n            function (index, element) {\n                fields.push({\n                    id:        $(element).data('field-id'),\n                    label:     $(element).find('.field-label').text()\n                });\n            }\n        );\n\n        this.model.set('fields', fields);\n    }\n});\n\nexport default ListView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/sort-fields/list-view.js"],"sourceRoot":""}