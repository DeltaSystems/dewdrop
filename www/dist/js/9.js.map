{"version":3,"sources":["webpack:///9.js","webpack:///./www/src/js/datetime-picker.js","webpack:///./~/jquery-timepicker/jquery.timepicker.js"],"names":["webpackJsonp","126","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_jquery_timepicker_jquery_timepicker__","__WEBPACK_IMPORTED_MODULE_1_moment__","n","__WEBPACK_IMPORTED_MODULE_1_moment___default","DatetimePicker","this","styleWrapper","$","document","body","append","renderInputs","$input","dateValue","timeValue","$row","$left","$right","$date","$time","val","data","attr","parent","on","each","index","input","split","date","time","Modernizr","touch","inputtypes","timepicker","change","trigger","content","yearRange","inputName","popover","container","placement","html","indexOf","$popover","e","preventDefault","options","changeMonth","changeYear","defaultDate","toDate","onSelect","selected","datepicker","format","174","exports","jQuery","undefined","pad","str","ch","length","Array","join","normalize","arguments","fn","parseTime","Date","getHours","getMinutes","getSeconds","TimePicker","widget","ui","find","addClass","appendTo","hide","viewport","jquery","delegate","activate","deactivate","event","select","count","_instance","prototype","keyCode","ALT","BLOQ_MAYUS","CTRL","DOWN","END","ENTER","HOME","LEFT","NUMPAD_ENTER","PAGE_DOWN","PAGE_UP","RIGHT","SHIFT","TAB","UP","_items","i","startTime","end","ul","item","timeFormat","interval","Math","max","round","startHour","startMinutes","getTime","_isValidTime","text","formatTime","children","min","minTime","minHour","minMinutes","maxTime","maxHour","maxMinutes","_hasScroll","m","prop","height","_move","direction","edge","closed","open","active","next","eq","register","node","element","metadata","extend","previous","first","last","close","destroy","parse","setTime","silent","option","name","_setDefaultTime","_addInputEventsHandlers","defaultTime","getFullYear","bind","which","setTimeout","offset","top","scroll","scrollTop","removeClass","removeAttr","prevAll","nextAll","selectedTime","arrange","dynamic","dropdown","random","get","target","blur","rebuild","items","remove","detach","show","theme","hasClass","scrollbar","css","paddingRight","containerDecorationHeight","outerHeight","zindex","offsetParent","elementOffset","left","width","outerWidth","zIndex","cursor","calculatedWidth","unbind","is","current","isFunction","apply","destructive","inArray","defaults","methods","chainable","method","result","args","slice","call","makeArray","shift","globals","hours","hours12","minutes","seconds","replacements","hh","toString","HH","mm","ss","h","H","s","p","k","hasOwnProperty","replace","RegExp","patterns","am","pm","toLowerCase","test","substr","parseInt","setHours"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YAMA,SAASC,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCALhHC,OAAOC,eAAeP,EAAqB,cAAgBQ,OAAO,GAC7C,IAAIC,GAAoER,EAAoB,KAExFS,GAD4ET,EAAoBU,EAAEF,GAC3DR,EAAoB,IAC3DW,EAA+CX,EAAoBU,EAAED,GCPxFG,EACF,QAAAA,kBAAcX,gBAAAY,KAAAD,eAEV,IAAIE,GAAeC,EAAE,wCAErBA,GAAEC,SAASC,MAAMC,OAAOJ,EAExB,IAAIK,GAAe,SAAUC,EAAQC,EAAWC,GAC5C,GAAIC,GAASR,EAAE,2BACXS,EAAST,EAAE,gCACXU,EAASV,EAAE,gCACXW,EAASX,EAAE,yDACXY,EAASZ,EAAE,wDAEfQ,GAAKL,OAAOM,GACZD,EAAKL,OAAOO,GAEZD,EAAMN,OAAOQ,GACbD,EAAOP,OAAOS,GAEdD,EAAME,IAAIP,GACVM,EAAMC,IAAIN,GAEVI,EAAMG,KAAK,QAAST,EAAOU,KAAK,SAChCH,EAAME,KAAK,QAAST,EAAOU,KAAK,SAEhCV,EAAOW,SAASb,OAAOK,GAEvBG,EAAMM,GACF,SACA,WACIZ,EAAOQ,IAAIF,EAAME,MAAQ,IAAMD,EAAMC,SAI7CD,EAAMK,GACF,SACA,WACIZ,EAAOQ,IAAIF,EAAME,MAAQ,IAAMD,EAAMC,SAKjDb,GAAE,oBAAoBkB,KAClB,SAAUC,EAAOC,GACb,GAAIf,GAASL,EAAEoB,GACX5B,EAASa,EAAOQ,MAAMQ,MAAM,KAC5BC,EAAS9B,EAAM,GACf+B,EAAS/B,EAAM,EAEnBa,GAAOU,KAAK,OAAQ,UAEpBX,EAAaC,EAAQiB,EAAMC,KAI/BC,UAAUC,OAASD,UAAUE,WAAWJ,MACxCtB,EAAE,eAAee,KAAK,OAAQ,QAC9Bf,EAAE,eAAee,KAAK,OAAQ,UAE9Bf,EAAE,eAAe2B,YACbC,OAAQ,WACJ5B,EAAEF,MAAM+B,QAAQ,aAIxB7B,EAAE,eAAekB,KACb,SAAUC,EAAOC,GACb,GACIU,GACAC,EAFA1B,EAASL,EAAEoB,GAGXY,EAAY3B,EAAOU,KAAK,OAE5Be,GAAW,+CAAiDzB,EAAOS,KAAK,SAAW,KACnFgB,GAAW,8CACXA,GAAW,8DACXA,GAAW,OACXA,GAAW,mCACXA,GAAW,SAEXzB,EAAO4B,SACHC,UAAWnC,EACXoC,UAAW,SACXN,QAAW,SACXC,QAAWA,EACXM,MAAW,IAIXL,EADAC,GAAaA,EAAUK,QAAQ,cAAgB,EACnC,UAEA,YAGhBhC,EAAOY,GACH,QACA,WACI,GAAIqB,EAEJjC,GAAO4B,QAAQ,QACfK,EAAWtC,EAAE,gBAAkBK,EAAOS,KAAK,SAAW,oBAEtDd,EAAE,gBAAkBK,EAAOS,KAAK,SAAW,QAAQG,GAC/C,QACA,SAAUsB,GACNA,EAAEC,iBACFnC,EAAO4B,QAAQ,SAIvB,IAAIQ,IACAC,aAAa,EACbC,YAAa,EACbZ,UAAaA,EACba,YAAahD,IAAOS,EAAOQ,MAAO,cAAcgC,SAChDC,SAAU,SAAUP,GAChB,GAAIQ,GAAWT,EAASU,WAAW,UAE/BD,GACA1C,EAAOQ,IAAIjB,IAAOmD,GAAUE,OAAO,eAEnC5C,EAAOQ,IAAI,IAGfR,EAAOwB,QAAQ,UACfxB,EAAO4B,QAAQ,SAIvBK,GAASU,WAAWP,KAI5BzC,EAAE,2BAA2BiB,GACzB,QACA,WACQnB,OAASO,EAAO,IAChBA,EAAO4B,QAAQ,aAU/CjD,GAAA,WDFMkE,IACA,SAAUnE,EAAQoE,GE5IxB,mBAAAC,SACA,SAAApD,EAAAqD,GAEA,QAAAC,KAAAC,EAAAC,EAAAC,GACA,UAAAC,OAAAD,EAAA,EAAAF,EAAAE,QAAAE,KAAAH,GAAAD,EAGA,QAAAK,aACA,OAAAC,UAAAJ,OAAA,CACA,GAAAnC,GAAAuC,UAAA,EAIA,OAHA,gBAAAvC,KACAA,EAAAtB,EAAA8D,GAAAnC,WAAAoC,UAAAzC,IAEA,GAAA0C,MAAA,MAAA1C,EAAA2C,WAAA3C,EAAA4C,aAAA5C,EAAA6C,cACa,WAAAN,UAAAJ,OACb,GAAAO,MAAA,MAAAH,UAAA,GAAAA,UAAA,GAAAA,UAAA,IACa,IAAAA,UAAAJ,OACb,GAAAO,MAAA,MAAAH,UAAA,GAAAA,UAAA,MAEA,GAAAG,MAAA,OAIAhE,EAAAoE,WAAA,WACA,GAAAC,GAAAvE,IAEAuE,GAAAnC,UAAAlC,EAAA,4BACAqE,EAAAC,GAAAD,EAAAnC,UAAAqC,KAAA,kBAEA,IAAAF,EAAAnC,UAAAuB,SACAY,EAAAnC,UAAAlC,EAAA,eAAAwE,SAAA,2BACAA,SAAA,yCACAC,SAAA,QACAC,OACAL,EAAAC,GAAAtE,EAAA,eAAAwE,SAAA,iBACAA,SAAA,uCACAA,SAAA,iBACAC,SAAAJ,EAAAnC,WACAmC,EAAAM,SAAA3E,EAAA,aAAAwE,SAAA,0BACAC,SAAAJ,EAAAC,IAEAtE,EAAA8D,GAAAc,QAAA,SACAP,EAAAC,GAAAO,SAAA,uCAGAR,EAAAS,UAAA,EAAA9E,EAAAF,MAAAkB,YACqB6D,SAAA,uCACrBR,EAAAU,YAAA,KACqBF,SAAA,gCAAAG,GACrBA,EAAAxC,iBACA6B,EAAAY,QAAA,EAAAjF,EAAAF,MAAAkB,cAMAhB,EAAAoE,WAAAc,MAAA,EACAlF,EAAAoE,WAAAjF,SAAA,WAIA,MAHAa,GAAAoE,WAAAe,YACAnF,EAAAoE,WAAAe,UAAA,GAAAnF,GAAAoE,YAEApE,EAAAoE,WAAAe,WAGAnF,EAAAoE,WAAAgB,WAGAC,SACAC,IAAA,GACAC,WAAA,GACAC,KAAA,GACAC,KAAA,GACAC,IAAA,GACAC,MAAA,GACAC,KAAA,GACAC,KAAA,GACAC,aAAA,IACAC,UAAA,GACAC,QAAA,GACAC,MAAA,GACAC,MAAA,GACAC,IAAA,EACAC,GAAA,IAGAC,OAAA,SAAAC,EAAAC,GACA,GAAAhF,GAAAiF,EAAAnC,EAAAvE,KAAA2G,EAAAzG,EAAA,aAAA0G,EAAA,IAkBA,MAdA,IAAAJ,EAAA7D,QAAAkE,WAAAtE,QAAA,MAAAiE,EAAA7D,QAAAmE,SAAA,QACAN,EAAA7D,QAAAmE,SAAA,GAAAC,KAAAC,IAAAD,KAAAE,MAAAT,EAAA7D,QAAAmE,SAAA,QAIArF,EADAgF,EACA3C,UAAA2C,GACiBD,EAAA7D,QAAA8D,UACjB3C,UAAA0C,EAAA7D,QAAA8D,WAEA3C,UAAA0C,EAAA7D,QAAAuE,UAAAV,EAAA7D,QAAAwE,cAGAT,EAAA,GAAAxC,MAAAzC,EAAA2F,UAAA,OAEA3F,EAAAiF,GACAnC,EAAA8C,aAAAb,EAAA/E,KACAmF,EAAA1G,EAAA,QAAAwE,SAAA,gBAAAC,SAAAgC,GACAzG,EAAA,OAAAwE,SAAA,iBAAA4C,KAAApH,EAAA8D,GAAAnC,WAAA0F,WAAAf,EAAA7D,QAAAkE,WAAApF,IAAAkD,SAAAiC,GACAA,EAAA5F,KAAA,aAAAS,IAEAA,EAAA,GAAAyC,MAAAzC,EAAA2F,UAAA,GAAAZ,EAAA7D,QAAAmE,SAAA,IAGA,OAAAH,GAAAa,YAGAH,aAAA,SAAAb,EAAA/E,GACA,GAAAgG,GAAA,KAAAT,EAAA,IAgBA,OAdAvF,GAAAqC,UAAArC,GAEA,OAAA+E,EAAA7D,QAAA+E,QACAD,EAAA3D,UAAA0C,EAAA7D,QAAA+E,SACiB,OAAAlB,EAAA7D,QAAAgF,SAAA,OAAAnB,EAAA7D,QAAAiF,aACjBH,EAAA3D,UAAA0C,EAAA7D,QAAAgF,QAAAnB,EAAA7D,QAAAiF,aAGA,OAAApB,EAAA7D,QAAAkF,QACAb,EAAAlD,UAAA0C,EAAA7D,QAAAkF,SACiB,OAAArB,EAAA7D,QAAAmF,SAAA,OAAAtB,EAAA7D,QAAAoF,aACjBf,EAAAlD,UAAA0C,EAAA7D,QAAAmF,QAAAtB,EAAA7D,QAAAoF,aAGA,OAAAN,GAAA,OAAAT,EACAvF,GAAAgG,GAAAhG,GAAAuF,EACiB,OAAAS,EACjBhG,GAAAgG,EACiB,OAAAT,GACjBvF,GAAAuF,GAMAgB,WAAA,WAEA,GAAAC,OAAA,KAAAjI,KAAAwE,GAAA0D,KAAA,aACA,OAAAlI,MAAAwE,GAAA2D,SAAAnI,KAAAwE,GAAAyD,GAAA,iBAUAG,MAAA,SAAA5B,EAAA6B,EAAAC,GACA,GAAA/D,GAAAvE,IAIA,IAHAuE,EAAAgE,UACAhE,EAAAiE,KAAAhC,IAEAjC,EAAAkE,OAEA,WADAlE,GAAAS,SAAAwB,EAAAjC,EAAAM,SAAA2C,SAAAc,GAGA,IAAAI,GAAAnE,EAAAkE,OAAAJ,EAAA,wBAAAM,GAAA,EACAD,GAAA/E,OACAY,EAAAS,SAAAwB,EAAAkC,GAEAnE,EAAAS,SAAAwB,EAAAjC,EAAAM,SAAA2C,SAAAc,KAQAM,SAAA,SAAAC,EAAAlG,GACA,GAAA4B,GAAAvE,KAAAwG,IAEAA,GAAAsC,QAAA5I,EAAA2I,GAEArC,EAAAsC,QAAA9H,KAAA,gBAIAwF,EAAA7D,QAAAzC,EAAA6I,SAAA7I,EAAA8I,UAAoDrG,EAAA6D,EAAAsC,QAAAC,YAAA7I,EAAA8I,UAA8CrG,GAClG6D,EAAAjC,SAGArE,EAAA8I,OAAAxC,GACAkC,KAAA,WAAsC,MAAAnE,GAAAmE,KAAAlC,IACtCyC,SAAA,WAA0C,MAAA1E,GAAA0E,SAAAzC,IAC1C0C,MAAA,WAAuC,MAAA3E,GAAA2E,MAAA1C,IACvC2C,KAAA,WAAsC,MAAA5E,GAAA4E,KAAA3C,IACtCvD,SAAA,WAA0C,MAAAsB,GAAAtB,SAAAuD,IAC1CgC,KAAA,WAAsC,MAAAjE,GAAAiE,KAAAhC,IACtC4C,MAAA,WAAuC,MAAA7E,GAAA6E,MAAA5C,IACvC+B,OAAA,WAAwC,MAAAhE,GAAAgE,OAAA/B,IACxC6C,QAAA,WAAyC,MAAA9E,GAAA8E,QAAA7C,IAEzC8C,MAAA,SAAA7F,GAA0C,MAAAc,GAAA+E,MAAA9C,EAAA/C,IAC1CN,OAAA,SAAA1B,EAAA0B,GAAoD,MAAAoB,GAAApB,OAAAqD,EAAA/E,EAAA0B,IACpDiE,QAAA,WAAyC,MAAA7C,GAAA6C,QAAAZ,IACzC+C,QAAA,SAAA9H,EAAA+H,GAAqD,MAAAjF,GAAAgF,QAAA/C,EAAA/E,EAAA+H,IACrDC,OAAA,SAAAC,EAAAhK,GAAmD,MAAA6E,GAAAkF,OAAAjD,EAAAkD,EAAAhK,MAGnD6E,EAAAoF,gBAAAnD,GACAjC,EAAAqF,wBAAApD,GAEAA,EAAAsC,QAAA9H,KAAA,aAAAwF,KAGAmD,gBAAA,SAAAnD,GACA,QAAAA,EAAA7D,QAAAkH,YACArD,EAAA+C,QAAAzF,UAAA,GAAAI,QACiBsC,EAAA7D,QAAAkH,aAAArD,EAAA7D,QAAAkH,YAAAC,YACjBtD,EAAA+C,QAAAzF,UAAA0C,EAAA7D,QAAAkH,cACiBrD,EAAA7D,QAAAkH,aACjBrD,EAAA+C,QAAArJ,EAAA8D,GAAAnC,WAAAoC,UAAAuC,EAAA7D,QAAAkH,eAIAD,wBAAA,SAAApD,GACA,GAAAjC,GAAAvE,IAEAwG,GAAAsC,QAAAiB,KAAA,8BAAA7E,GACA,OAAAA,EAAA8E,OAAA9E,EAAAK,SACA,IAAAhB,GAAAgB,QAAAM,MACA,IAAAtB,GAAAgB,QAAAS,aACAd,EAAAxC,iBACA6B,EAAAgE,SACA/B,EAAAsC,QAAA/G,QAAA,qBAEAwC,EAAAY,OAAAqB,EAAAjC,EAAAkE,OAEA,MACA,KAAAlE,GAAAgB,QAAAe,GACAE,EAAAyC,UACA,MACA,KAAA1E,GAAAgB,QAAAI,KACAa,EAAAkC,MACA,MACA,SACAnE,EAAAgE,UACA/B,EAAA4C,OAAA,MAIiBW,KAAA,8BACjBvD,EAAAgC,SACiBuB,KAAA,6BACjBE,WAAA,WACAzD,EAAAsC,QAAA9H,KAAA,oCACAwF,EAAA4C,YAGiBW,KAAA,+BACjBvD,EAAA+B,UACA/B,EAAA+C,QAAArJ,EAAA8D,GAAAnC,WAAAoC,UAAAuC,EAAAsC,QAAA/H,WAKAoE,OAAA,SAAAqB,EAAAI,GACA,GAAArC,GAAAvE,KAAAX,GAAA,IAAAmH,EAAAjC,EAAAlF,SAAAmH,CACAjC,GAAAgF,QAAAlK,EAAAa,EAAA8D,GAAAnC,WAAAoC,UAAA2C,EAAAY,SAAA,KAAAF,SACA/C,EAAA6E,MAAA/J,GAAA,IAGA2F,SAAA,SAAAwB,EAAAI,GACA,GAAArC,GAAAvE,IAEA,MAFA,IAAAwG,EAAAjC,EAAAlF,SAAAmH,KAEAjC,EAAAlF,SAAA,CAMA,GAHAkF,EAAAU,aAGAV,EAAAyD,aAAA,CACA,GAAAkC,GAAAtD,EAAAsD,SAAAC,IAAA5F,EAAAC,GAAA0F,SAAAC,IACAC,EAAA7F,EAAAC,GAAA6F,YACAlC,EAAA5D,EAAAC,GAAA2D,QACA+B,GAAA,EACA3F,EAAAC,GAAA6F,UAAAD,EAAAF,GACqBA,GAAA/B,GACrB5D,EAAAC,GAAA6F,UAAAD,EAAAF,EAAA/B,EAAAvB,EAAAuB,UAIA5D,EAAAkE,OAAA7B,EAAA+B,GAAA,GAAAnB,SAAA,KAAA9C,SAAA,kBACAzD,KAAA,uBACAyF,QAGAzB,WAAA,WACA,GAAAV,GAAAvE,IACAuE,GAAAkE,SACAlE,EAAAkE,OAAAjB,SAAA,KAAA8C,YAAA,kBAAAC,WAAA,MACAhG,EAAAkE,OAAA,OAaAC,KAAA,SAAAlC,GAIA,OAHAxG,KAAAuI,UAAAvI,KAAAX,WAAAmH,IACAxG,KAAAoI,MAAA5B,EAAA,8BAEAA,EAAAsC,SAGAG,SAAA,SAAAzC,GAIA,OAHAxG,KAAAuI,UAAAvI,KAAAX,WAAAmH,IACAxG,KAAAoI,MAAA5B,EAAA,6BAEAA,EAAAsC,SAGAI,MAAA,SAAA1C,GACA,MAAAxG,MAAAX,WAAAmH,IACAxG,KAAAyI,QAAA,IAAAzI,KAAAyI,OAAA+B,QAAA,iBAAA7G,SAKAwF,KAAA,SAAA3C,GACA,MAAAxG,MAAAX,WAAAmH,IACAxG,KAAAyI,QAAA,IAAAzI,KAAAyI,OAAAgC,QAAA,iBAAA9G,SAKAV,SAAA,SAAAuD,GACA,MAAAxG,MAAAX,WAAAmH,GACAxG,KAAAyI,OAAAzI,KAAAyI,OAEA,MAGAD,KAAA,SAAAhC,GACA,GAAAjC,GAAAvE,KACA0K,EAAAlE,EAAAY,UACAuD,EAAAnE,EAAA7D,QAAAiI,SAAAF,CAGA,KAAAlE,EAAA7D,QAAAkI,SAA0C,MAAArE,GAAAsC,OAkD1C,QA9CAtC,EAAAsC,QAAA9H,KAAA,6BAAA+F,KAAA+D,UAEA5K,EAAAC,UAAA4J,KAAA,oBAAAvD,EAAAsC,QAAA9H,KAAA,uCAAAkE,GACAsB,EAAAsC,QAAAiC,IAAA,KAAA7F,EAAA8F,OACAxE,EAAAsC,QAAA9H,KAAA,sCAEAwF,EAAAsC,QAAA9H,KAAA,sCAAAiK,UAQAzE,EAAA0E,UAAA1E,EAAA2E,OAAAR,KACAnE,EAAA2E,MAAA5G,EAAAgC,OAAAC,EAAAmE,EAAAD,EAAA,QAKAlE,EAAA0E,SAAA3G,EAAAlF,WAAAmH,GAAAmE,KAIAzK,EAAA8D,GAAAc,OAAA,SACAP,EAAAM,SAAA2C,WAAA4D,SACA7G,EAAAM,SAAAxE,OAAAmG,EAAA2E,OACA5G,EAAAM,SAAAJ,KAAA,KAAAsF,KAAA,kCACAxF,EAAAS,SAAAwB,EAAAtG,EAAAF,MAAAkB,YACyB6I,KAAA,iCACzBxF,EAAAU,WAAAuB,KACyBuD,KAAA,4BAAA7E,GACzBA,EAAAxC,iBACA6B,EAAAY,OAAAqB,EAAAtG,EAAAF,MAAAkB,cAGAqD,EAAAM,SAAA2C,WAAA6D,SACA9G,EAAAM,SAAAxE,OAAAmG,EAAA2E,SAIA3E,EAAA0E,SAAA,EAGA3G,EAAAnC,UAAAkI,YAAA,sFAAAgB,OAEA9E,EAAA7D,QAAA4I,OACA,eACAhH,EAAAnC,UAAAsC,SAAA,yBACA,MACA,gCACAH,EAAAnC,UAAAsC,SAAA,gDAWAH,EAAAnC,UAAAoJ,SAAA,+BAAAhF,EAAA7D,QAAA8I,YACAlH,EAAAnC,UAAAsC,SAAA,8BACAH,EAAAM,SAAA6G,KAA0CC,aAAA,KAG1C,IAAAC,GAAArH,EAAAnC,UAAAyJ,cAAAtH,EAAAnC,UAAA+F,SACA2D,EAAAtF,EAAA7D,QAAAmJ,OAAAtF,EAAA7D,QAAAmJ,OAAAtF,EAAAsC,QAAAiD,eAAAL,IAAA,WACAM,EAAAxF,EAAAsC,QAAAoB,QAGA3F,GAAAnC,UAAAsJ,KACAvB,IAAA6B,EAAA7B,IAAA3D,EAAAsC,QAAA+C,cACAI,KAAAD,EAAAC,OAMA1H,EAAAnC,UAAAkJ,OAKA/G,EAAAnC,UAAAsJ,KACAO,KAAAzF,EAAAsC,QAAAoB,SAAA+B,KACA9D,OAAA5D,EAAAC,GAAAqH,cAAAD,EACAM,MAAA1F,EAAAsC,QAAAqD,aACAC,OAAAN,EACAO,OAAA,WAGA,IAAAC,GAAA/H,EAAAnC,UAAA8J,SAAA3H,EAAAC,GAAA2H,aAAA5H,EAAAC,GAAA0H,QAiCA,OA9BA3H,GAAAC,GAAAkH,KAAgCQ,MAAAI,IAChC/H,EAAAM,SAAA6G,KAAsCQ,MAAAI,IACtC9F,EAAA2E,MAAAO,KAA8BQ,MAAAI,IAG9B/H,EAAAlF,SAAAmH,EAIAkE,EACAlE,EAAA2E,MAAA/J,KAAA,WACA,GAAAK,GAAAmF,EAAA1G,EAAAF,KAQA,OALAyB,GADAvB,EAAA8D,GAAAc,OAAA,QACA5E,EAAA8D,GAAAnC,WAAAoC,UAAA2C,EAAAnC,KAAA,KAAA6C,QAEAV,EAAA5F,KAAA,cAGAS,EAAA2F,YAAAsD,EAAAtD,YACA7C,EAAAS,SAAAwB,EAAAI,IACA,KAKArC,EAAAU,WAAAuB,GAIAA,EAAAsC,SAGAM,MAAA,SAAA5C,GACA,GAAAjC,GAAAvE,IAUA,OARAuE,GAAAlF,WAAAmH,IACAjC,EAAAnC,UAAAsC,SAAA,yCAAAE,OACAL,EAAAC,GAAA6F,UAAA,GACA9F,EAAAC,GAAAgD,WAAA8C,YAAA,mBAGApK,EAAAC,UAAAoM,OAAA,oBAAA/F,EAAAsC,QAAA9H,KAAA,+BAEAwF,EAAAsC,SAGAP,OAAA,WACA,MAAAvI,MAAAwE,GAAAgI,GAAA,YAGAnD,QAAA,SAAA7C,GAGA,MAFAxG,MACAoJ,MAAA5C,GAAA,GACAA,EAAAsC,QAAAyD,OAAA,eAAAvL,KAAA,oBAKAsI,MAAA,SAAA9C,EAAA/C,GACA,MAAAvD,GAAA8D,GAAAnC,WAAAoC,UAAAR,IAGAN,OAAA,SAAAqD,EAAA/E,EAAA0B,GAEA,MADAA,MAAAqD,EAAA7D,QAAAkE,WACA3G,EAAA8D,GAAAnC,WAAA0F,WAAApE,EAAA1B,IAGA2F,QAAA,SAAAZ,GACA,GAAAjC,GAAAvE,KACAyM,EAAAvM,EAAA8D,GAAAnC,WAAAoC,UAAAuC,EAAAsC,QAAA/H,MAKA,OAAA0L,aAAAvI,QAAAK,EAAA8C,aAAAb,EAAAiG,GACA,KACiBA,YAAAvI,OAAAsC,EAAAkE,aAKjBlE,EAAArD,OAAAsJ,KAAAjG,EAAArD,OAAAqD,EAAAkE,cACAlE,EAAAkE,aAEA+B,EAEiBA,YAAAvI,MACjBuI,EAEA,MAIAlD,QAAA,SAAA/C,EAAA/E,EAAA+H,GACA,GAAAjF,GAAAvE,KAAAiJ,EAAAzC,EAAAkE,YAMA,IAJA,gBAAAjJ,KACAA,EAAA+E,EAAA8C,MAAA7H,IAGAA,KAAA2C,YAAAG,EAAA8C,aAAAb,EAAA/E,IAMA,GALAA,EAAAqC,UAAArC,GACA+E,EAAAkE,aAAAjJ,EACA+E,EAAAsC,QAAA/H,IAAAyF,EAAArD,OAAA1B,EAAA+E,EAAA7D,QAAAkE,aAGA2C,EAAiC,MAAAhD,OAEjCA,GAAAkE,aAAA,IAYA,OAPA,QAAAzB,GAAA,OAAAzC,EAAAkE,eACAlE,EAAAsC,QAAA/G,QAAA,eAAAN,IACAvB,EAAAwM,WAAAlG,EAAA7D,QAAAb,SACA0E,EAAA7D,QAAAb,OAAA6K,MAAAnG,EAAAsC,SAAArH,KAIA+E,EAAAsC,SAGAW,OAAA,SAAAjD,EAAAkD,EAAAhK,GACA,YAAAA,EACA,MAAA8G,GAAA7D,QAAA+G,EAGA,IACA/G,GAAAiK,EADAnL,EAAA+E,EAAAY,SAGA,iBAAAsC,IACA/G,KACAA,EAAA+G,GAAAhK,GAEAiD,EAAA+G,EAIAkD,GAAA,iCACA,iCACA,uCACA,oCAGA1M,EAAAkB,KAAAuB,EAAA,SAAA+G,GACAlD,EAAA7D,QAAA+G,GAAA/G,EAAA+G,GACAlD,EAAA0E,QAAA1E,EAAA0E,SAAAhL,EAAA2M,QAAAnD,EAAAkD,IAAA,IAGApG,EAAA0E,SACA1E,EAAA+C,QAAA9H,KAKAvB,EAAAoE,WAAAwI,UACAjG,WAAA,UACAc,QAAA,KACAC,WAAA,KACAF,QAAA,KACAI,QAAA,KACAC,WAAA,KACAF,QAAA,KACAX,UAAA,KACAC,aAAA,KACAV,UAAA,KACAK,SAAA,GACA8D,SAAA,EACAW,MAAA,WACAO,OAAA,KACAjB,UAAA,EACAY,WAAA,EAEA3J,OAAA,cAGA5B,EAAAoE,WAAAyI,SACAC,WACA,OACA,WACA,OACA,QACA,UACA,YAIA9M,EAAA8D,GAAAnC,WAAA,SAAAc,GAGA,mBAAAA,GAAA,CACA,GACAsK,GAAAC,EADAC,EAAAvJ,MAAA0B,UAAA8H,MAAAC,KAAAtJ,UAAA,EAoBA,OAfAkJ,GADA,WAAAtK,GAAAoB,UAAAJ,OAAA,EACA,QACiB,IAAAzD,EAAA2M,QAAAlK,EAAAzC,EAAAoE,WAAAyI,QAAAC,WACjB,OAGA,MAGAE,EAAAlN,KAAAiN,GAAA,WACA,GAAAnE,GAAA5I,EAAAF,MAAAwG,EAAAsC,EAAA9H,KAAA,aACA,oBAAAwF,GACA,MAAAA,GAAA7D,GAAAgK,MAAAnG,EAAA2G,KAIA,QAAAF,GAAA,IAAAjN,KAAA2D,OACAzD,EAAAoN,UAAAJ,GAAAK,QACiB,QAAAN,EACjB/M,EAAAoN,UAAAJ,GAEAA,EAMA,OAAAlN,KAAA2D,QAAA3D,KAAAgB,KAAA,cACA,MAAAhB,MAAAgB,KAAA,aAGA,IAAAwM,GAAAtN,EAAA8I,UAAqC9I,EAAAoE,WAAAwI,SAAAnK,EAErC,OAAA3C,MAAAoB,KAAA,WACAlB,EAAAoE,WAAAjF,WAAAuJ,SAAA5I,KAAAwN,MAOAtN,EAAA8D,GAAAnC,WAAA0F,WAAA,SAAApE,EAAA1B,GACA,GAAAgM,GAAAhM,EAAA0C,WACAuJ,EAAAD,EAAA,GACAE,EAAAlM,EAAA2C,aACAwJ,EAAAnM,EAAA4C,aACAwJ,GACAC,GAAAtK,KAAA,IAAAkK,EAAA,GAAAA,GAAAK,WAAA,OACAC,GAAAxK,IAAAiK,EAAAM,WAAA,OACAE,GAAAzK,IAAAmK,EAAAI,WAAA,OACAG,GAAA1K,IAAAoK,EAAAG,WAAA,OACAI,EAAA,IAAAT,EAAA,GAAAA,EACAU,EAAAX,EACAxF,EAAA0F,EACAU,EAAAT,EACAU,EAAAb,EAAA,cAEAhK,EAAAN,EAAAoL,EAAA,EACA,KAAAA,IAAAV,GACAA,EAAAW,eAAAD,KACA9K,IAAAgL,QAAA,GAAAC,QAAAH,EAAA,KAAAV,EAAAU,IAKA,OADA9K,KAAAgL,QAAA,GAAAC,QAAA,SAAAjB,EAAA,eAwCAvN,EAAA8D,GAAAnC,WAAAoC,UAAA,WACA,GAAA0K,KAEA,iBAEA,kBAEA,iBAEA,4BACA,yBACA,kBAAmC,WAEnC,6BACA,0BACA,0BAEA,kBAA8B,UAC9B,qBAAuC,SAEvC,iCACA,yBAA+B,YAE/BhL,EAAAgL,EAAAhL,MAEA,iBAAAF,GACA,GAAAhC,GAAAqC,UAAA,GAAAI,OACA0K,GAAA,EAAAC,GAAA,EAAAV,GAAA,EAAAlG,GAAA,EAAAoG,GAAA,CAEA,aAAA5K,MAAAqL,YAAqE,WAErErL,KAAAqL,cACAF,EAAA,IAAAG,KAAAtL,GACAoL,GAAAD,GAAA,IAAAG,KAAAtL,GACAA,IAAAgL,QAAA,eAAAA,QAAA,UAEA,QAAAF,GAAA,EAA+BA,EAAA5K,EAAY4K,GAAA,EAC3C,GAAAI,EAAAJ,GAAA,GAAAQ,KAAAtL,GAAA,CACAA,IAAAgL,QAAAE,EAAAJ,GAAA,GAAAI,EAAAJ,GAAA,GACA,OA0BA,MAvBA9K,KAAAgL,QAAA,SAEA,IAAAhL,EAAAE,OACAwK,EAAA1K,EACiB,IAAAA,EAAAE,OACjBwK,EAAA1K,EACiB,IAAAA,EAAAE,QAAA,IAAAF,EAAAE,QACjBwK,EAAA1K,EAAAuL,OAAA,KACA/G,EAAAxE,EAAAuL,OAAA,KACAX,EAAA5K,EAAAuL,OAAA,OACiB,IAAAvL,EAAAE,QAAAF,EAAAE,OAAA,KACjBwK,EAAA1K,EAAAuL,OAAA,KACA/G,EAAAxE,EAAAuL,OAAA,KACAX,EAAA5K,EAAAuL,OAAA,MAGAvL,EAAAE,OAAA,GAAAF,EAAAE,OAAA,IACAF,EAAAE,OAAA,IACAsE,EAAA,GAEAoG,EAAA,IAGA,IAAAF,IAAA,IAAAlG,IAAA,IAAAoG,IAIAF,EAAAc,SAAAd,EAAA,IACAlG,EAAAgH,SAAAhH,EAAA,IACAoG,EAAAY,SAAAZ,EAAA,IAEAO,GAAA,KAAAT,EACAA,EAAA,EACiBU,GAAAV,EAAA,KACjBA,GAAA,IAGAA,EAAA,GACA1K,EAAAE,QAAA,EACAzD,EAAA8D,GAAAnC,WAAAoC,UAAAR,EAAAuL,OAAA,MAEA9O,EAAA8D,GAAAnC,WAAAoC,UAAAR,EAAA,KAAAmL,EAAA,SAAAC,EAAA,UAGApN,EAAAyN,SAAAf,EAAAlG,EAAAoG,GACA5M,SAIK6B","file":"9.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 126:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery_timepicker_jquery_timepicker__ = __webpack_require__(174);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery_timepicker_jquery_timepicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery_timepicker_jquery_timepicker__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\nvar DatetimePicker = function DatetimePicker() {\n    _classCallCheck(this, DatetimePicker);\n\n    // Used to append popovers.  Avoids WP and Bootstrap CSS conflicts.\n    var styleWrapper = $('<div class=\"bootstrap-wrapper\"></div>');\n\n    $(document.body).append(styleWrapper);\n\n    var renderInputs = function renderInputs($input, dateValue, timeValue) {\n        var $row = $('<div class=\"row\"></div>'),\n            $left = $('<div class=\"col-xs-6\"></div>'),\n            $right = $('<div class=\"col-xs-6\"></div>'),\n            $date = $('<input type=\"text\" class=\"date-input form-control\" />'),\n            $time = $('<input type=\"text\" class=\"time-input form-control\" />');\n\n        $row.append($left);\n        $row.append($right);\n\n        $left.append($date);\n        $right.append($time);\n\n        $date.val(dateValue);\n        $time.val(timeValue);\n\n        $date.data('input', $input.attr('name'));\n        $time.data('input', $input.attr('name'));\n\n        $input.parent().append($row);\n\n        $date.on('change', function () {\n            $input.val($date.val() + ' ' + $time.val());\n        });\n\n        $time.on('change', function () {\n            $input.val($date.val() + ' ' + $time.val());\n        });\n    };\n\n    $('.input-timestamp').each(function (index, input) {\n        var $input = $(input),\n            value = $input.val().split(' '),\n            date = value[0],\n            time = value[1];\n\n        $input.attr('type', 'hidden');\n\n        renderInputs($input, date, time);\n    });\n\n    if (Modernizr.touch && Modernizr.inputtypes.date) {\n        $('.date-input').attr('type', 'date');\n        $('.time-input').attr('type', 'time');\n    } else {\n        $('.time-input').timepicker({\n            change: function change() {\n                $(this).trigger('change');\n            }\n        });\n\n        $('.date-input').each(function (index, input) {\n            var $input = $(input),\n                content,\n                yearRange,\n                inputName = $input.attr('name');\n\n            content = '<div class=\"date-input-popover\" data-input=\"' + $input.data('input') + '\">';\n            content += '<a href=\"#\" class=\"btn btn-link btn-close\">';\n            content += '<span class=\"glyphicon glyphicon-remove text-muted\"></span>';\n            content += '</a>';\n            content += '<div class=\"date-wrapper\"></div>';\n            content += '</div>';\n\n            $input.popover({\n                container: styleWrapper,\n                placement: 'bottom',\n                trigger: 'manual',\n                content: content,\n                html: true\n            });\n\n            if (inputName && inputName.indexOf('birthdate') > -1) {\n                yearRange = '-100:+0';\n            } else {\n                yearRange = '-100:+100';\n            }\n\n            $input.on('focus', function () {\n                var $popover;\n\n                $input.popover('show');\n                $popover = $('[data-input=\"' + $input.data('input') + '\"] .date-wrapper');\n\n                $('[data-input=\"' + $input.data('input') + '\"] a').on('click', function (e) {\n                    e.preventDefault();\n                    $input.popover('hide');\n                });\n\n                var options = {\n                    changeMonth: true,\n                    changeYear: true,\n                    yearRange: yearRange,\n                    defaultDate: __WEBPACK_IMPORTED_MODULE_1_moment___default()($input.val(), 'MM/DD/YYYY').toDate(),\n                    onSelect: function onSelect(e) {\n                        var selected = $popover.datepicker('getDate');\n\n                        if (selected) {\n                            $input.val(__WEBPACK_IMPORTED_MODULE_1_moment___default()(selected).format('MM/DD/YYYY'));\n                        } else {\n                            $input.val('');\n                        }\n\n                        $input.trigger('change');\n                        $input.popover('hide');\n                    }\n                };\n\n                $popover.datepicker(options);\n            });\n\n            $('input, textarea, select').on('focus', function () {\n                if (this !== $input[0]) {\n                    $input.popover('hide');\n                }\n            });\n        });\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DatetimePicker);\n\n/***/ }),\n\n/***/ 174:\n/***/ (function(module, exports) {\n\n/**\n * jQuery Timepicker\n * http://timepicker.co\n *\n * Enhances standard form input fields helping users to select (or type) times.\n *\n * Copyright (c) 2016 Willington Vega; Licensed MIT, GPL\n */\n\nif (typeof jQuery !== 'undefined') {\n    (function($, undefined) {\n\n        function pad(str, ch, length) {\n            return (new Array(length + 1 - str.length).join(ch)) + str;\n        }\n\n        function normalize() {\n            if (arguments.length === 1) {\n                var date = arguments[0];\n                if (typeof date === 'string') {\n                    date = $.fn.timepicker.parseTime(date);\n                }\n                return new Date(0, 0, 0, date.getHours(), date.getMinutes(), date.getSeconds());\n            } else if (arguments.length === 3) {\n                return new Date(0, 0, 0, arguments[0], arguments[1], arguments[2]);\n            } else if (arguments.length === 2) {\n                return new Date(0, 0, 0, arguments[0], arguments[1], 0);\n            } else {\n                return new Date(0, 0, 0);\n            }\n        }\n\n        $.TimePicker = function() {\n            var widget = this;\n\n            widget.container = $('.ui-timepicker-container');\n            widget.ui = widget.container.find('.ui-timepicker');\n\n            if (widget.container.length === 0) {\n                widget.container = $('<div></div>').addClass('ui-timepicker-container')\n                                    .addClass('ui-timepicker-hidden ui-helper-hidden')\n                                    .appendTo('body')\n                                    .hide();\n                widget.ui = $( '<div></div>' ).addClass('ui-timepicker')\n                                    .addClass('ui-widget ui-widget-content ui-menu')\n                                    .addClass('ui-corner-all')\n                                    .appendTo(widget.container);\n                widget.viewport = $('<ul></ul>').addClass( 'ui-timepicker-viewport' )\n                                    .appendTo( widget.ui );\n\n                if ($.fn.jquery >= '1.4.2') {\n                    widget.ui.delegate('a', 'mouseenter.timepicker', function() {\n                        // passing false instead of an instance object tells the function\n                        // to use the current instance\n                        widget.activate(false, $(this).parent());\n                    }).delegate('a', 'mouseleave.timepicker', function() {\n                        widget.deactivate(false);\n                    }).delegate('a', 'click.timepicker', function(event) {\n                        event.preventDefault();\n                        widget.select(false, $(this).parent());\n                    });\n                }\n            }\n        };\n\n        $.TimePicker.count = 0;\n        $.TimePicker.instance = function() {\n            if (!$.TimePicker._instance) {\n                $.TimePicker._instance = new $.TimePicker();\n            }\n            return $.TimePicker._instance;\n        };\n\n        $.TimePicker.prototype = {\n            // extracted from from jQuery UI Core\n            // http://github,com/jquery/jquery-ui/blob/master/ui/jquery.ui.core.js\n            keyCode: {\n                ALT: 18,\n                BLOQ_MAYUS: 20,\n                CTRL: 17,\n                DOWN: 40,\n                END: 35,\n                ENTER: 13,\n                HOME: 36,\n                LEFT: 37,\n                NUMPAD_ENTER: 108,\n                PAGE_DOWN: 34,\n                PAGE_UP: 33,\n                RIGHT: 39,\n                SHIFT: 16,\n                TAB: 9,\n                UP: 38\n            },\n\n            _items: function(i, startTime) {\n                var widget = this, ul = $('<ul></ul>'), item = null, time, end;\n\n                // interval should be a multiple of 60 if timeFormat is not\n                // showing minutes\n                if (i.options.timeFormat.indexOf('m') === -1 && i.options.interval % 60 !== 0) {\n                    i.options.interval = Math.max(Math.round(i.options.interval / 60), 1) * 60;\n                }\n\n                if (startTime) {\n                    time = normalize(startTime);\n                } else if (i.options.startTime) {\n                    time = normalize(i.options.startTime);\n                } else {\n                    time = normalize(i.options.startHour, i.options.startMinutes);\n                }\n\n                end = new Date(time.getTime() + 24 * 60 * 60 * 1000);\n\n                while(time < end) {\n                    if (widget._isValidTime(i, time)) {\n                        item = $('<li>').addClass('ui-menu-item').appendTo(ul);\n                        $('<a>').addClass('ui-corner-all').text($.fn.timepicker.formatTime(i.options.timeFormat, time)).appendTo(item);\n                        item.data('time-value', time);\n                    }\n                    time = new Date(time.getTime() + i.options.interval * 60 * 1000);\n                }\n\n                return ul.children();\n            },\n\n            _isValidTime: function(i, time) {\n                var min = null, max = null;\n\n                time = normalize(time);\n\n                if (i.options.minTime !== null) {\n                    min = normalize(i.options.minTime);\n                } else if (i.options.minHour !== null || i.options.minMinutes !== null) {\n                    min = normalize(i.options.minHour, i.options.minMinutes);\n                }\n\n                if (i.options.maxTime !== null) {\n                    max = normalize(i.options.maxTime);\n                } else if (i.options.maxHour !== null || i.options.maxMinutes !== null) {\n                    max = normalize(i.options.maxHour, i.options.maxMinutes);\n                }\n\n                if (min !== null && max !== null) {\n                    return time >= min && time <= max;\n                } else if (min !== null) {\n                    return time >= min;\n                } else if (max !== null) {\n                    return time <= max;\n                }\n\n                return true;\n            },\n\n            _hasScroll: function() {\n                // fix for jQuery 1.6 new prop method\n                var m = typeof this.ui.prop !== 'undefined' ? 'prop' : 'attr';\n                return this.ui.height() < this.ui[m]('scrollHeight');\n            },\n\n            /**\n             * TODO: Write me!\n             *\n             * @param i\n             * @param direction\n             * @param edge\n             * */\n            _move: function(i, direction, edge) {\n                var widget = this;\n                if (widget.closed()) {\n                    widget.open(i);\n                }\n                if (!widget.active) {\n                    widget.activate( i, widget.viewport.children( edge ) );\n                    return;\n                }\n                var next = widget.active[direction + 'All']('.ui-menu-item').eq(0);\n                if (next.length) {\n                    widget.activate(i, next);\n                } else {\n                    widget.activate( i, widget.viewport.children( edge ) );\n                }\n            },\n\n            //\n            // protected methods\n            //\n\n            register: function(node, options) {\n                var widget = this, i = {}; // timepicker instance object\n\n                i.element = $(node);\n\n                if (i.element.data('TimePicker')) {\n                    return;\n                }\n\n                i.options = $.metadata ? $.extend({}, options, i.element.metadata()) : $.extend({}, options);\n                i.widget = widget;\n\n                // proxy functions for the exposed api methods\n                $.extend(i, {\n                    next: function() {return widget.next(i) ;},\n                    previous: function() {return widget.previous(i) ;},\n                    first: function() { return widget.first(i) ;},\n                    last: function() { return widget.last(i) ;},\n                    selected: function() { return widget.selected(i) ;},\n                    open: function() { return widget.open(i) ;},\n                    close: function() { return widget.close(i) ;},\n                    closed: function() { return widget.closed(i) ;},\n                    destroy: function() { return widget.destroy(i) ;},\n\n                    parse: function(str) { return widget.parse(i, str) ;},\n                    format: function(time, format) { return widget.format(i, time, format); },\n                    getTime: function() { return widget.getTime(i) ;},\n                    setTime: function(time, silent) { return widget.setTime(i, time, silent); },\n                    option: function(name, value) { return widget.option(i, name, value); }\n                });\n\n                widget._setDefaultTime(i);\n                widget._addInputEventsHandlers(i);\n\n                i.element.data('TimePicker', i);\n            },\n\n            _setDefaultTime: function(i) {\n                if (i.options.defaultTime === 'now') {\n                    i.setTime(normalize(new Date()));\n                } else if (i.options.defaultTime && i.options.defaultTime.getFullYear) {\n                    i.setTime(normalize(i.options.defaultTime));\n                } else if (i.options.defaultTime) {\n                    i.setTime($.fn.timepicker.parseTime(i.options.defaultTime));\n                }\n            },\n\n            _addInputEventsHandlers: function(i) {\n                var widget = this;\n\n                i.element.bind('keydown.timepicker', function(event) {\n                    switch (event.which || event.keyCode) {\n                    case widget.keyCode.ENTER:\n                    case widget.keyCode.NUMPAD_ENTER:\n                        event.preventDefault();\n                        if (widget.closed()) {\n                            i.element.trigger('change.timepicker');\n                        } else {\n                            widget.select(i, widget.active);\n                        }\n                        break;\n                    case widget.keyCode.UP:\n                        i.previous();\n                        break;\n                    case widget.keyCode.DOWN:\n                        i.next();\n                        break;\n                    default:\n                        if (!widget.closed()) {\n                            i.close(true);\n                        }\n                        break;\n                    }\n                }).bind('focus.timepicker', function() {\n                    i.open();\n                }).bind('blur.timepicker', function() {\n                    setTimeout(function() {\n                        if (i.element.data('timepicker-user-clicked-outside')) {\n                            i.close();\n                        }\n                    });\n                }).bind('change.timepicker', function() {\n                    if (i.closed()) {\n                        i.setTime($.fn.timepicker.parseTime(i.element.val()));\n                    }\n                });\n            },\n\n            select: function(i, item) {\n                var widget = this, instance = i === false ? widget.instance : i;\n                widget.setTime(instance, $.fn.timepicker.parseTime(item.children('a').text()));\n                widget.close(instance, true);\n            },\n\n            activate: function(i, item) {\n                var widget = this, instance = i === false ? widget.instance : i;\n\n                if (instance !== widget.instance) {\n                    return;\n                } else {\n                    widget.deactivate();\n                }\n\n                if (widget._hasScroll()) {\n                    var offset = item.offset().top - widget.ui.offset().top,\n                        scroll = widget.ui.scrollTop(),\n                        height = widget.ui.height();\n                    if (offset < 0) {\n                        widget.ui.scrollTop(scroll + offset);\n                    } else if (offset >= height) {\n                        widget.ui.scrollTop(scroll + offset - height + item.height());\n                    }\n                }\n\n                widget.active = item.eq(0).children('a').addClass('ui-state-hover')\n                                                        .attr('id', 'ui-active-item')\n                                          .end();\n            },\n\n            deactivate: function() {\n                var widget = this;\n                if (!widget.active) { return; }\n                widget.active.children('a').removeClass('ui-state-hover').removeAttr('id');\n                widget.active = null;\n            },\n\n            /**\n             * _activate, _deactivate, first, last, next, previous, _move and\n             * _hasScroll were extracted from jQuery UI Menu\n             * http://github,com/jquery/jquery-ui/blob/menu/ui/jquery.ui.menu.js\n             */\n\n            //\n            // public methods\n            //\n\n            next: function(i) {\n                if (this.closed() || this.instance === i) {\n                    this._move(i, 'next', '.ui-menu-item:first');\n                }\n                return i.element;\n            },\n\n            previous: function(i) {\n                if (this.closed() || this.instance === i) {\n                    this._move(i, 'prev', '.ui-menu-item:last');\n                }\n                return i.element;\n            },\n\n            first: function(i) {\n                if (this.instance === i) {\n                    return this.active && this.active.prevAll('.ui-menu-item').length === 0;\n                }\n                return false;\n            },\n\n            last: function(i) {\n                if (this.instance === i) {\n                    return this.active && this.active.nextAll('.ui-menu-item').length === 0;\n                }\n                return false;\n            },\n\n            selected: function(i) {\n                if (this.instance === i)  {\n                    return this.active ? this.active : null;\n                }\n                return null;\n            },\n\n            open: function(i) {\n                var widget = this,\n                    selectedTime = i.getTime(),\n                    arrange = i.options.dynamic && selectedTime;\n\n                // return if dropdown is disabled\n                if (!i.options.dropdown) { return i.element; }\n\n                // fix for issue https://github.com/wvega/timepicker/issues/56\n                // idea from https://prototype.lighthouseapp.com/projects/8887/tickets/248-results-popup-from-ajaxautocompleter-disappear-when-user-clicks-on-scrollbars-in-ie6ie7\n                i.element.data('timepicker-event-namespace', Math.random());\n\n                $(document).bind('click.timepicker-' + i.element.data('timepicker-event-namespace'), function(event) {\n                    if (i.element.get(0) === event.target) {\n                        i.element.data('timepicker-user-clicked-outside', false);\n                    } else {\n                        i.element.data('timepicker-user-clicked-outside', true).blur();\n                    }\n                });\n\n                // if a date is already selected and options.dynamic is true,\n                // arrange the items in the list so the first item is\n                // cronologically right after the selected date.\n                // TODO: set selectedTime\n                if (i.rebuild || !i.items || arrange) {\n                    i.items = widget._items(i, arrange ? selectedTime : null);\n                }\n\n                // remove old li elements keeping associated events, then append\n                // the new li elements to the ul\n                if (i.rebuild || widget.instance !== i || arrange) {\n                    // handle menu events when using jQuery versions previous to\n                    // 1.4.2 (thanks to Brian Link)\n                    // http://github.com/wvega/timepicker/issues#issue/4\n                    if ($.fn.jquery < '1.4.2') {\n                        widget.viewport.children().remove();\n                        widget.viewport.append(i.items);\n                        widget.viewport.find('a').bind('mouseover.timepicker', function() {\n                            widget.activate(i, $(this).parent());\n                        }).bind('mouseout.timepicker', function() {\n                            widget.deactivate(i);\n                        }).bind('click.timepicker', function(event) {\n                            event.preventDefault();\n                            widget.select(i, $(this).parent());\n                        });\n                    } else {\n                        widget.viewport.children().detach();\n                        widget.viewport.append(i.items);\n                    }\n                }\n\n                i.rebuild = false;\n\n                // theme\n                widget.container.removeClass('ui-helper-hidden ui-timepicker-hidden ui-timepicker-standard ui-timepicker-corners').show();\n\n                switch (i.options.theme) {\n                case 'standard':\n                    widget.container.addClass('ui-timepicker-standard');\n                    break;\n                case 'standard-rounded-corners':\n                    widget.container.addClass('ui-timepicker-standard ui-timepicker-corners');\n                    break;\n                default:\n                    break;\n                }\n\n                /* resize ui */\n\n                // we are hiding the scrollbar in the dropdown menu adding a 40px\n                // padding to the wrapper element making the scrollbar appear in the\n                // part of the wrapper that's hidden by the container (a DIV).\n                if ( ! widget.container.hasClass( 'ui-timepicker-no-scrollbar' ) && ! i.options.scrollbar ) {\n                    widget.container.addClass( 'ui-timepicker-no-scrollbar' );\n                    widget.viewport.css( { paddingRight: 40 } );\n                }\n\n                var containerDecorationHeight = widget.container.outerHeight() - widget.container.height(),\n                    zindex = i.options.zindex ? i.options.zindex : i.element.offsetParent().css( 'z-index' ),\n                    elementOffset = i.element.offset();\n\n                // position the container right below the element, or as close to as possible.\n                widget.container.css( {\n                    top: elementOffset.top + i.element.outerHeight(),\n                    left: elementOffset.left\n                } );\n\n                // then show the container so that the browser can consider the timepicker's\n                // height to calculate the page's total height and decide if adding scrollbars\n                // is necessary.\n                widget.container.show();\n\n                // now we need to calculate the element offset and position the container again.\n                // If the browser added scrollbars, the container's original position is not aligned\n                // with the element's final position. This step fixes that problem.\n                widget.container.css( {\n                    left: i.element.offset().left,\n                    height: widget.ui.outerHeight() + containerDecorationHeight,\n                    width: i.element.outerWidth(),\n                    zIndex: zindex,\n                    cursor: 'default'\n                } );\n\n                var calculatedWidth = widget.container.width() - ( widget.ui.outerWidth() - widget.ui.width() );\n\n                // hardcode ui, viewport and item's width. I couldn't get it to work using CSS only\n                widget.ui.css( { width: calculatedWidth } );\n                widget.viewport.css( { width: calculatedWidth } );\n                i.items.css( { width: calculatedWidth } );\n\n                // XXX: what's this line doing here?\n                widget.instance = i;\n\n                // try to match input field's current value with an item in the\n                // dropdown\n                if (selectedTime) {\n                    i.items.each(function() {\n                        var item = $(this), time;\n\n                        if ($.fn.jquery < '1.4.2') {\n                            time = $.fn.timepicker.parseTime(item.find('a').text());\n                        } else {\n                            time = item.data('time-value');\n                        }\n\n                        if (time.getTime() === selectedTime.getTime()) {\n                            widget.activate(i, item);\n                            return false;\n                        }\n                        return true;\n                    });\n                } else {\n                    widget.deactivate(i);\n                }\n\n                // don't break the chain\n                return i.element;\n            },\n\n            close: function(i) {\n                var widget = this;\n\n                if (widget.instance === i) {\n                    widget.container.addClass('ui-helper-hidden ui-timepicker-hidden').hide();\n                    widget.ui.scrollTop(0);\n                    widget.ui.children().removeClass('ui-state-hover');\n                }\n\n                $(document).unbind('click.timepicker-' + i.element.data('timepicker-event-namespace'));\n\n                return i.element;\n            },\n\n            closed: function() {\n                return this.ui.is(':hidden');\n            },\n\n            destroy: function(i) {\n                var widget = this;\n                widget.close(i, true);\n                return i.element.unbind('.timepicker').data('TimePicker', null);\n            },\n\n            //\n\n            parse: function(i, str) {\n                return $.fn.timepicker.parseTime(str);\n            },\n\n            format: function(i, time, format) {\n                format = format || i.options.timeFormat;\n                return $.fn.timepicker.formatTime(format, time);\n            },\n\n            getTime: function(i) {\n                var widget = this,\n                    current = $.fn.timepicker.parseTime(i.element.val());\n\n                // if current value is not valid, we return null.\n                // stored Date object is ignored, because the current value\n                // (valid or invalid) always takes priority\n                if (current instanceof Date && !widget._isValidTime(i, current)) {\n                    return null;\n                } else if (current instanceof Date && i.selectedTime) {\n                    // if the textfield's value and the stored Date object\n                    // have the same representation using current format\n                    // we prefer the stored Date object to avoid unnecesary\n                    // lost of precision.\n                    if (i.format(current) === i.format(i.selectedTime)) {\n                        return i.selectedTime;\n                    } else {\n                        return current;\n                    }\n                } else if (current instanceof Date) {\n                    return current;\n                } else {\n                    return null;\n                }\n            },\n\n            setTime: function(i, time, silent) {\n                var widget = this, previous = i.selectedTime;\n\n                if (typeof time === 'string') {\n                    time = i.parse(time);\n                }\n\n                if (time && time.getMinutes && widget._isValidTime(i, time)) {\n                    time = normalize(time);\n                    i.selectedTime = time;\n                    i.element.val(i.format(time, i.options.timeFormat));\n\n                    // TODO: add documentaion about setTime being chainable\n                    if (silent) { return i; }\n                } else {\n                    i.selectedTime = null;\n                }\n\n                // custom change event and change callback\n                // TODO: add documentation about this event\n                if (previous !== null || i.selectedTime !== null) {\n                    i.element.trigger('time-change', [time]);\n                    if ($.isFunction(i.options.change)) {\n                        i.options.change.apply(i.element, [time]);\n                    }\n                }\n\n                return i.element;\n            },\n\n            option: function(i, name, value) {\n                if (typeof value === 'undefined') {\n                    return i.options[name];\n                }\n\n                var time = i.getTime(),\n                    options, destructive;\n\n                if (typeof name === 'string') {\n                    options = {};\n                    options[name] = value;\n                } else {\n                    options = name;\n                }\n\n                // some options require rebuilding the dropdown items\n                destructive = ['minHour', 'minMinutes', 'minTime',\n                               'maxHour', 'maxMinutes', 'maxTime',\n                               'startHour', 'startMinutes', 'startTime',\n                               'timeFormat', 'interval', 'dropdown'];\n\n\n                $.each(options, function(name) {\n                    i.options[name] = options[name];\n                    i.rebuild = i.rebuild || $.inArray(name, destructive) > -1;\n                });\n\n                if (i.rebuild) {\n                    i.setTime(time);\n                }\n            }\n        };\n\n        $.TimePicker.defaults =  {\n            timeFormat: 'hh:mm p',\n            minHour: null,\n            minMinutes: null,\n            minTime: null,\n            maxHour: null,\n            maxMinutes: null,\n            maxTime: null,\n            startHour: null,\n            startMinutes: null,\n            startTime: null,\n            interval: 30,\n            dynamic: true,\n            theme: 'standard',\n            zindex: null,\n            dropdown: true,\n            scrollbar: false,\n            // callbacks\n            change: function(/*time*/) {}\n        };\n\n        $.TimePicker.methods = {\n            chainable: [\n                'next',\n                'previous',\n                'open',\n                'close',\n                'destroy',\n                'setTime'\n            ]\n        };\n\n        $.fn.timepicker = function(options) {\n            // support calling API methods using the following syntax:\n            //   $(...).timepicker('parse', '11p');\n            if (typeof options === 'string') {\n                var args = Array.prototype.slice.call(arguments, 1),\n                    method, result;\n\n                // chainable API methods\n                if (options === 'option' && arguments.length > 2) {\n                    method = 'each';\n                } else if ($.inArray(options, $.TimePicker.methods.chainable) !== -1) {\n                    method = 'each';\n                // API methods that return a value\n                } else {\n                    method = 'map';\n                }\n\n                result = this[method](function() {\n                    var element = $(this), i = element.data('TimePicker');\n                    if (typeof i === 'object') {\n                        return i[options].apply(i, args);\n                    }\n                });\n\n                if (method === 'map' && this.length === 1) {\n                    return $.makeArray(result).shift();\n                } else if (method === 'map') {\n                    return $.makeArray(result);\n                } else {\n                    return result;\n                }\n            }\n\n            // calling the constructor again on a jQuery object with a single\n            // element returns a reference to a TimePicker object.\n            if (this.length === 1 && this.data('TimePicker')) {\n                return this.data('TimePicker');\n            }\n\n            var globals = $.extend({}, $.TimePicker.defaults, options);\n\n            return this.each(function() {\n                $.TimePicker.instance().register(this, globals);\n            });\n        };\n\n        /**\n         * TODO: documentation\n         */\n        $.fn.timepicker.formatTime = function(format, time) {\n            var hours = time.getHours(),\n                hours12 = hours % 12,\n                minutes = time.getMinutes(),\n                seconds = time.getSeconds(),\n                replacements = {\n                    hh: pad((hours12 === 0 ? 12 : hours12).toString(), '0', 2),\n                    HH: pad(hours.toString(), '0', 2),\n                    mm: pad(minutes.toString(), '0', 2),\n                    ss: pad(seconds.toString(), '0', 2),\n                    h: (hours12 === 0 ? 12 : hours12),\n                    H: hours,\n                    m: minutes,\n                    s: seconds,\n                    p: hours > 11 ? 'PM' : 'AM'\n                },\n                str = format, k = '';\n            for (k in replacements) {\n                if (replacements.hasOwnProperty(k)) {\n                    str = str.replace(new RegExp(k,'g'), replacements[k]);\n                }\n            }\n            // replacements is not guaranteed to be order and the 'p' can cause problems\n            str = str.replace(new RegExp('a','g'), hours > 11 ? 'pm' : 'am');\n            return str;\n        };\n\n        /**\n         * Convert a string representing a given time into a Date object.\n         *\n         * The Date object will have attributes others than hours, minutes and\n         * seconds set to current local time values. The function will return\n         * false if given string can't be converted.\n         *\n         * If there is an 'a' in the string we set am to true, if there is a 'p'\n         * we set pm to true, if both are present only am is setted to true.\n         *\n         * All non-digit characters are removed from the string before trying to\n         * parse the time.\n         *\n         * ''       can't be converted and the function returns false.\n         * '1'      is converted to     01:00:00 am\n         * '11'     is converted to     11:00:00 am\n         * '111'    is converted to     01:11:00 am\n         * '1111'   is converted to     11:11:00 am\n         * '11111'  is converted to     01:11:11 am\n         * '111111' is converted to     11:11:11 am\n         *\n         * Only the first six (or less) characters are considered.\n         *\n         * Special case:\n         *\n         * When hours is greater than 24 and the last digit is less or equal than 6, and minutes\n         * and seconds are less or equal than 60, we append a trailing zero and\n         * start parsing process again. Examples:\n         *\n         * '95' is treated as '950' and converted to 09:50:00 am\n         * '46' is treated as '460' and converted to 05:00:00 am\n         * '57' can't be converted and the function returns false.\n         *\n         * For a detailed list of supported formats check the unit tests at\n         * http://github.com/wvega/timepicker/tree/master/tests/\n         */\n        $.fn.timepicker.parseTime = (function() {\n            var patterns = [\n                    // 1, 12, 123, 1234, 12345, 123456\n                    [/^(\\d+)$/, '$1'],\n                    // :1, :2, :3, :4 ... :9\n                    [/^:(\\d)$/, '$10'],\n                    // :1, :12, :123, :1234 ...\n                    [/^:(\\d+)/, '$1'],\n                    // 6:06, 5:59, 5:8\n                    [/^(\\d):([7-9])$/, '0$10$2'],\n                    [/^(\\d):(\\d\\d)$/, '$1$2'],\n                    [/^(\\d):(\\d{1,})$/, '0$1$20'],\n                    // 10:8, 10:10, 10:34\n                    [/^(\\d\\d):([7-9])$/, '$10$2'],\n                    [/^(\\d\\d):(\\d)$/, '$1$20'],\n                    [/^(\\d\\d):(\\d*)$/, '$1$2'],\n                    // 123:4, 1234:456\n                    [/^(\\d{3,}):(\\d)$/, '$10$2'],\n                    [/^(\\d{3,}):(\\d{2,})/, '$1$2'],\n                    //\n                    [/^(\\d):(\\d):(\\d)$/, '0$10$20$3'],\n                    [/^(\\d{1,2}):(\\d):(\\d\\d)/, '$10$2$3']\n                ],\n                length = patterns.length;\n\n            return function(str) {\n                var time = normalize(new Date()),\n                    am = false, pm = false, h = false, m = false, s = false;\n\n                if (typeof str === 'undefined' || !str.toLowerCase) { return null; }\n\n                str = str.toLowerCase();\n                am = /a/.test(str);\n                pm = am ? false : /p/.test(str);\n                str = str.replace(/[^0-9:]/g, '').replace(/:+/g, ':');\n\n                for (var k = 0; k < length; k = k + 1) {\n                    if (patterns[k][0].test(str)) {\n                        str = str.replace(patterns[k][0], patterns[k][1]);\n                        break;\n                    }\n                }\n                str = str.replace(/:/g, '');\n\n                if (str.length === 1) {\n                    h = str;\n                } else if (str.length === 2) {\n                    h = str;\n                } else if (str.length === 3 || str.length === 5) {\n                    h = str.substr(0, 1);\n                    m = str.substr(1, 2);\n                    s = str.substr(3, 2);\n                } else if (str.length === 4 || str.length > 5) {\n                    h = str.substr(0, 2);\n                    m = str.substr(2, 2);\n                    s = str.substr(4, 2);\n                }\n\n                if (str.length > 0 && str.length < 5) {\n                    if (str.length < 3) {\n                        m = 0;\n                    }\n                    s = 0;\n                }\n\n                if (h === false || m === false || s === false) {\n                    return false;\n                }\n\n                h = parseInt(h, 10);\n                m = parseInt(m, 10);\n                s = parseInt(s, 10);\n\n                if (am && h === 12) {\n                    h = 0;\n                } else if (pm && h < 12) {\n                    h = h + 12;\n                }\n\n                if (h > 24) {\n                    if (str.length >= 6) {\n                        return $.fn.timepicker.parseTime(str.substr(0,5));\n                    } else {\n                        return $.fn.timepicker.parseTime(str + '0' + (am ? 'a' : '') + (pm ? 'p' : ''));\n                    }\n                } else {\n                    time.setHours(h, m, s);\n                    return time;\n                }\n            };\n        })();\n    })(jQuery);\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 9.js","import tp from 'jquery-timepicker/jquery.timepicker';\nimport moment from 'moment';\n\nclass DatetimePicker {\n    constructor() {\n        // Used to append popovers.  Avoids WP and Bootstrap CSS conflicts.\n        var styleWrapper = $('<div class=\"bootstrap-wrapper\"></div>');\n\n        $(document.body).append(styleWrapper);\n\n        var renderInputs = function ($input, dateValue, timeValue) {\n            var $row   = $('<div class=\"row\"></div>'),\n                $left  = $('<div class=\"col-xs-6\"></div>'),\n                $right = $('<div class=\"col-xs-6\"></div>'),\n                $date  = $('<input type=\"text\" class=\"date-input form-control\" />'),\n                $time  = $('<input type=\"text\" class=\"time-input form-control\" />');\n\n            $row.append($left);\n            $row.append($right);\n\n            $left.append($date);\n            $right.append($time);\n\n            $date.val(dateValue);\n            $time.val(timeValue);\n\n            $date.data('input', $input.attr('name'));\n            $time.data('input', $input.attr('name'));\n\n            $input.parent().append($row);\n\n            $date.on(\n                'change',\n                function () {\n                    $input.val($date.val() + ' ' + $time.val())\n                }\n            );\n\n            $time.on(\n                'change',\n                function () {\n                    $input.val($date.val() + ' ' + $time.val())\n                }\n            );\n        };\n\n        $('.input-timestamp').each(\n            function (index, input) {\n                var $input = $(input),\n                    value  = $input.val().split(' '),\n                    date   = value[0],\n                    time   = value[1];\n\n                $input.attr('type', 'hidden');\n\n                renderInputs($input, date, time);\n            }\n        );\n\n        if (Modernizr.touch && Modernizr.inputtypes.date) {\n            $('.date-input').attr('type', 'date');\n            $('.time-input').attr('type', 'time');\n        } else {\n            $('.time-input').timepicker({\n                change: function () {\n                    $(this).trigger('change');\n                }\n            });\n\n            $('.date-input').each(\n                function (index, input) {\n                    var $input = $(input),\n                        content,\n                        yearRange,\n                        inputName = $input.attr('name');\n\n                    content  = '<div class=\"date-input-popover\" data-input=\"' + $input.data('input') + '\">';\n                    content += '<a href=\"#\" class=\"btn btn-link btn-close\">';\n                    content += '<span class=\"glyphicon glyphicon-remove text-muted\"></span>';\n                    content += '</a>';\n                    content += '<div class=\"date-wrapper\"></div>';\n                    content += '</div>';\n\n                    $input.popover({\n                        container: styleWrapper,\n                        placement: 'bottom',\n                        trigger:   'manual',\n                        content:   content,\n                        html:      true\n                    });\n\n                    if (inputName && inputName.indexOf('birthdate') > -1) {\n                        yearRange = '-100:+0';\n                    } else {\n                        yearRange = '-100:+100';\n                    }\n\n                    $input.on(\n                        'focus',\n                        function () {\n                            var $popover;\n\n                            $input.popover('show');\n                            $popover = $('[data-input=\"' + $input.data('input') + '\"] .date-wrapper');\n\n                            $('[data-input=\"' + $input.data('input') + '\"] a').on(\n                                'click',\n                                function (e) {\n                                    e.preventDefault();\n                                    $input.popover('hide');\n                                }\n                            );\n\n                            var options = {\n                                changeMonth: true,\n                                changeYear:  true,\n                                yearRange:   yearRange,\n                                defaultDate: moment($input.val(), 'MM/DD/YYYY').toDate(),\n                                onSelect: function (e) {\n                                    var selected = $popover.datepicker('getDate');\n\n                                    if (selected) {\n                                        $input.val(moment(selected).format('MM/DD/YYYY'));\n                                    } else {\n                                        $input.val('');\n                                    }\n\n                                    $input.trigger('change');\n                                    $input.popover('hide');\n                                }\n                            };\n\n                            $popover.datepicker(options);\n                        }\n                    );\n\n                    $('input, textarea, select').on(\n                        'focus',\n                        function () {\n                            if (this !== $input[0]) {\n                                $input.popover('hide');\n                            }\n                        }\n                    );\n                }\n            );\n        }\n    }\n}\n\nexport default DatetimePicker;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/datetime-picker.js","/**\n * jQuery Timepicker\n * http://timepicker.co\n *\n * Enhances standard form input fields helping users to select (or type) times.\n *\n * Copyright (c) 2016 Willington Vega; Licensed MIT, GPL\n */\n\nif (typeof jQuery !== 'undefined') {\n    (function($, undefined) {\n\n        function pad(str, ch, length) {\n            return (new Array(length + 1 - str.length).join(ch)) + str;\n        }\n\n        function normalize() {\n            if (arguments.length === 1) {\n                var date = arguments[0];\n                if (typeof date === 'string') {\n                    date = $.fn.timepicker.parseTime(date);\n                }\n                return new Date(0, 0, 0, date.getHours(), date.getMinutes(), date.getSeconds());\n            } else if (arguments.length === 3) {\n                return new Date(0, 0, 0, arguments[0], arguments[1], arguments[2]);\n            } else if (arguments.length === 2) {\n                return new Date(0, 0, 0, arguments[0], arguments[1], 0);\n            } else {\n                return new Date(0, 0, 0);\n            }\n        }\n\n        $.TimePicker = function() {\n            var widget = this;\n\n            widget.container = $('.ui-timepicker-container');\n            widget.ui = widget.container.find('.ui-timepicker');\n\n            if (widget.container.length === 0) {\n                widget.container = $('<div></div>').addClass('ui-timepicker-container')\n                                    .addClass('ui-timepicker-hidden ui-helper-hidden')\n                                    .appendTo('body')\n                                    .hide();\n                widget.ui = $( '<div></div>' ).addClass('ui-timepicker')\n                                    .addClass('ui-widget ui-widget-content ui-menu')\n                                    .addClass('ui-corner-all')\n                                    .appendTo(widget.container);\n                widget.viewport = $('<ul></ul>').addClass( 'ui-timepicker-viewport' )\n                                    .appendTo( widget.ui );\n\n                if ($.fn.jquery >= '1.4.2') {\n                    widget.ui.delegate('a', 'mouseenter.timepicker', function() {\n                        // passing false instead of an instance object tells the function\n                        // to use the current instance\n                        widget.activate(false, $(this).parent());\n                    }).delegate('a', 'mouseleave.timepicker', function() {\n                        widget.deactivate(false);\n                    }).delegate('a', 'click.timepicker', function(event) {\n                        event.preventDefault();\n                        widget.select(false, $(this).parent());\n                    });\n                }\n            }\n        };\n\n        $.TimePicker.count = 0;\n        $.TimePicker.instance = function() {\n            if (!$.TimePicker._instance) {\n                $.TimePicker._instance = new $.TimePicker();\n            }\n            return $.TimePicker._instance;\n        };\n\n        $.TimePicker.prototype = {\n            // extracted from from jQuery UI Core\n            // http://github,com/jquery/jquery-ui/blob/master/ui/jquery.ui.core.js\n            keyCode: {\n                ALT: 18,\n                BLOQ_MAYUS: 20,\n                CTRL: 17,\n                DOWN: 40,\n                END: 35,\n                ENTER: 13,\n                HOME: 36,\n                LEFT: 37,\n                NUMPAD_ENTER: 108,\n                PAGE_DOWN: 34,\n                PAGE_UP: 33,\n                RIGHT: 39,\n                SHIFT: 16,\n                TAB: 9,\n                UP: 38\n            },\n\n            _items: function(i, startTime) {\n                var widget = this, ul = $('<ul></ul>'), item = null, time, end;\n\n                // interval should be a multiple of 60 if timeFormat is not\n                // showing minutes\n                if (i.options.timeFormat.indexOf('m') === -1 && i.options.interval % 60 !== 0) {\n                    i.options.interval = Math.max(Math.round(i.options.interval / 60), 1) * 60;\n                }\n\n                if (startTime) {\n                    time = normalize(startTime);\n                } else if (i.options.startTime) {\n                    time = normalize(i.options.startTime);\n                } else {\n                    time = normalize(i.options.startHour, i.options.startMinutes);\n                }\n\n                end = new Date(time.getTime() + 24 * 60 * 60 * 1000);\n\n                while(time < end) {\n                    if (widget._isValidTime(i, time)) {\n                        item = $('<li>').addClass('ui-menu-item').appendTo(ul);\n                        $('<a>').addClass('ui-corner-all').text($.fn.timepicker.formatTime(i.options.timeFormat, time)).appendTo(item);\n                        item.data('time-value', time);\n                    }\n                    time = new Date(time.getTime() + i.options.interval * 60 * 1000);\n                }\n\n                return ul.children();\n            },\n\n            _isValidTime: function(i, time) {\n                var min = null, max = null;\n\n                time = normalize(time);\n\n                if (i.options.minTime !== null) {\n                    min = normalize(i.options.minTime);\n                } else if (i.options.minHour !== null || i.options.minMinutes !== null) {\n                    min = normalize(i.options.minHour, i.options.minMinutes);\n                }\n\n                if (i.options.maxTime !== null) {\n                    max = normalize(i.options.maxTime);\n                } else if (i.options.maxHour !== null || i.options.maxMinutes !== null) {\n                    max = normalize(i.options.maxHour, i.options.maxMinutes);\n                }\n\n                if (min !== null && max !== null) {\n                    return time >= min && time <= max;\n                } else if (min !== null) {\n                    return time >= min;\n                } else if (max !== null) {\n                    return time <= max;\n                }\n\n                return true;\n            },\n\n            _hasScroll: function() {\n                // fix for jQuery 1.6 new prop method\n                var m = typeof this.ui.prop !== 'undefined' ? 'prop' : 'attr';\n                return this.ui.height() < this.ui[m]('scrollHeight');\n            },\n\n            /**\n             * TODO: Write me!\n             *\n             * @param i\n             * @param direction\n             * @param edge\n             * */\n            _move: function(i, direction, edge) {\n                var widget = this;\n                if (widget.closed()) {\n                    widget.open(i);\n                }\n                if (!widget.active) {\n                    widget.activate( i, widget.viewport.children( edge ) );\n                    return;\n                }\n                var next = widget.active[direction + 'All']('.ui-menu-item').eq(0);\n                if (next.length) {\n                    widget.activate(i, next);\n                } else {\n                    widget.activate( i, widget.viewport.children( edge ) );\n                }\n            },\n\n            //\n            // protected methods\n            //\n\n            register: function(node, options) {\n                var widget = this, i = {}; // timepicker instance object\n\n                i.element = $(node);\n\n                if (i.element.data('TimePicker')) {\n                    return;\n                }\n\n                i.options = $.metadata ? $.extend({}, options, i.element.metadata()) : $.extend({}, options);\n                i.widget = widget;\n\n                // proxy functions for the exposed api methods\n                $.extend(i, {\n                    next: function() {return widget.next(i) ;},\n                    previous: function() {return widget.previous(i) ;},\n                    first: function() { return widget.first(i) ;},\n                    last: function() { return widget.last(i) ;},\n                    selected: function() { return widget.selected(i) ;},\n                    open: function() { return widget.open(i) ;},\n                    close: function() { return widget.close(i) ;},\n                    closed: function() { return widget.closed(i) ;},\n                    destroy: function() { return widget.destroy(i) ;},\n\n                    parse: function(str) { return widget.parse(i, str) ;},\n                    format: function(time, format) { return widget.format(i, time, format); },\n                    getTime: function() { return widget.getTime(i) ;},\n                    setTime: function(time, silent) { return widget.setTime(i, time, silent); },\n                    option: function(name, value) { return widget.option(i, name, value); }\n                });\n\n                widget._setDefaultTime(i);\n                widget._addInputEventsHandlers(i);\n\n                i.element.data('TimePicker', i);\n            },\n\n            _setDefaultTime: function(i) {\n                if (i.options.defaultTime === 'now') {\n                    i.setTime(normalize(new Date()));\n                } else if (i.options.defaultTime && i.options.defaultTime.getFullYear) {\n                    i.setTime(normalize(i.options.defaultTime));\n                } else if (i.options.defaultTime) {\n                    i.setTime($.fn.timepicker.parseTime(i.options.defaultTime));\n                }\n            },\n\n            _addInputEventsHandlers: function(i) {\n                var widget = this;\n\n                i.element.bind('keydown.timepicker', function(event) {\n                    switch (event.which || event.keyCode) {\n                    case widget.keyCode.ENTER:\n                    case widget.keyCode.NUMPAD_ENTER:\n                        event.preventDefault();\n                        if (widget.closed()) {\n                            i.element.trigger('change.timepicker');\n                        } else {\n                            widget.select(i, widget.active);\n                        }\n                        break;\n                    case widget.keyCode.UP:\n                        i.previous();\n                        break;\n                    case widget.keyCode.DOWN:\n                        i.next();\n                        break;\n                    default:\n                        if (!widget.closed()) {\n                            i.close(true);\n                        }\n                        break;\n                    }\n                }).bind('focus.timepicker', function() {\n                    i.open();\n                }).bind('blur.timepicker', function() {\n                    setTimeout(function() {\n                        if (i.element.data('timepicker-user-clicked-outside')) {\n                            i.close();\n                        }\n                    });\n                }).bind('change.timepicker', function() {\n                    if (i.closed()) {\n                        i.setTime($.fn.timepicker.parseTime(i.element.val()));\n                    }\n                });\n            },\n\n            select: function(i, item) {\n                var widget = this, instance = i === false ? widget.instance : i;\n                widget.setTime(instance, $.fn.timepicker.parseTime(item.children('a').text()));\n                widget.close(instance, true);\n            },\n\n            activate: function(i, item) {\n                var widget = this, instance = i === false ? widget.instance : i;\n\n                if (instance !== widget.instance) {\n                    return;\n                } else {\n                    widget.deactivate();\n                }\n\n                if (widget._hasScroll()) {\n                    var offset = item.offset().top - widget.ui.offset().top,\n                        scroll = widget.ui.scrollTop(),\n                        height = widget.ui.height();\n                    if (offset < 0) {\n                        widget.ui.scrollTop(scroll + offset);\n                    } else if (offset >= height) {\n                        widget.ui.scrollTop(scroll + offset - height + item.height());\n                    }\n                }\n\n                widget.active = item.eq(0).children('a').addClass('ui-state-hover')\n                                                        .attr('id', 'ui-active-item')\n                                          .end();\n            },\n\n            deactivate: function() {\n                var widget = this;\n                if (!widget.active) { return; }\n                widget.active.children('a').removeClass('ui-state-hover').removeAttr('id');\n                widget.active = null;\n            },\n\n            /**\n             * _activate, _deactivate, first, last, next, previous, _move and\n             * _hasScroll were extracted from jQuery UI Menu\n             * http://github,com/jquery/jquery-ui/blob/menu/ui/jquery.ui.menu.js\n             */\n\n            //\n            // public methods\n            //\n\n            next: function(i) {\n                if (this.closed() || this.instance === i) {\n                    this._move(i, 'next', '.ui-menu-item:first');\n                }\n                return i.element;\n            },\n\n            previous: function(i) {\n                if (this.closed() || this.instance === i) {\n                    this._move(i, 'prev', '.ui-menu-item:last');\n                }\n                return i.element;\n            },\n\n            first: function(i) {\n                if (this.instance === i) {\n                    return this.active && this.active.prevAll('.ui-menu-item').length === 0;\n                }\n                return false;\n            },\n\n            last: function(i) {\n                if (this.instance === i) {\n                    return this.active && this.active.nextAll('.ui-menu-item').length === 0;\n                }\n                return false;\n            },\n\n            selected: function(i) {\n                if (this.instance === i)  {\n                    return this.active ? this.active : null;\n                }\n                return null;\n            },\n\n            open: function(i) {\n                var widget = this,\n                    selectedTime = i.getTime(),\n                    arrange = i.options.dynamic && selectedTime;\n\n                // return if dropdown is disabled\n                if (!i.options.dropdown) { return i.element; }\n\n                // fix for issue https://github.com/wvega/timepicker/issues/56\n                // idea from https://prototype.lighthouseapp.com/projects/8887/tickets/248-results-popup-from-ajaxautocompleter-disappear-when-user-clicks-on-scrollbars-in-ie6ie7\n                i.element.data('timepicker-event-namespace', Math.random());\n\n                $(document).bind('click.timepicker-' + i.element.data('timepicker-event-namespace'), function(event) {\n                    if (i.element.get(0) === event.target) {\n                        i.element.data('timepicker-user-clicked-outside', false);\n                    } else {\n                        i.element.data('timepicker-user-clicked-outside', true).blur();\n                    }\n                });\n\n                // if a date is already selected and options.dynamic is true,\n                // arrange the items in the list so the first item is\n                // cronologically right after the selected date.\n                // TODO: set selectedTime\n                if (i.rebuild || !i.items || arrange) {\n                    i.items = widget._items(i, arrange ? selectedTime : null);\n                }\n\n                // remove old li elements keeping associated events, then append\n                // the new li elements to the ul\n                if (i.rebuild || widget.instance !== i || arrange) {\n                    // handle menu events when using jQuery versions previous to\n                    // 1.4.2 (thanks to Brian Link)\n                    // http://github.com/wvega/timepicker/issues#issue/4\n                    if ($.fn.jquery < '1.4.2') {\n                        widget.viewport.children().remove();\n                        widget.viewport.append(i.items);\n                        widget.viewport.find('a').bind('mouseover.timepicker', function() {\n                            widget.activate(i, $(this).parent());\n                        }).bind('mouseout.timepicker', function() {\n                            widget.deactivate(i);\n                        }).bind('click.timepicker', function(event) {\n                            event.preventDefault();\n                            widget.select(i, $(this).parent());\n                        });\n                    } else {\n                        widget.viewport.children().detach();\n                        widget.viewport.append(i.items);\n                    }\n                }\n\n                i.rebuild = false;\n\n                // theme\n                widget.container.removeClass('ui-helper-hidden ui-timepicker-hidden ui-timepicker-standard ui-timepicker-corners').show();\n\n                switch (i.options.theme) {\n                case 'standard':\n                    widget.container.addClass('ui-timepicker-standard');\n                    break;\n                case 'standard-rounded-corners':\n                    widget.container.addClass('ui-timepicker-standard ui-timepicker-corners');\n                    break;\n                default:\n                    break;\n                }\n\n                /* resize ui */\n\n                // we are hiding the scrollbar in the dropdown menu adding a 40px\n                // padding to the wrapper element making the scrollbar appear in the\n                // part of the wrapper that's hidden by the container (a DIV).\n                if ( ! widget.container.hasClass( 'ui-timepicker-no-scrollbar' ) && ! i.options.scrollbar ) {\n                    widget.container.addClass( 'ui-timepicker-no-scrollbar' );\n                    widget.viewport.css( { paddingRight: 40 } );\n                }\n\n                var containerDecorationHeight = widget.container.outerHeight() - widget.container.height(),\n                    zindex = i.options.zindex ? i.options.zindex : i.element.offsetParent().css( 'z-index' ),\n                    elementOffset = i.element.offset();\n\n                // position the container right below the element, or as close to as possible.\n                widget.container.css( {\n                    top: elementOffset.top + i.element.outerHeight(),\n                    left: elementOffset.left\n                } );\n\n                // then show the container so that the browser can consider the timepicker's\n                // height to calculate the page's total height and decide if adding scrollbars\n                // is necessary.\n                widget.container.show();\n\n                // now we need to calculate the element offset and position the container again.\n                // If the browser added scrollbars, the container's original position is not aligned\n                // with the element's final position. This step fixes that problem.\n                widget.container.css( {\n                    left: i.element.offset().left,\n                    height: widget.ui.outerHeight() + containerDecorationHeight,\n                    width: i.element.outerWidth(),\n                    zIndex: zindex,\n                    cursor: 'default'\n                } );\n\n                var calculatedWidth = widget.container.width() - ( widget.ui.outerWidth() - widget.ui.width() );\n\n                // hardcode ui, viewport and item's width. I couldn't get it to work using CSS only\n                widget.ui.css( { width: calculatedWidth } );\n                widget.viewport.css( { width: calculatedWidth } );\n                i.items.css( { width: calculatedWidth } );\n\n                // XXX: what's this line doing here?\n                widget.instance = i;\n\n                // try to match input field's current value with an item in the\n                // dropdown\n                if (selectedTime) {\n                    i.items.each(function() {\n                        var item = $(this), time;\n\n                        if ($.fn.jquery < '1.4.2') {\n                            time = $.fn.timepicker.parseTime(item.find('a').text());\n                        } else {\n                            time = item.data('time-value');\n                        }\n\n                        if (time.getTime() === selectedTime.getTime()) {\n                            widget.activate(i, item);\n                            return false;\n                        }\n                        return true;\n                    });\n                } else {\n                    widget.deactivate(i);\n                }\n\n                // don't break the chain\n                return i.element;\n            },\n\n            close: function(i) {\n                var widget = this;\n\n                if (widget.instance === i) {\n                    widget.container.addClass('ui-helper-hidden ui-timepicker-hidden').hide();\n                    widget.ui.scrollTop(0);\n                    widget.ui.children().removeClass('ui-state-hover');\n                }\n\n                $(document).unbind('click.timepicker-' + i.element.data('timepicker-event-namespace'));\n\n                return i.element;\n            },\n\n            closed: function() {\n                return this.ui.is(':hidden');\n            },\n\n            destroy: function(i) {\n                var widget = this;\n                widget.close(i, true);\n                return i.element.unbind('.timepicker').data('TimePicker', null);\n            },\n\n            //\n\n            parse: function(i, str) {\n                return $.fn.timepicker.parseTime(str);\n            },\n\n            format: function(i, time, format) {\n                format = format || i.options.timeFormat;\n                return $.fn.timepicker.formatTime(format, time);\n            },\n\n            getTime: function(i) {\n                var widget = this,\n                    current = $.fn.timepicker.parseTime(i.element.val());\n\n                // if current value is not valid, we return null.\n                // stored Date object is ignored, because the current value\n                // (valid or invalid) always takes priority\n                if (current instanceof Date && !widget._isValidTime(i, current)) {\n                    return null;\n                } else if (current instanceof Date && i.selectedTime) {\n                    // if the textfield's value and the stored Date object\n                    // have the same representation using current format\n                    // we prefer the stored Date object to avoid unnecesary\n                    // lost of precision.\n                    if (i.format(current) === i.format(i.selectedTime)) {\n                        return i.selectedTime;\n                    } else {\n                        return current;\n                    }\n                } else if (current instanceof Date) {\n                    return current;\n                } else {\n                    return null;\n                }\n            },\n\n            setTime: function(i, time, silent) {\n                var widget = this, previous = i.selectedTime;\n\n                if (typeof time === 'string') {\n                    time = i.parse(time);\n                }\n\n                if (time && time.getMinutes && widget._isValidTime(i, time)) {\n                    time = normalize(time);\n                    i.selectedTime = time;\n                    i.element.val(i.format(time, i.options.timeFormat));\n\n                    // TODO: add documentaion about setTime being chainable\n                    if (silent) { return i; }\n                } else {\n                    i.selectedTime = null;\n                }\n\n                // custom change event and change callback\n                // TODO: add documentation about this event\n                if (previous !== null || i.selectedTime !== null) {\n                    i.element.trigger('time-change', [time]);\n                    if ($.isFunction(i.options.change)) {\n                        i.options.change.apply(i.element, [time]);\n                    }\n                }\n\n                return i.element;\n            },\n\n            option: function(i, name, value) {\n                if (typeof value === 'undefined') {\n                    return i.options[name];\n                }\n\n                var time = i.getTime(),\n                    options, destructive;\n\n                if (typeof name === 'string') {\n                    options = {};\n                    options[name] = value;\n                } else {\n                    options = name;\n                }\n\n                // some options require rebuilding the dropdown items\n                destructive = ['minHour', 'minMinutes', 'minTime',\n                               'maxHour', 'maxMinutes', 'maxTime',\n                               'startHour', 'startMinutes', 'startTime',\n                               'timeFormat', 'interval', 'dropdown'];\n\n\n                $.each(options, function(name) {\n                    i.options[name] = options[name];\n                    i.rebuild = i.rebuild || $.inArray(name, destructive) > -1;\n                });\n\n                if (i.rebuild) {\n                    i.setTime(time);\n                }\n            }\n        };\n\n        $.TimePicker.defaults =  {\n            timeFormat: 'hh:mm p',\n            minHour: null,\n            minMinutes: null,\n            minTime: null,\n            maxHour: null,\n            maxMinutes: null,\n            maxTime: null,\n            startHour: null,\n            startMinutes: null,\n            startTime: null,\n            interval: 30,\n            dynamic: true,\n            theme: 'standard',\n            zindex: null,\n            dropdown: true,\n            scrollbar: false,\n            // callbacks\n            change: function(/*time*/) {}\n        };\n\n        $.TimePicker.methods = {\n            chainable: [\n                'next',\n                'previous',\n                'open',\n                'close',\n                'destroy',\n                'setTime'\n            ]\n        };\n\n        $.fn.timepicker = function(options) {\n            // support calling API methods using the following syntax:\n            //   $(...).timepicker('parse', '11p');\n            if (typeof options === 'string') {\n                var args = Array.prototype.slice.call(arguments, 1),\n                    method, result;\n\n                // chainable API methods\n                if (options === 'option' && arguments.length > 2) {\n                    method = 'each';\n                } else if ($.inArray(options, $.TimePicker.methods.chainable) !== -1) {\n                    method = 'each';\n                // API methods that return a value\n                } else {\n                    method = 'map';\n                }\n\n                result = this[method](function() {\n                    var element = $(this), i = element.data('TimePicker');\n                    if (typeof i === 'object') {\n                        return i[options].apply(i, args);\n                    }\n                });\n\n                if (method === 'map' && this.length === 1) {\n                    return $.makeArray(result).shift();\n                } else if (method === 'map') {\n                    return $.makeArray(result);\n                } else {\n                    return result;\n                }\n            }\n\n            // calling the constructor again on a jQuery object with a single\n            // element returns a reference to a TimePicker object.\n            if (this.length === 1 && this.data('TimePicker')) {\n                return this.data('TimePicker');\n            }\n\n            var globals = $.extend({}, $.TimePicker.defaults, options);\n\n            return this.each(function() {\n                $.TimePicker.instance().register(this, globals);\n            });\n        };\n\n        /**\n         * TODO: documentation\n         */\n        $.fn.timepicker.formatTime = function(format, time) {\n            var hours = time.getHours(),\n                hours12 = hours % 12,\n                minutes = time.getMinutes(),\n                seconds = time.getSeconds(),\n                replacements = {\n                    hh: pad((hours12 === 0 ? 12 : hours12).toString(), '0', 2),\n                    HH: pad(hours.toString(), '0', 2),\n                    mm: pad(minutes.toString(), '0', 2),\n                    ss: pad(seconds.toString(), '0', 2),\n                    h: (hours12 === 0 ? 12 : hours12),\n                    H: hours,\n                    m: minutes,\n                    s: seconds,\n                    p: hours > 11 ? 'PM' : 'AM'\n                },\n                str = format, k = '';\n            for (k in replacements) {\n                if (replacements.hasOwnProperty(k)) {\n                    str = str.replace(new RegExp(k,'g'), replacements[k]);\n                }\n            }\n            // replacements is not guaranteed to be order and the 'p' can cause problems\n            str = str.replace(new RegExp('a','g'), hours > 11 ? 'pm' : 'am');\n            return str;\n        };\n\n        /**\n         * Convert a string representing a given time into a Date object.\n         *\n         * The Date object will have attributes others than hours, minutes and\n         * seconds set to current local time values. The function will return\n         * false if given string can't be converted.\n         *\n         * If there is an 'a' in the string we set am to true, if there is a 'p'\n         * we set pm to true, if both are present only am is setted to true.\n         *\n         * All non-digit characters are removed from the string before trying to\n         * parse the time.\n         *\n         * ''       can't be converted and the function returns false.\n         * '1'      is converted to     01:00:00 am\n         * '11'     is converted to     11:00:00 am\n         * '111'    is converted to     01:11:00 am\n         * '1111'   is converted to     11:11:00 am\n         * '11111'  is converted to     01:11:11 am\n         * '111111' is converted to     11:11:11 am\n         *\n         * Only the first six (or less) characters are considered.\n         *\n         * Special case:\n         *\n         * When hours is greater than 24 and the last digit is less or equal than 6, and minutes\n         * and seconds are less or equal than 60, we append a trailing zero and\n         * start parsing process again. Examples:\n         *\n         * '95' is treated as '950' and converted to 09:50:00 am\n         * '46' is treated as '460' and converted to 05:00:00 am\n         * '57' can't be converted and the function returns false.\n         *\n         * For a detailed list of supported formats check the unit tests at\n         * http://github.com/wvega/timepicker/tree/master/tests/\n         */\n        $.fn.timepicker.parseTime = (function() {\n            var patterns = [\n                    // 1, 12, 123, 1234, 12345, 123456\n                    [/^(\\d+)$/, '$1'],\n                    // :1, :2, :3, :4 ... :9\n                    [/^:(\\d)$/, '$10'],\n                    // :1, :12, :123, :1234 ...\n                    [/^:(\\d+)/, '$1'],\n                    // 6:06, 5:59, 5:8\n                    [/^(\\d):([7-9])$/, '0$10$2'],\n                    [/^(\\d):(\\d\\d)$/, '$1$2'],\n                    [/^(\\d):(\\d{1,})$/, '0$1$20'],\n                    // 10:8, 10:10, 10:34\n                    [/^(\\d\\d):([7-9])$/, '$10$2'],\n                    [/^(\\d\\d):(\\d)$/, '$1$20'],\n                    [/^(\\d\\d):(\\d*)$/, '$1$2'],\n                    // 123:4, 1234:456\n                    [/^(\\d{3,}):(\\d)$/, '$10$2'],\n                    [/^(\\d{3,}):(\\d{2,})/, '$1$2'],\n                    //\n                    [/^(\\d):(\\d):(\\d)$/, '0$10$20$3'],\n                    [/^(\\d{1,2}):(\\d):(\\d\\d)/, '$10$2$3']\n                ],\n                length = patterns.length;\n\n            return function(str) {\n                var time = normalize(new Date()),\n                    am = false, pm = false, h = false, m = false, s = false;\n\n                if (typeof str === 'undefined' || !str.toLowerCase) { return null; }\n\n                str = str.toLowerCase();\n                am = /a/.test(str);\n                pm = am ? false : /p/.test(str);\n                str = str.replace(/[^0-9:]/g, '').replace(/:+/g, ':');\n\n                for (var k = 0; k < length; k = k + 1) {\n                    if (patterns[k][0].test(str)) {\n                        str = str.replace(patterns[k][0], patterns[k][1]);\n                        break;\n                    }\n                }\n                str = str.replace(/:/g, '');\n\n                if (str.length === 1) {\n                    h = str;\n                } else if (str.length === 2) {\n                    h = str;\n                } else if (str.length === 3 || str.length === 5) {\n                    h = str.substr(0, 1);\n                    m = str.substr(1, 2);\n                    s = str.substr(3, 2);\n                } else if (str.length === 4 || str.length > 5) {\n                    h = str.substr(0, 2);\n                    m = str.substr(2, 2);\n                    s = str.substr(4, 2);\n                }\n\n                if (str.length > 0 && str.length < 5) {\n                    if (str.length < 3) {\n                        m = 0;\n                    }\n                    s = 0;\n                }\n\n                if (h === false || m === false || s === false) {\n                    return false;\n                }\n\n                h = parseInt(h, 10);\n                m = parseInt(m, 10);\n                s = parseInt(s, 10);\n\n                if (am && h === 12) {\n                    h = 0;\n                } else if (pm && h < 12) {\n                    h = h + 12;\n                }\n\n                if (h > 24) {\n                    if (str.length >= 6) {\n                        return $.fn.timepicker.parseTime(str.substr(0,5));\n                    } else {\n                        return $.fn.timepicker.parseTime(str + '0' + (am ? 'a' : '') + (pm ? 'p' : ''));\n                    }\n                } else {\n                    time.setHours(h, m, s);\n                    return time;\n                }\n            };\n        })();\n    })(jQuery);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jquery-timepicker/jquery.timepicker.js\n// module id = 174\n// module chunks = 9"],"sourceRoot":""}