{"version":3,"sources":["webpack:///0.js","webpack:///./www/src/js/filter.js","webpack:///./www/src/js/filter/type/base-view.js","webpack:///./~/backbone/backbone.js","webpack:///./www/src/js/filter/filter-template.html","webpack:///./www/src/js/filter/type/boolean-template.html","webpack:///./www/src/js/filter/type/date-template.html","webpack:///./www/src/js/filter/type/manytomany-template.html","webpack:///./www/src/js/filter/type/numeric-template.html","webpack:///./www/src/js/filter/type/reference-template.html","webpack:///./www/src/js/filter/type/text-template.html","webpack:///./www/src/js/filter/fields-collection.js","webpack:///./www/src/js/filter/filter-view.js","webpack:///./www/src/js/filter/filters-collection.js","webpack:///./www/src/js/filter/filters-view.js","webpack:///./www/src/js/filter/type/boolean-view.js","webpack:///./www/src/js/filter/type/date-view.js","webpack:///./www/src/js/filter/type/factory.js","webpack:///./www/src/js/filter/type/manytomany-view.js","webpack:///./www/src/js/filter/type/numeric-view.js","webpack:///./www/src/js/filter/type/reference-view.js","webpack:///./www/src/js/filter/type/text-view.js","webpack:///(webpack)/buildin/global.js"],"names":["webpackJsonp","128","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__filter_fields_collection__","__WEBPACK_IMPORTED_MODULE_1__filter_filters_collection__","__WEBPACK_IMPORTED_MODULE_2__filter_filters_view__","Filter","selector","arguments","length","undefined","this","$","each","index","form","collection","view","prefix","data","fields","loadConfigFromGlobalVariable","loadValuesFromGlobalVariable","add","find","first","append","render","el","139","__WEBPACK_IMPORTED_MODULE_0_backbone__","__WEBPACK_IMPORTED_MODULE_0_backbone___default","n","__WEBPACK_IMPORTED_MODULE_1_underscore__","__WEBPACK_IMPORTED_MODULE_1_underscore___default","BaseView","a","View","extend","tagName","className","inputIndex","options","events","change select","blur input","change input","initialize","attributes","$el","html","template","values","model","get","focusOnNextTick","set","postRender","focusInput","inputs","focus","updateValues","setTimeout","bind","140","exports","global","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","root","self","_","Backbone","apply","previousBackbone","slice","Array","prototype","VERSION","noConflict","emulateHTTP","emulateJSON","addMethod","method","attribute","iteratee","context","cb","defaultVal","args","call","unshift","addUnderscoreMethods","Class","methods","isFunction","isObject","_isModel","modelMatcher","isString","attrs","matcher","matches","Events","eventSplitter","eventsApi","name","callback","opts","names","i","keys","test","split","on","internalOn","obj","listening","_events","onApi","ctx","_listeners","id","listenTo","_listenId","uniqueId","listeningTo","_listeningTo","thisId","objId","count","handlers","push","off","offApi","listeners","stopListening","ids","remaining","j","handler","_callback","once","onceMap","listenToOnce","map","offer","trigger","Math","max","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","unbind","Model","cid","cidPrefix","parse","defaults","result","changed","validationError","idAttribute","toJSON","clone","sync","attr","escape","has","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","isEmpty","changedAttributes","diff","old","size","previous","previousAttributes","fetch","success","resp","serverAttrs","wrapError","save","validate","wait","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","error","pairs","invert","pick","omit","chain","Collection","models","comparator","_reset","reset","setOptions","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","some","m","_removeReference","previousModels","pop","shift","_byId","modelId","where","findWhere","Error","sortBy","pluck","create","callbackOpts","indexOf","_onModelEvent","event","prevId","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","viewOptions","_ensureElement","delegateEventSplitter","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","match","delegate","eventName","listener","undelegate","_createElement","document","createElement","_setAttributes","type","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","path","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","rootPath","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","e","title","assign","_updateHash","protoProps","staticProps","child","parent","__super__","142","143","144","145","146","147","148","156","label","FieldsCollection","field","157","__WEBPACK_IMPORTED_MODULE_2__type_factory__","__WEBPACK_IMPORTED_MODULE_3__filter_template_html__","__WEBPACK_IMPORTED_MODULE_3__filter_template_html___default","customHtml","text","FilterView","change .filter-field","click .js-add","click .js-remove","selected","selectedField","selectField","addFilter","preventDefault","removeFilter","158","FiltersCollection","modelData","159","__WEBPACK_IMPORTED_MODULE_0__filter_view__","__WEBPACK_IMPORTED_MODULE_1_backbone__","__WEBPACK_IMPORTED_MODULE_1_backbone___default","FiltersView","empty","160","__WEBPACK_IMPORTED_MODULE_0__base_view__","__WEBPACK_IMPORTED_MODULE_1__boolean_template_html__","__WEBPACK_IMPORTED_MODULE_1__boolean_template_html___default","__WEBPACK_IMPORTED_MODULE_2_underscore__","__WEBPACK_IMPORTED_MODULE_2_underscore___default","BooleanView","161","__WEBPACK_IMPORTED_MODULE_1__date_template_html__","__WEBPACK_IMPORTED_MODULE_1__date_template_html___default","DateView","singleInputOperators","doubleInputOperators","noInputOperators","handleOperatorSelection","show","hide","comp","end","162","__WEBPACK_IMPORTED_MODULE_0__boolean_view__","__WEBPACK_IMPORTED_MODULE_1__date_view__","__WEBPACK_IMPORTED_MODULE_2__numeric_view__","__WEBPACK_IMPORTED_MODULE_3__text_view__","__WEBPACK_IMPORTED_MODULE_4__reference_view__","__WEBPACK_IMPORTED_MODULE_5__manytomany_view__","typeMap","boolean","date","numeric","reference","manytomany","Factory","163","__WEBPACK_IMPORTED_MODULE_1__manytomany_template_html__","__WEBPACK_IMPORTED_MODULE_1__manytomany_template_html___default","ManyToManyView","inputOperators","164","__WEBPACK_IMPORTED_MODULE_1__numeric_template_html__","__WEBPACK_IMPORTED_MODULE_1__numeric_template_html___default","NumericView","operand1","operand2","165","__WEBPACK_IMPORTED_MODULE_1__reference_template_html__","__WEBPACK_IMPORTED_MODULE_1__reference_template_html___default","ReferenceView","166","__WEBPACK_IMPORTED_MODULE_1__text_template_html__","__WEBPACK_IMPORTED_MODULE_1__text_template_html___default","TextView","176","g","Function","eval"],"mappings":"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","file":"0.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 128:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filter_fields_collection__ = __webpack_require__(156);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter_filters_collection__ = __webpack_require__(158);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__filter_filters_view__ = __webpack_require__(159);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\nvar Filter = function Filter() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.filter-form';\n\n    _classCallCheck(this, Filter);\n\n    if (!selector.length) {\n        selector = '.filter-form';\n    }\n\n    $(selector).each(function (index, form) {\n        var prefix = $(form).data('prefix'),\n            fields = new __WEBPACK_IMPORTED_MODULE_0__filter_fields_collection__[\"a\" /* default */](),\n            collection,\n            view;\n\n        fields.loadConfigFromGlobalVariable(prefix);\n\n        collection = new __WEBPACK_IMPORTED_MODULE_1__filter_filters_collection__[\"a\" /* default */]();\n        collection.loadValuesFromGlobalVariable(prefix);\n\n        if (!collection.length) {\n            collection.add({});\n        }\n\n        view = new __WEBPACK_IMPORTED_MODULE_2__filter_filters_view__[\"a\" /* default */]({\n            fields: fields,\n            collection: collection\n        });\n\n        $(form).find('fieldset').first().append(view.render().el);\n    });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Filter);\n\n/***/ }),\n\n/***/ 139:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_backbone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n\n\n\nvar BaseView = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.View.extend({\n    tagName: 'span',\n\n    className: 'form-inline',\n\n    inputIndex: null,\n\n    options: null,\n\n    events: {\n        'change select': 'focusInput',\n        'blur input': 'updateValues',\n        'change input': 'updateValues'\n    },\n\n    initialize: function initialize(attributes, options) {\n        this.inputIndex = attributes.inputIndex;\n\n        if ('undefined' !== typeof attributes.options) {\n            this.options = attributes.options;\n        }\n    },\n\n    render: function render() {\n        this.$el.html(this.template({\n            inputIndex: this.inputIndex,\n            values: this.model.get('values'),\n            options: this.options\n        }));\n\n        if (this.model.get('isNew')) {\n            this.focusOnNextTick();\n        }\n\n        this.model.set('isNew', false);\n\n        this.postRender();\n\n        return this;\n    },\n\n    postRender: function postRender() {},\n\n    focusInput: function focusInput() {\n        var inputs = this.$el.find('input');\n\n        if (inputs.length) {\n            inputs.first().focus();\n        }\n\n        this.updateValues();\n    },\n\n    focusOnNextTick: function focusOnNextTick() {\n        setTimeout(__WEBPACK_IMPORTED_MODULE_1_underscore___default.a.bind(this.focusInput, this), 1);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BaseView);\n\n/***/ }),\n\n/***/ 140:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(117), __webpack_require__(177), exports], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(176)))\n\n/***/ }),\n\n/***/ 142:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n        <select class=\\\"form-control input-sm filter-field\\\" name=\\\"ftr-id.<%- index %>\\\">\\n            <option value=\\\"\\\" disabled=\\\"disabled\\\" selected=\\\"selected\\\">Select a field to filter by...</option>\\n            <% _.each(fields, function (field) { %>\\n\\n            <% if (selected === field.id) { %>\\n            <option selected=\\\"selected\\\" value=\\\"<%- field.id.replace('+', ' ') %>\\\"><%- field.label %></option>\\n            <% } else { %>\\n            <option value=\\\"<%- field.id %>\\\"><%- field.label %></option>\\n            <% } %>\\n\\n            <% }); %>\\n        </select>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"form-inline\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-right visible-xs\\\"></span>\\n            <span class=\\\"form-inline filter-control-wrapper\\\"></span>\\n            <div class=\\\"pull-right btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"js-add btn btn-add btn-default btn-sm\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button>\\n                <button type=\\\"button\\\" class=\\\"js-remove btn btn-remove btn-default btn-sm\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ 143:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<span class=\\\"text-muted\\\"> is </span>\\n\\n&nbsp;\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% if ('undefined' === typeof values.value || null === values.value || '' === values.value) { %>\\n    <option value=\\\"\\\" selected=\\\"selected\\\">Yes or No</option>\\n    <option value=\\\"0\\\">No</option>\\n    <option value=\\\"1\\\">Yes</option>\\n    <% } else if (1 === parseInt(values.value, 10)) { %>\\n    <option value=\\\"\\\">Yes or No</option>\\n    <option value=\\\"0\\\">No</option>\\n    <option value=\\\"1\\\" selected=\\\"selected\\\">Yes</option>\\n    <% } else { %>\\n    <option value=\\\"\\\">Yes or No</option>\\n    <option value=\\\"0\\\" selected=\\\"selected\\\">No</option>\\n    <option value=\\\"1\\\">Yes</option>\\n    <% } %>\\n</select>\\n\";\n\n/***/ }),\n\n/***/ 144:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar options = {\\n    'on-or-between': 'is on or between',\\n    'between':       'is between',\\n    'on-or-before':  'is on or before',\\n    'before':        'is before',\\n    'on-or-after':   'is on or after',\\n    'after':         'is after',\\n    'is':            'is'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if ('today' === key) { %>\\n    <option value=\\\"\\\" disabled=\\\"disabled\\\">&mdash;</option>\\n    <% } %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></options>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></options>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<span class=\\\"filter-date-inputs\\\">\\n    <input name=\\\"ftr-start.<%- inputIndex %>\\\" type=\\\"date\\\" class=\\\"filter-start form-control input-sm\\\" value=\\\"<%- values.start %>\\\" />\\n\\n    <span class=\\\"filter-date-end-wrapper\\\">\\n        <span class=\\\"text-muted\\\">&nbsp; and &nbsp;</span>\\n        <input name=\\\"ftr-end.<%- inputIndex %>\\\" type=\\\"date\\\" class=\\\"filter-end form-control input-sm\\\" value=\\\"<%- values.end %>\\\" />\\n    </span>\\n</span>\\n\";\n\n/***/ }),\n\n/***/ 145:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar operators = {\\n    \\\"contains\\\":     \\\"contains\\\",\\n    \\\"not-contains\\\": \\\"does not contain\\\",\\n    \\\"is-empty\\\":     \\\"is empty\\\",\\n    \\\"is-not-empty\\\": \\\"is not empty\\\"\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"filter-op form-control input-sm\\\">\\n    <% _.each(operators, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control filter-value filter-input input-sm\\\">\\n    <option value=\\\"\\\"></option>\\n\\n    <% _.each(options, function (option) { %>\\n\\n    <% if (parseInt(values.value, 10) === option.value) { %>\\n    <option value=\\\"<%- option.value %>\\\" selected=\\\"selected\\\"><%- option.title %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- option.value %>\\\"><%- option.title %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\";\n\n/***/ }),\n\n/***/ 146:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar options = {\\n    'is-less-than': 'is less than',\\n    'is':           'is',\\n    'is-more-than': 'is more than',\\n    'is-between':   'is between'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<span class=\\\"filter-numeric-inputs\\\">\\n    <input class=\\\"filter-operand1 form-control input-sm\\\" name=\\\"ftr-operand1.<%- inputIndex %>\\\" step=\\\"any\\\" type=\\\"number\\\"\\n        value=\\\"<%- values.operand1 %>\\\" />\\n\\n    <span class=\\\"filter-numeric-operand2-wrapper\\\">\\n        <span class=\\\"text-muted\\\">&nbsp; and &nbsp;</span>\\n        <input class=\\\"filter-operand2 form-control input-sm\\\" name=\\\"ftr-operand2.<%- inputIndex %>\\\" step=\\\"any\\\"\\n            type=\\\"number\\\" value=\\\"<%- values.operand2 %>\\\" />\\n    </span>\\n</span>\\n\\n\";\n\n/***/ }),\n\n/***/ 147:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar operators = {\\n    \\\"is\\\":        \\\"is\\\",\\n    \\\"is-not\\\":    \\\"is not\\\",\\n    \\\"empty\\\":     \\\"is empty\\\",\\n    \\\"not-empty\\\": \\\"is not empty\\\"\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control filter-op input-sm\\\">\\n    <% _.each(operators, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control filter-value filter-input input-sm\\\">\\n    <option value=\\\"\\\"></option>\\n\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (parseInt(values.value, 10) === option.value) { %>\\n    <option value=\\\"<%- option.value %>\\\" selected=\\\"selected\\\"><%- option.title %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- option.value %>\\\"><%- option.title %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\";\n\n/***/ }),\n\n/***/ 148:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar options = {\\n    'contains':         'contains',\\n    'does-not-contain': 'does not contain',\\n    'starts-with':      'starts with',\\n    'ends-with':        'ends with'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></options>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></options>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<input name=\\\"ftr-value.<%- inputIndex %>\\\" type=\\\"text\\\" class=\\\"filter-value form-control input-sm\\\" value=\\\"<%- values.value %>\\\" />\\n\";\n\n/***/ }),\n\n/***/ 156:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_backbone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n\n\n\nvar Model = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.Model.extend({\n    defaults: {\n        id: '',\n        label: '',\n        type: '',\n        options: {},\n        defaults: {}\n    }\n});\n\nvar FieldsCollection = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.Collection.extend({\n    model: Model,\n\n    loadConfigFromGlobalVariable: function loadConfigFromGlobalVariable(prefix) {\n        var name = 'FILTER_FIELDS';\n\n        if (prefix) {\n            name = prefix + name;\n        }\n\n        if ('undefined' === typeof window[name]) {\n            throw 'Could not find initial config for filter form';\n        }\n\n        __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.each(window[name], function (field) {\n            this.add(field);\n        }, this);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FieldsCollection);\n\n/***/ }),\n\n/***/ 157:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_backbone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_factory__ = __webpack_require__(162);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__filter_template_html__ = __webpack_require__(142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__filter_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__filter_template_html__);\n\n\n\n\n\nvar customHtml = $('#filter-template').text(),\n    template = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.template(customHtml ? customHtml : __WEBPACK_IMPORTED_MODULE_3__filter_template_html___default.a);\n\nvar FilterView = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.View.extend({\n    events: {\n        'change .filter-field': 'selectField',\n        'click .js-add': 'addFilter',\n        'click .js-remove': 'removeFilter'\n    },\n\n    className: 'filter-row',\n\n    fields: null,\n\n    selected: null,\n\n    initialize: function initialize(attributes, options) {\n        this.fields = attributes.fields;\n        this.selected = this.model.get('field');\n        this.index = attributes.index;\n    },\n\n    render: function render() {\n        this.$el.html(template({\n            fields: this.fields.toJSON(),\n            selected: this.selected,\n            index: this.index\n        }));\n\n        if (this.selected) {\n            var selectedField = this.fields.findWhere({ id: this.selected }),\n                values = this.model.get('values');\n\n            __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.each(selectedField.get('defaults'), function (value, key) {\n                if ('undefined' === typeof values[key]) {\n                    values[key] = value;\n                }\n            });\n\n            this.model.set('values', values);\n\n            this.$el.find('.filter-control-wrapper').html(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__type_factory__[\"a\" /* default */])(selectedField.get('type'), selectedField.get('options'), this.model, this.index).render().el);\n        }\n\n        if (1 === this.collection.length) {\n            this.$el.find('.btn-remove').attr('disabled', 'disabled');\n        }\n\n        return this;\n    },\n\n    selectField: function selectField(e) {\n        this.selected = this.$el.find('.filter-field').val();\n        this.model.set('field', this.selected);\n        this.render();\n    },\n\n    addFilter: function addFilter(e) {\n        e.preventDefault();\n        this.collection.add({});\n    },\n\n    removeFilter: function removeFilter(e) {\n        e.preventDefault();\n        this.model.destroy();\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FilterView);\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_backbone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n\n\n\nvar Model = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.Model.extend({\n    defaults: {\n        field: '',\n        isNew: true,\n        values: {}\n    }\n});\n\nvar FiltersCollection = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.Collection.extend({\n    model: Model,\n\n    loadValuesFromGlobalVariable: function loadValuesFromGlobalVariable(prefix) {\n        var name = 'FILTER_VALUES';\n\n        if (prefix) {\n            name = prefix + name;\n        }\n\n        if ('undefined' === typeof window[name]) {\n            throw 'Could not find initial values for filter form';\n        }\n\n        __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.each(window[name], function (values, index) {\n            var modelData = {\n                field: values.id,\n                isNew: false,\n                values: values\n            };\n\n            this.add(modelData);\n        }, this);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FiltersCollection);\n\n/***/ }),\n\n/***/ 159:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filter_view__ = __webpack_require__(157);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_backbone__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_backbone__);\n\n\n\nvar FiltersView = __WEBPACK_IMPORTED_MODULE_1_backbone___default.a.View.extend({\n    fields: null,\n\n    initialize: function initialize(attributes, options) {\n        this.fields = attributes.fields;\n\n        this.collection.on('add remove', this.render, this);\n    },\n\n    render: function render() {\n        this.$el.empty();\n\n        this.collection.each(function (filter, index) {\n            var view = new __WEBPACK_IMPORTED_MODULE_0__filter_view__[\"a\" /* default */]({\n                collection: this.collection,\n                fields: this.fields,\n                model: filter,\n                index: index\n            });\n\n            this.$el.append(view.render().el);\n        }, this);\n\n        return this;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FiltersView);\n\n/***/ }),\n\n/***/ 160:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__boolean_template_html__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__boolean_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__boolean_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__boolean_template_html___default.a);\n\nvar BooleanView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            value: this.$el.find('select').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BooleanView);\n\n/***/ }),\n\n/***/ 161:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__date_template_html__ = __webpack_require__(144);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__date_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__date_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__date_template_html___default.a);\n\nvar DateView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    singleInputOperators: ['on-or-before', 'before', 'on-or-after', 'after', 'is'],\n\n    doubleInputOperators: ['between'],\n\n    noInputOperators: ['today', 'yesterday', 'this-week', 'this-month', 'this-year'],\n\n    events: {\n        'change select': 'handleOperatorSelection',\n        'blur input': 'updateValues',\n        'change input': 'updateValues'\n    },\n\n    postRender: function postRender() {\n        this.handleOperatorSelection();\n    },\n\n    handleOperatorSelection: function handleOperatorSelection() {\n        var selected = this.$el.find('select').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.singleInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-date-inputs').show();\n            this.$el.find('.filter-date-end-wrapper').hide();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-date-inputs').hide();\n        } else {\n            this.$el.find('.filter-date-inputs').show();\n            this.$el.find('.filter-date-end-wrapper').show();\n        }\n    },\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            start: this.$el.find('input.filter-start').val(),\n            end: this.$el.find('input.filter-end').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DateView);\n\n/***/ }),\n\n/***/ 162:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__boolean_view__ = __webpack_require__(160);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__date_view__ = __webpack_require__(161);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__numeric_view__ = __webpack_require__(164);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__text_view__ = __webpack_require__(166);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__reference_view__ = __webpack_require__(165);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__manytomany_view__ = __webpack_require__(163);\n\n\n\n\n\n\n\nvar typeMap = {\n    boolean: __WEBPACK_IMPORTED_MODULE_0__boolean_view__[\"a\" /* default */],\n    date: __WEBPACK_IMPORTED_MODULE_1__date_view__[\"a\" /* default */],\n    numeric: __WEBPACK_IMPORTED_MODULE_2__numeric_view__[\"a\" /* default */],\n    text: __WEBPACK_IMPORTED_MODULE_3__text_view__[\"a\" /* default */],\n    reference: __WEBPACK_IMPORTED_MODULE_4__reference_view__[\"a\" /* default */],\n    manytomany: __WEBPACK_IMPORTED_MODULE_5__manytomany_view__[\"a\" /* default */]\n};\n\nvar Factory = function Factory(type, options, model, index) {\n    if (!options) {\n        options = {};\n    }\n\n    options.inputIndex = index;\n    options.model = model;\n\n    return new typeMap[type](options);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Factory);\n\n/***/ }),\n\n/***/ 163:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__manytomany_template_html__ = __webpack_require__(145);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__manytomany_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__manytomany_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__manytomany_template_html___default.a);\n\nvar ManyToManyView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    inputOperators: ['contains', 'not-contains'],\n\n    noInputOperators: ['is-empty', 'is-not-empty'],\n\n    events: {\n        'change select': 'handleOperatorSelection'\n    },\n\n    postRender: function postRender() {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            value: this.$el.find('select.filter-value').val()\n        });\n    },\n\n    handleOperatorSelection: function handleOperatorSelection() {\n        var selected = this.$el.find('.filter-op').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.inputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').show();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').hide();\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ManyToManyView);\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__numeric_template_html__ = __webpack_require__(146);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__numeric_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__numeric_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__numeric_template_html___default.a);\n\nvar NumericView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    singleInputOperators: ['is-less-than', 'is', 'is-more-than'],\n\n    doubleInputOperators: ['is-between'],\n\n    events: {\n        'change select': 'handleOperatorSelection',\n        'blur input': 'updateValues',\n        'change input': 'updateValues'\n    },\n\n    handleOperatorSelection: function handleOperatorSelection() {\n        var selected = this.$el.find('select').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.singleInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-numeric-inputs').show();\n            this.$el.find('.filter-numeric-operand2-wrapper').hide();\n        } else {\n            this.$el.find('.filter-numeric-inputs').show();\n            this.$el.find('.filter-numeric-operand2-wrapper').show();\n        }\n    },\n\n    postRender: function postRender() {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            operand1: this.$el.find('input.filter-operand1').val(),\n            operand2: this.$el.find('input.filter-operand2').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (NumericView);\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__reference_template_html__ = __webpack_require__(147);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__reference_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__reference_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__reference_template_html___default.a);\n\nvar ReferenceView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    inputOperators: ['is', 'is-not'],\n\n    noInputOperators: ['empty', 'not-empty'],\n\n    events: {\n        'change select': 'handleOperatorSelection'\n    },\n\n    postRender: function postRender() {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            value: this.$el.find('select.filter-value').val()\n        });\n    },\n\n    handleOperatorSelection: function handleOperatorSelection() {\n        var selected = this.$el.find('.filter-op').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.inputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').show();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').hide();\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ReferenceView);\n\n/***/ }),\n\n/***/ 166:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__text_template_html__ = __webpack_require__(148);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__text_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__text_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__text_template_html___default.a);\n\nvar TextView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            value: this.$el.find('input.filter-value').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextView);\n\n/***/ }),\n\n/***/ 176:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.js","import FieldsCollection from './filter/fields-collection';\nimport FiltersCollection from './filter/filters-collection';\nimport FiltersView from './filter/filters-view';\n\nclass Filter {\n    constructor(selector = '.filter-form') {\n        if (!selector.length) {\n            selector = '.filter-form'\n        }\n\n        $(selector).each(\n            function (index, form) {\n                var prefix = $(form).data('prefix'),\n                    fields = new FieldsCollection(),\n                    collection,\n                    view;\n\n                fields.loadConfigFromGlobalVariable(prefix);\n\n                collection = new FiltersCollection();\n                collection.loadValuesFromGlobalVariable(prefix);\n\n                if (!collection.length) {\n                    collection.add({});\n                }\n\n                view = new FiltersView({\n                    fields: fields,\n                    collection: collection\n                });\n\n                $(form).find('fieldset').first().append(view.render().el);\n            }\n        );\n    }\n}\n\nexport default Filter;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter.js","import Backbone from 'backbone';\nimport _ from 'underscore';\n\nvar BaseView = Backbone.View.extend({\n    tagName: 'span',\n\n    className: 'form-inline',\n\n    inputIndex: null,\n\n    options: null,\n\n    events: {\n        'change select': 'focusInput',\n        'blur input':    'updateValues',\n        'change input':  'updateValues'\n    },\n\n    initialize: function (attributes, options) {\n        this.inputIndex = attributes.inputIndex;\n\n        if ('undefined' !== typeof attributes.options) {\n            this.options = attributes.options;\n        }\n    },\n\n    render: function () {\n        this.$el.html(\n            this.template({\n                inputIndex: this.inputIndex,\n                values:     this.model.get('values'),\n                options:    this.options\n            })\n        );\n\n        if (this.model.get('isNew')) {\n            this.focusOnNextTick();\n        }\n\n        this.model.set('isNew', false);\n\n        this.postRender();\n\n        return this;\n    },\n\n    postRender: function () {\n\n    },\n\n    focusInput: function () {\n        var inputs = this.$el.find('input');\n\n        if (inputs.length) {\n            inputs.first().focus();\n        }\n\n        this.updateValues();\n    },\n\n    focusOnNextTick: function () {\n        setTimeout(\n            _.bind(\n                this.focusInput,\n                this\n            ),\n            1\n        );\n    }\n});\n\nexport default BaseView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/base-view.js","//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/backbone/backbone.js\n// module id = 140\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n        <select class=\\\"form-control input-sm filter-field\\\" name=\\\"ftr-id.<%- index %>\\\">\\n            <option value=\\\"\\\" disabled=\\\"disabled\\\" selected=\\\"selected\\\">Select a field to filter by...</option>\\n            <% _.each(fields, function (field) { %>\\n\\n            <% if (selected === field.id) { %>\\n            <option selected=\\\"selected\\\" value=\\\"<%- field.id.replace('+', ' ') %>\\\"><%- field.label %></option>\\n            <% } else { %>\\n            <option value=\\\"<%- field.id %>\\\"><%- field.label %></option>\\n            <% } %>\\n\\n            <% }); %>\\n        </select>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"form-inline\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-right visible-xs\\\"></span>\\n            <span class=\\\"form-inline filter-control-wrapper\\\"></span>\\n            <div class=\\\"pull-right btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"js-add btn btn-add btn-default btn-sm\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button>\\n                <button type=\\\"button\\\" class=\\\"js-remove btn btn-remove btn-default btn-sm\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/filter-template.html","module.exports = \"<span class=\\\"text-muted\\\"> is </span>\\n\\n&nbsp;\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% if ('undefined' === typeof values.value || null === values.value || '' === values.value) { %>\\n    <option value=\\\"\\\" selected=\\\"selected\\\">Yes or No</option>\\n    <option value=\\\"0\\\">No</option>\\n    <option value=\\\"1\\\">Yes</option>\\n    <% } else if (1 === parseInt(values.value, 10)) { %>\\n    <option value=\\\"\\\">Yes or No</option>\\n    <option value=\\\"0\\\">No</option>\\n    <option value=\\\"1\\\" selected=\\\"selected\\\">Yes</option>\\n    <% } else { %>\\n    <option value=\\\"\\\">Yes or No</option>\\n    <option value=\\\"0\\\" selected=\\\"selected\\\">No</option>\\n    <option value=\\\"1\\\">Yes</option>\\n    <% } %>\\n</select>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/boolean-template.html","module.exports = \"<%\\nvar options = {\\n    'on-or-between': 'is on or between',\\n    'between':       'is between',\\n    'on-or-before':  'is on or before',\\n    'before':        'is before',\\n    'on-or-after':   'is on or after',\\n    'after':         'is after',\\n    'is':            'is'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if ('today' === key) { %>\\n    <option value=\\\"\\\" disabled=\\\"disabled\\\">&mdash;</option>\\n    <% } %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></options>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></options>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<span class=\\\"filter-date-inputs\\\">\\n    <input name=\\\"ftr-start.<%- inputIndex %>\\\" type=\\\"date\\\" class=\\\"filter-start form-control input-sm\\\" value=\\\"<%- values.start %>\\\" />\\n\\n    <span class=\\\"filter-date-end-wrapper\\\">\\n        <span class=\\\"text-muted\\\">&nbsp; and &nbsp;</span>\\n        <input name=\\\"ftr-end.<%- inputIndex %>\\\" type=\\\"date\\\" class=\\\"filter-end form-control input-sm\\\" value=\\\"<%- values.end %>\\\" />\\n    </span>\\n</span>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/date-template.html","module.exports = \"<%\\nvar operators = {\\n    \\\"contains\\\":     \\\"contains\\\",\\n    \\\"not-contains\\\": \\\"does not contain\\\",\\n    \\\"is-empty\\\":     \\\"is empty\\\",\\n    \\\"is-not-empty\\\": \\\"is not empty\\\"\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"filter-op form-control input-sm\\\">\\n    <% _.each(operators, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control filter-value filter-input input-sm\\\">\\n    <option value=\\\"\\\"></option>\\n\\n    <% _.each(options, function (option) { %>\\n\\n    <% if (parseInt(values.value, 10) === option.value) { %>\\n    <option value=\\\"<%- option.value %>\\\" selected=\\\"selected\\\"><%- option.title %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- option.value %>\\\"><%- option.title %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/manytomany-template.html","module.exports = \"<%\\nvar options = {\\n    'is-less-than': 'is less than',\\n    'is':           'is',\\n    'is-more-than': 'is more than',\\n    'is-between':   'is between'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<span class=\\\"filter-numeric-inputs\\\">\\n    <input class=\\\"filter-operand1 form-control input-sm\\\" name=\\\"ftr-operand1.<%- inputIndex %>\\\" step=\\\"any\\\" type=\\\"number\\\"\\n        value=\\\"<%- values.operand1 %>\\\" />\\n\\n    <span class=\\\"filter-numeric-operand2-wrapper\\\">\\n        <span class=\\\"text-muted\\\">&nbsp; and &nbsp;</span>\\n        <input class=\\\"filter-operand2 form-control input-sm\\\" name=\\\"ftr-operand2.<%- inputIndex %>\\\" step=\\\"any\\\"\\n            type=\\\"number\\\" value=\\\"<%- values.operand2 %>\\\" />\\n    </span>\\n</span>\\n\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/numeric-template.html","module.exports = \"<%\\nvar operators = {\\n    \\\"is\\\":        \\\"is\\\",\\n    \\\"is-not\\\":    \\\"is not\\\",\\n    \\\"empty\\\":     \\\"is empty\\\",\\n    \\\"not-empty\\\": \\\"is not empty\\\"\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control filter-op input-sm\\\">\\n    <% _.each(operators, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control filter-value filter-input input-sm\\\">\\n    <option value=\\\"\\\"></option>\\n\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (parseInt(values.value, 10) === option.value) { %>\\n    <option value=\\\"<%- option.value %>\\\" selected=\\\"selected\\\"><%- option.title %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- option.value %>\\\"><%- option.title %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/reference-template.html","module.exports = \"<%\\nvar options = {\\n    'contains':         'contains',\\n    'does-not-contain': 'does not contain',\\n    'starts-with':      'starts with',\\n    'ends-with':        'ends with'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></options>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></options>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<input name=\\\"ftr-value.<%- inputIndex %>\\\" type=\\\"text\\\" class=\\\"filter-value form-control input-sm\\\" value=\\\"<%- values.value %>\\\" />\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/text-template.html","import Backbone from 'backbone';\nimport _ from 'underscore';\n\nvar Model = Backbone.Model.extend({\n    defaults: {\n        id:       '',\n        label:    '',\n        type:     '',\n        options:  {},\n        defaults: {}\n    }\n});\n\nvar FieldsCollection = Backbone.Collection.extend({\n    model: Model,\n\n    loadConfigFromGlobalVariable: function (prefix) {\n        var name = 'FILTER_FIELDS';\n\n        if (prefix) {\n            name = prefix + name;\n        }\n\n        if ('undefined' === typeof window[name]) {\n            throw 'Could not find initial config for filter form';\n        }\n\n        _.each(\n            window[name],\n            function (field) {\n                this.add(field);\n            },\n            this\n        );\n    }\n});\n\nexport default FieldsCollection;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/fields-collection.js","import Backbone from 'backbone';\nimport _ from 'underscore';\nimport typeFactory from './type/factory';\nimport templateHtml from './filter-template.html';\n\nvar customHtml = $('#filter-template').text(),\n    template   = _.template(customHtml ? customHtml : templateHtml);\n\nvar FilterView = Backbone.View.extend({\n    events: {\n        'change .filter-field': 'selectField',\n        'click .js-add':       'addFilter',\n        'click .js-remove':    'removeFilter'\n    },\n\n    className: 'filter-row',\n\n    fields: null,\n\n    selected: null,\n\n    initialize: function (attributes, options) {\n        this.fields   = attributes.fields;\n        this.selected = this.model.get('field');\n        this.index    = attributes.index;\n    },\n\n    render: function () {\n        this.$el.html(\n            template({\n                fields:   this.fields.toJSON(),\n                selected: this.selected,\n                index:    this.index\n            })\n        );\n\n        if (this.selected) {\n            var selectedField = this.fields.findWhere({id: this.selected}),\n                values        = this.model.get('values');\n\n            _.each(\n                selectedField.get('defaults'),\n                function (value, key) {\n                    if ('undefined' === typeof values[key]) {\n                        values[key] = value;\n                    }\n                }\n            );\n\n            this.model.set('values', values);\n\n            this.$el.find('.filter-control-wrapper').html(\n                typeFactory(\n                    selectedField.get('type'),\n                    selectedField.get('options'),\n                    this.model,\n                    this.index\n                ).render().el\n            );\n        }\n\n        if (1 === this.collection.length) {\n            this.$el.find('.btn-remove').attr('disabled', 'disabled');\n        }\n\n        return this;\n    },\n\n    selectField: function (e) {\n        this.selected = this.$el.find('.filter-field').val();\n        this.model.set('field', this.selected);\n        this.render();\n    },\n\n    addFilter: function (e) {\n        e.preventDefault();\n        this.collection.add({});\n    },\n\n    removeFilter: function (e) {\n        e.preventDefault();\n        this.model.destroy();\n    }\n});\n\nexport default FilterView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/filter-view.js","import Backbone from 'backbone';\nimport _ from 'underscore';\n\nvar Model = Backbone.Model.extend({\n    defaults: {\n        field:  '',\n        isNew:  true,\n        values: {}\n    }\n});\n\nvar FiltersCollection = Backbone.Collection.extend({\n    model: Model,\n\n    loadValuesFromGlobalVariable: function (prefix) {\n        var name = 'FILTER_VALUES';\n\n        if (prefix) {\n            name = prefix + name;\n        }\n\n        if ('undefined' === typeof window[name]) {\n            throw 'Could not find initial values for filter form';\n        }\n\n        _.each(\n            window[name],\n            function (values, index) {\n                var modelData = {\n                    field:  values.id,\n                    isNew:  false,\n                    values: values\n                };\n\n                this.add(modelData);\n            },\n            this\n        );\n    }\n});\n\nexport default FiltersCollection;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/filters-collection.js","import FilterView from './filter-view';\nimport Backbone from 'backbone';\n\nvar FiltersView = Backbone.View.extend({\n    fields: null,\n\n    initialize: function (attributes, options) {\n        this.fields = attributes.fields;\n\n        this.collection.on('add remove', this.render, this);\n    },\n\n    render: function () {\n        this.$el.empty();\n\n        this.collection.each(\n            function (filter, index) {\n                var view = new FilterView({\n                    collection: this.collection,\n                    fields:     this.fields,\n                    model:      filter,\n                    index:      index\n                });\n\n                this.$el.append(view.render().el);\n            },\n            this\n        );\n\n        return this;\n    }\n});\n\nexport default FiltersView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/filters-view.js","import BaseView from './base-view';\nimport templateHtml from './boolean-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar BooleanView = BaseView.extend({\n    template: template,\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                value: this.$el.find('select').val()\n            }\n        );\n    }\n});\n\nexport default BooleanView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/boolean-view.js","import BaseView from './base-view';\nimport templateHtml from './date-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar DateView = BaseView.extend({\n    template: template,\n\n    singleInputOperators: ['on-or-before', 'before', 'on-or-after', 'after', 'is'],\n\n    doubleInputOperators: ['between'],\n\n    noInputOperators: ['today', 'yesterday', 'this-week', 'this-month', 'this-year'],\n\n    events: {\n        'change select': 'handleOperatorSelection',\n        'blur input':    'updateValues',\n        'change input':  'updateValues'\n    },\n\n    postRender: function () {\n        this.handleOperatorSelection();\n    },\n\n    handleOperatorSelection: function () {\n        var selected = this.$el.find('select').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.singleInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-date-inputs').show();\n            this.$el.find('.filter-date-end-wrapper').hide();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-date-inputs').hide();\n        } else {\n            this.$el.find('.filter-date-inputs').show();\n            this.$el.find('.filter-date-end-wrapper').show();\n        }\n    },\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:  this.$el.find('select').val(),\n                start: this.$el.find('input.filter-start').val(),\n                end:   this.$el.find('input.filter-end').val()\n            }\n        );\n    }\n});\n\nexport default DateView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/date-view.js","import BooleanView from './boolean-view';\nimport DateView from './date-view';\nimport NumericView from './numeric-view';\nimport TextView from './text-view';\nimport ReferenceView from './reference-view';\nimport ManyToManyView from './manytomany-view';\n\nvar typeMap = {\n    boolean:    BooleanView,\n    date:       DateView,\n    numeric:    NumericView,\n    text:       TextView,\n    reference:  ReferenceView,\n    manytomany: ManyToManyView\n};\n\nvar Factory = function (type, options, model, index) {\n    if (!options) {\n        options = {};\n    }\n\n    options.inputIndex = index;\n    options.model      = model;\n\n    return new typeMap[type](options);\n};\n\nexport default Factory;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/factory.js","import BaseView from './base-view';\nimport templateHtml from './manytomany-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar ManyToManyView = BaseView.extend({\n    template: template,\n\n    inputOperators: ['contains', 'not-contains'],\n\n    noInputOperators: ['is-empty', 'is-not-empty'],\n\n    events: {\n        'change select': 'handleOperatorSelection'\n    },\n\n    postRender: function () {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:  this.$el.find('select').val(),\n                value: this.$el.find('select.filter-value').val()\n            }\n        );\n    },\n\n    handleOperatorSelection: function () {\n        var selected = this.$el.find('.filter-op').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.inputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').show();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').hide();\n        }\n    }\n});\n\nexport default ManyToManyView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/manytomany-view.js","import BaseView from './base-view';\nimport templateHtml from './numeric-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar NumericView = BaseView.extend({\n    template: template,\n\n    singleInputOperators: ['is-less-than', 'is', 'is-more-than'],\n\n    doubleInputOperators: ['is-between'],\n\n    events: {\n        'change select': 'handleOperatorSelection',\n        'blur input':    'updateValues',\n        'change input':  'updateValues'\n    },\n\n    handleOperatorSelection: function () {\n        var selected = this.$el.find('select').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.singleInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-numeric-inputs').show();\n            this.$el.find('.filter-numeric-operand2-wrapper').hide();\n        } else {\n            this.$el.find('.filter-numeric-inputs').show();\n            this.$el.find('.filter-numeric-operand2-wrapper').show();\n        }\n    },\n\n    postRender: function () {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:     this.$el.find('select').val(),\n                operand1: this.$el.find('input.filter-operand1').val(),\n                operand2: this.$el.find('input.filter-operand2').val()\n            }\n        );\n    }\n});\n\nexport default NumericView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/numeric-view.js","import BaseView from './base-view';\nimport templateHtml from './reference-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar ReferenceView = BaseView.extend({\n    template: template,\n\n    inputOperators: ['is', 'is-not'],\n\n    noInputOperators: ['empty', 'not-empty'],\n\n    events: {\n        'change select': 'handleOperatorSelection'\n    },\n\n    postRender: function () {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:  this.$el.find('select').val(),\n                value: this.$el.find('select.filter-value').val()\n            }\n        );\n    },\n\n    handleOperatorSelection: function () {\n        var selected = this.$el.find('.filter-op').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.inputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').show();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').hide();\n        }\n    }\n});\n\nexport default ReferenceView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/reference-view.js","import BaseView from './base-view';\nimport templateHtml from './text-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar TextView = BaseView.extend({\n    template: template,\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:  this.$el.find('select').val(),\n                value: this.$el.find('input.filter-value').val()\n            }\n        );\n    }\n});\n\nexport default TextView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/text-view.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 176\n// module chunks = 0"],"sourceRoot":""}