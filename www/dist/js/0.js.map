{"version":3,"sources":["webpack:///0.js","webpack:///./www/src/js/filter.js","webpack:///./~/backbone/backbone.js","webpack:///./www/src/js/filter/type/base-view.js","webpack:///(webpack)/buildin/global.js","webpack:///./www/src/js/filter/filter-template.html","webpack:///./www/src/js/filter/type/boolean-template.html","webpack:///./www/src/js/filter/type/date-template.html","webpack:///./www/src/js/filter/type/manytomany-template.html","webpack:///./www/src/js/filter/type/numeric-template.html","webpack:///./www/src/js/filter/type/reference-template.html","webpack:///./www/src/js/filter/type/text-template.html","webpack:///./www/src/js/filter/fields-collection.js","webpack:///./www/src/js/filter/filter-view.js","webpack:///./www/src/js/filter/filters-collection.js","webpack:///./www/src/js/filter/filters-view.js","webpack:///./www/src/js/filter/type/boolean-view.js","webpack:///./www/src/js/filter/type/date-view.js","webpack:///./www/src/js/filter/type/factory.js","webpack:///./www/src/js/filter/type/manytomany-view.js","webpack:///./www/src/js/filter/type/numeric-view.js","webpack:///./www/src/js/filter/type/reference-view.js","webpack:///./www/src/js/filter/type/text-view.js"],"names":["webpackJsonp","128","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__filter_fields_collection__","__WEBPACK_IMPORTED_MODULE_1__filter_filters_collection__","__WEBPACK_IMPORTED_MODULE_2__filter_filters_view__","Filter","selector","arguments","length","undefined","this","$","each","index","form","collection","view","prefix","data","fields","loadConfigFromGlobalVariable","loadValuesFromGlobalVariable","add","find","first","append","render","el","137","exports","global","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","root","self","_","Backbone","apply","previousBackbone","slice","Array","prototype","VERSION","noConflict","emulateHTTP","emulateJSON","addMethod","method","attribute","iteratee","context","cb","defaultVal","args","call","unshift","addUnderscoreMethods","Class","methods","isFunction","isObject","_isModel","modelMatcher","isString","model","get","attrs","matcher","matches","attributes","Events","eventSplitter","eventsApi","events","name","callback","opts","names","i","keys","test","split","on","internalOn","obj","listening","_events","onApi","ctx","_listeners","id","listenTo","_listenId","uniqueId","listeningTo","_listeningTo","thisId","objId","count","options","handlers","push","off","offApi","listeners","stopListening","ids","remaining","j","handler","_callback","once","onceMap","bind","listenToOnce","map","offer","trigger","Math","max","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","unbind","extend","Model","cid","cidPrefix","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","attr","escape","has","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","isEmpty","changedAttributes","diff","old","size","previous","previousAttributes","fetch","success","resp","serverAttrs","wrapError","save","validate","wait","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","error","values","pairs","invert","pick","omit","chain","Collection","models","comparator","_reset","reset","setOptions","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","some","m","_removeReference","previousModels","pop","shift","_byId","modelId","where","findWhere","Error","sortBy","pluck","create","callbackOpts","indexOf","_onModelEvent","event","prevId","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","$el","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","match","delegate","eventName","listener","undelegate","_createElement","document","createElement","className","_setAttributes","type","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","path","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","rootPath","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","e","title","assign","_updateHash","protoProps","staticProps","child","parent","__super__","140","__WEBPACK_IMPORTED_MODULE_0_backbone__","__WEBPACK_IMPORTED_MODULE_0_backbone___default","n","__WEBPACK_IMPORTED_MODULE_1_underscore__","__WEBPACK_IMPORTED_MODULE_1_underscore___default","BaseView","a","inputIndex","change select","blur input","change input","html","template","focusOnNextTick","postRender","focusInput","inputs","focus","updateValues","setTimeout","141","g","Function","eval","144","145","146","147","148","149","150","158","label","FieldsCollection","field","159","__WEBPACK_IMPORTED_MODULE_2__type_factory__","__WEBPACK_IMPORTED_MODULE_3__filter_template_html__","__WEBPACK_IMPORTED_MODULE_3__filter_template_html___default","customHtml","text","FilterView","change .filter-field","click .js-add","click .js-remove","selected","selectedField","selectField","addFilter","preventDefault","removeFilter","160","FiltersCollection","modelData","161","__WEBPACK_IMPORTED_MODULE_0__filter_view__","__WEBPACK_IMPORTED_MODULE_1_backbone__","__WEBPACK_IMPORTED_MODULE_1_backbone___default","FiltersView","empty","162","__WEBPACK_IMPORTED_MODULE_0__base_view__","__WEBPACK_IMPORTED_MODULE_1__boolean_template_html__","__WEBPACK_IMPORTED_MODULE_1__boolean_template_html___default","__WEBPACK_IMPORTED_MODULE_2_underscore__","__WEBPACK_IMPORTED_MODULE_2_underscore___default","BooleanView","163","__WEBPACK_IMPORTED_MODULE_1__date_template_html__","__WEBPACK_IMPORTED_MODULE_1__date_template_html___default","DateView","singleInputOperators","doubleInputOperators","noInputOperators","handleOperatorSelection","show","hide","comp","end","164","__WEBPACK_IMPORTED_MODULE_0__boolean_view__","__WEBPACK_IMPORTED_MODULE_1__date_view__","__WEBPACK_IMPORTED_MODULE_2__numeric_view__","__WEBPACK_IMPORTED_MODULE_3__text_view__","__WEBPACK_IMPORTED_MODULE_4__reference_view__","__WEBPACK_IMPORTED_MODULE_5__manytomany_view__","typeMap","boolean","date","numeric","reference","manytomany","Factory","165","__WEBPACK_IMPORTED_MODULE_1__manytomany_template_html__","__WEBPACK_IMPORTED_MODULE_1__manytomany_template_html___default","ManyToManyView","inputOperators","166","__WEBPACK_IMPORTED_MODULE_1__numeric_template_html__","__WEBPACK_IMPORTED_MODULE_1__numeric_template_html___default","NumericView","operand1","operand2","167","__WEBPACK_IMPORTED_MODULE_1__reference_template_html__","__WEBPACK_IMPORTED_MODULE_1__reference_template_html___default","ReferenceView","168","__WEBPACK_IMPORTED_MODULE_1__text_template_html__","__WEBPACK_IMPORTED_MODULE_1__text_template_html___default","TextView"],"mappings":"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","file":"0.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 128:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filter_fields_collection__ = __webpack_require__(158);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter_filters_collection__ = __webpack_require__(160);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__filter_filters_view__ = __webpack_require__(161);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\nvar Filter = function Filter() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.filter-form';\n\n    _classCallCheck(this, Filter);\n\n    if (!selector.length) {\n        selector = '.filter-form';\n    }\n\n    $(selector).each(function (index, form) {\n        var prefix = $(form).data('prefix'),\n            fields = new __WEBPACK_IMPORTED_MODULE_0__filter_fields_collection__[\"a\" /* default */](),\n            collection,\n            view;\n\n        fields.loadConfigFromGlobalVariable(prefix);\n\n        collection = new __WEBPACK_IMPORTED_MODULE_1__filter_filters_collection__[\"a\" /* default */]();\n        collection.loadValuesFromGlobalVariable(prefix);\n\n        if (!collection.length) {\n            collection.add({});\n        }\n\n        view = new __WEBPACK_IMPORTED_MODULE_2__filter_filters_view__[\"a\" /* default */]({\n            fields: fields,\n            collection: collection\n        });\n\n        $(form).find('fieldset').first().append(view.render().el);\n    });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Filter);\n\n/***/ }),\n\n/***/ 137:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(117), __webpack_require__(142), exports], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(141)))\n\n/***/ }),\n\n/***/ 140:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_backbone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n\n\n\nvar BaseView = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.View.extend({\n    tagName: 'span',\n\n    className: 'form-inline',\n\n    inputIndex: null,\n\n    options: null,\n\n    events: {\n        'change select': 'focusInput',\n        'blur input': 'updateValues',\n        'change input': 'updateValues'\n    },\n\n    initialize: function initialize(attributes, options) {\n        this.inputIndex = attributes.inputIndex;\n\n        if ('undefined' !== typeof attributes.options) {\n            this.options = attributes.options;\n        }\n    },\n\n    render: function render() {\n        this.$el.html(this.template({\n            inputIndex: this.inputIndex,\n            values: this.model.get('values'),\n            options: this.options\n        }));\n\n        if (this.model.get('isNew')) {\n            this.focusOnNextTick();\n        }\n\n        this.model.set('isNew', false);\n\n        this.postRender();\n\n        return this;\n    },\n\n    postRender: function postRender() {},\n\n    focusInput: function focusInput() {\n        var inputs = this.$el.find('input');\n\n        if (inputs.length) {\n            inputs.first().focus();\n        }\n\n        this.updateValues();\n    },\n\n    focusOnNextTick: function focusOnNextTick() {\n        setTimeout(__WEBPACK_IMPORTED_MODULE_1_underscore___default.a.bind(this.focusInput, this), 1);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BaseView);\n\n/***/ }),\n\n/***/ 141:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ 144:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n        <select class=\\\"form-control input-sm filter-field\\\" name=\\\"ftr-id.<%- index %>\\\">\\n            <option value=\\\"\\\" disabled=\\\"disabled\\\" selected=\\\"selected\\\">Select a field to filter by...</option>\\n            <% _.each(fields, function (field) { %>\\n\\n            <% if (selected === field.id) { %>\\n            <option selected=\\\"selected\\\" value=\\\"<%- field.id.replace('+', ' ') %>\\\"><%- field.label %></option>\\n            <% } else { %>\\n            <option value=\\\"<%- field.id %>\\\"><%- field.label %></option>\\n            <% } %>\\n\\n            <% }); %>\\n        </select>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"form-inline\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-right visible-xs\\\"></span>\\n            <span class=\\\"form-inline filter-control-wrapper\\\"></span>\\n            <div class=\\\"pull-right btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"js-add btn btn-add btn-default btn-sm\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button>\\n                <button type=\\\"button\\\" class=\\\"js-remove btn btn-remove btn-default btn-sm\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ 145:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<span class=\\\"text-muted\\\"> is </span>\\n\\n&nbsp;\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% if ('undefined' === typeof values.value || null === values.value || '' === values.value) { %>\\n    <option value=\\\"\\\" selected=\\\"selected\\\">Yes or No</option>\\n    <option value=\\\"0\\\">No</option>\\n    <option value=\\\"1\\\">Yes</option>\\n    <% } else if (1 === parseInt(values.value, 10)) { %>\\n    <option value=\\\"\\\">Yes or No</option>\\n    <option value=\\\"0\\\">No</option>\\n    <option value=\\\"1\\\" selected=\\\"selected\\\">Yes</option>\\n    <% } else { %>\\n    <option value=\\\"\\\">Yes or No</option>\\n    <option value=\\\"0\\\" selected=\\\"selected\\\">No</option>\\n    <option value=\\\"1\\\">Yes</option>\\n    <% } %>\\n</select>\\n\";\n\n/***/ }),\n\n/***/ 146:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar options = {\\n    'on-or-between': 'is on or between',\\n    'between':       'is between',\\n    'on-or-before':  'is on or before',\\n    'before':        'is before',\\n    'on-or-after':   'is on or after',\\n    'after':         'is after',\\n    'is':            'is'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if ('today' === key) { %>\\n    <option value=\\\"\\\" disabled=\\\"disabled\\\">&mdash;</option>\\n    <% } %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></options>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></options>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<span class=\\\"filter-date-inputs\\\">\\n    <input name=\\\"ftr-start.<%- inputIndex %>\\\" type=\\\"date\\\" class=\\\"filter-start form-control input-sm\\\" value=\\\"<%- values.start %>\\\" />\\n\\n    <span class=\\\"filter-date-end-wrapper\\\">\\n        <span class=\\\"text-muted\\\">&nbsp; and &nbsp;</span>\\n        <input name=\\\"ftr-end.<%- inputIndex %>\\\" type=\\\"date\\\" class=\\\"filter-end form-control input-sm\\\" value=\\\"<%- values.end %>\\\" />\\n    </span>\\n</span>\\n\";\n\n/***/ }),\n\n/***/ 147:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar operators = {\\n    \\\"contains\\\":     \\\"contains\\\",\\n    \\\"not-contains\\\": \\\"does not contain\\\",\\n    \\\"is-empty\\\":     \\\"is empty\\\",\\n    \\\"is-not-empty\\\": \\\"is not empty\\\"\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"filter-op form-control input-sm\\\">\\n    <% _.each(operators, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control filter-value filter-input input-sm\\\">\\n    <option value=\\\"\\\"></option>\\n\\n    <% _.each(options, function (option) { %>\\n\\n    <% if (parseInt(values.value, 10) === option.value) { %>\\n    <option value=\\\"<%- option.value %>\\\" selected=\\\"selected\\\"><%- option.title %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- option.value %>\\\"><%- option.title %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\";\n\n/***/ }),\n\n/***/ 148:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar options = {\\n    'is-less-than': 'is less than',\\n    'is':           'is',\\n    'is-more-than': 'is more than',\\n    'is-between':   'is between'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<span class=\\\"filter-numeric-inputs\\\">\\n    <input class=\\\"filter-operand1 form-control input-sm\\\" name=\\\"ftr-operand1.<%- inputIndex %>\\\" step=\\\"any\\\" type=\\\"number\\\"\\n        value=\\\"<%- values.operand1 %>\\\" />\\n\\n    <span class=\\\"filter-numeric-operand2-wrapper\\\">\\n        <span class=\\\"text-muted\\\">&nbsp; and &nbsp;</span>\\n        <input class=\\\"filter-operand2 form-control input-sm\\\" name=\\\"ftr-operand2.<%- inputIndex %>\\\" step=\\\"any\\\"\\n            type=\\\"number\\\" value=\\\"<%- values.operand2 %>\\\" />\\n    </span>\\n</span>\\n\\n\";\n\n/***/ }),\n\n/***/ 149:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar operators = {\\n    \\\"is\\\":        \\\"is\\\",\\n    \\\"is-not\\\":    \\\"is not\\\",\\n    \\\"empty\\\":     \\\"is empty\\\",\\n    \\\"not-empty\\\": \\\"is not empty\\\"\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control filter-op input-sm\\\">\\n    <% _.each(operators, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control filter-value filter-input input-sm\\\">\\n    <option value=\\\"\\\"></option>\\n\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (parseInt(values.value, 10) === option.value) { %>\\n    <option value=\\\"<%- option.value %>\\\" selected=\\\"selected\\\"><%- option.title %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- option.value %>\\\"><%- option.title %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\";\n\n/***/ }),\n\n/***/ 150:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<%\\nvar options = {\\n    'contains':         'contains',\\n    'does-not-contain': 'does not contain',\\n    'starts-with':      'starts with',\\n    'ends-with':        'ends with'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></options>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></options>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<input name=\\\"ftr-value.<%- inputIndex %>\\\" type=\\\"text\\\" class=\\\"filter-value form-control input-sm\\\" value=\\\"<%- values.value %>\\\" />\\n\";\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_backbone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n\n\n\nvar Model = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.Model.extend({\n    defaults: {\n        id: '',\n        label: '',\n        type: '',\n        options: {},\n        defaults: {}\n    }\n});\n\nvar FieldsCollection = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.Collection.extend({\n    model: Model,\n\n    loadConfigFromGlobalVariable: function loadConfigFromGlobalVariable(prefix) {\n        var name = 'FILTER_FIELDS';\n\n        if (prefix) {\n            name = prefix + name;\n        }\n\n        if ('undefined' === typeof window[name]) {\n            throw 'Could not find initial config for filter form';\n        }\n\n        __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.each(window[name], function (field) {\n            this.add(field);\n        }, this);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FieldsCollection);\n\n/***/ }),\n\n/***/ 159:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_backbone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_factory__ = __webpack_require__(164);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__filter_template_html__ = __webpack_require__(144);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__filter_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__filter_template_html__);\n\n\n\n\n\nvar customHtml = $('#filter-template').text(),\n    template = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.template(customHtml ? customHtml : __WEBPACK_IMPORTED_MODULE_3__filter_template_html___default.a);\n\nvar FilterView = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.View.extend({\n    events: {\n        'change .filter-field': 'selectField',\n        'click .js-add': 'addFilter',\n        'click .js-remove': 'removeFilter'\n    },\n\n    className: 'filter-row',\n\n    fields: null,\n\n    selected: null,\n\n    initialize: function initialize(attributes, options) {\n        this.fields = attributes.fields;\n        this.selected = this.model.get('field');\n        this.index = attributes.index;\n    },\n\n    render: function render() {\n        this.$el.html(template({\n            fields: this.fields.toJSON(),\n            selected: this.selected,\n            index: this.index\n        }));\n\n        if (this.selected) {\n            var selectedField = this.fields.findWhere({ id: this.selected }),\n                values = this.model.get('values');\n\n            __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.each(selectedField.get('defaults'), function (value, key) {\n                if ('undefined' === typeof values[key]) {\n                    values[key] = value;\n                }\n            });\n\n            this.model.set('values', values);\n\n            this.$el.find('.filter-control-wrapper').html(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__type_factory__[\"a\" /* default */])(selectedField.get('type'), selectedField.get('options'), this.model, this.index).render().el);\n        }\n\n        if (1 === this.collection.length) {\n            this.$el.find('.btn-remove').attr('disabled', 'disabled');\n        }\n\n        return this;\n    },\n\n    selectField: function selectField(e) {\n        this.selected = this.$el.find('.filter-field').val();\n        this.model.set('field', this.selected);\n        this.render();\n    },\n\n    addFilter: function addFilter(e) {\n        e.preventDefault();\n        this.collection.add({});\n    },\n\n    removeFilter: function removeFilter(e) {\n        e.preventDefault();\n        this.model.destroy();\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FilterView);\n\n/***/ }),\n\n/***/ 160:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_backbone__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n\n\n\nvar Model = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.Model.extend({\n    defaults: {\n        field: '',\n        isNew: true,\n        values: {}\n    }\n});\n\nvar FiltersCollection = __WEBPACK_IMPORTED_MODULE_0_backbone___default.a.Collection.extend({\n    model: Model,\n\n    loadValuesFromGlobalVariable: function loadValuesFromGlobalVariable(prefix) {\n        var name = 'FILTER_VALUES';\n\n        if (prefix) {\n            name = prefix + name;\n        }\n\n        if ('undefined' === typeof window[name]) {\n            throw 'Could not find initial values for filter form';\n        }\n\n        __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.each(window[name], function (values, index) {\n            var modelData = {\n                field: values.id,\n                isNew: false,\n                values: values\n            };\n\n            this.add(modelData);\n        }, this);\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FiltersCollection);\n\n/***/ }),\n\n/***/ 161:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filter_view__ = __webpack_require__(159);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_backbone__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_backbone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_backbone__);\n\n\n\nvar FiltersView = __WEBPACK_IMPORTED_MODULE_1_backbone___default.a.View.extend({\n    fields: null,\n\n    initialize: function initialize(attributes, options) {\n        this.fields = attributes.fields;\n\n        this.collection.on('add remove', this.render, this);\n    },\n\n    render: function render() {\n        this.$el.empty();\n\n        this.collection.each(function (filter, index) {\n            var view = new __WEBPACK_IMPORTED_MODULE_0__filter_view__[\"a\" /* default */]({\n                collection: this.collection,\n                fields: this.fields,\n                model: filter,\n                index: index\n            });\n\n            this.$el.append(view.render().el);\n        }, this);\n\n        return this;\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (FiltersView);\n\n/***/ }),\n\n/***/ 162:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__boolean_template_html__ = __webpack_require__(145);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__boolean_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__boolean_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__boolean_template_html___default.a);\n\nvar BooleanView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            value: this.$el.find('select').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BooleanView);\n\n/***/ }),\n\n/***/ 163:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__date_template_html__ = __webpack_require__(146);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__date_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__date_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__date_template_html___default.a);\n\nvar DateView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    singleInputOperators: ['on-or-before', 'before', 'on-or-after', 'after', 'is'],\n\n    doubleInputOperators: ['between'],\n\n    noInputOperators: ['today', 'yesterday', 'this-week', 'this-month', 'this-year'],\n\n    events: {\n        'change select': 'handleOperatorSelection',\n        'blur input': 'updateValues',\n        'change input': 'updateValues'\n    },\n\n    postRender: function postRender() {\n        this.handleOperatorSelection();\n    },\n\n    handleOperatorSelection: function handleOperatorSelection() {\n        var selected = this.$el.find('select').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.singleInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-date-inputs').show();\n            this.$el.find('.filter-date-end-wrapper').hide();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-date-inputs').hide();\n        } else {\n            this.$el.find('.filter-date-inputs').show();\n            this.$el.find('.filter-date-end-wrapper').show();\n        }\n    },\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            start: this.$el.find('input.filter-start').val(),\n            end: this.$el.find('input.filter-end').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DateView);\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__boolean_view__ = __webpack_require__(162);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__date_view__ = __webpack_require__(163);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__numeric_view__ = __webpack_require__(166);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__text_view__ = __webpack_require__(168);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__reference_view__ = __webpack_require__(167);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__manytomany_view__ = __webpack_require__(165);\n\n\n\n\n\n\n\nvar typeMap = {\n    boolean: __WEBPACK_IMPORTED_MODULE_0__boolean_view__[\"a\" /* default */],\n    date: __WEBPACK_IMPORTED_MODULE_1__date_view__[\"a\" /* default */],\n    numeric: __WEBPACK_IMPORTED_MODULE_2__numeric_view__[\"a\" /* default */],\n    text: __WEBPACK_IMPORTED_MODULE_3__text_view__[\"a\" /* default */],\n    reference: __WEBPACK_IMPORTED_MODULE_4__reference_view__[\"a\" /* default */],\n    manytomany: __WEBPACK_IMPORTED_MODULE_5__manytomany_view__[\"a\" /* default */]\n};\n\nvar Factory = function Factory(type, options, model, index) {\n    if (!options) {\n        options = {};\n    }\n\n    options.inputIndex = index;\n    options.model = model;\n\n    return new typeMap[type](options);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Factory);\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__manytomany_template_html__ = __webpack_require__(147);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__manytomany_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__manytomany_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__manytomany_template_html___default.a);\n\nvar ManyToManyView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    inputOperators: ['contains', 'not-contains'],\n\n    noInputOperators: ['is-empty', 'is-not-empty'],\n\n    events: {\n        'change select': 'handleOperatorSelection'\n    },\n\n    postRender: function postRender() {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            value: this.$el.find('select.filter-value').val()\n        });\n    },\n\n    handleOperatorSelection: function handleOperatorSelection() {\n        var selected = this.$el.find('.filter-op').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.inputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').show();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').hide();\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ManyToManyView);\n\n/***/ }),\n\n/***/ 166:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__numeric_template_html__ = __webpack_require__(148);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__numeric_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__numeric_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__numeric_template_html___default.a);\n\nvar NumericView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    singleInputOperators: ['is-less-than', 'is', 'is-more-than'],\n\n    doubleInputOperators: ['is-between'],\n\n    events: {\n        'change select': 'handleOperatorSelection',\n        'blur input': 'updateValues',\n        'change input': 'updateValues'\n    },\n\n    handleOperatorSelection: function handleOperatorSelection() {\n        var selected = this.$el.find('select').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.singleInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-numeric-inputs').show();\n            this.$el.find('.filter-numeric-operand2-wrapper').hide();\n        } else {\n            this.$el.find('.filter-numeric-inputs').show();\n            this.$el.find('.filter-numeric-operand2-wrapper').show();\n        }\n    },\n\n    postRender: function postRender() {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            operand1: this.$el.find('input.filter-operand1').val(),\n            operand2: this.$el.find('input.filter-operand2').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (NumericView);\n\n/***/ }),\n\n/***/ 167:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__reference_template_html__ = __webpack_require__(149);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__reference_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__reference_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__reference_template_html___default.a);\n\nvar ReferenceView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    inputOperators: ['is', 'is-not'],\n\n    noInputOperators: ['empty', 'not-empty'],\n\n    events: {\n        'change select': 'handleOperatorSelection'\n    },\n\n    postRender: function postRender() {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            value: this.$el.find('select.filter-value').val()\n        });\n    },\n\n    handleOperatorSelection: function handleOperatorSelection() {\n        var selected = this.$el.find('.filter-op').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.inputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').show();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').hide();\n        }\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ReferenceView);\n\n/***/ }),\n\n/***/ 168:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_view__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__text_template_html__ = __webpack_require__(150);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__text_template_html___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__text_template_html__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_underscore__);\n\n\n\n\nvar template = __WEBPACK_IMPORTED_MODULE_2_underscore___default.a.template(__WEBPACK_IMPORTED_MODULE_1__text_template_html___default.a);\n\nvar TextView = __WEBPACK_IMPORTED_MODULE_0__base_view__[\"a\" /* default */].extend({\n    template: template,\n\n    updateValues: function updateValues() {\n        this.model.set('values', {\n            comp: this.$el.find('select').val(),\n            value: this.$el.find('input.filter-value').val()\n        });\n    }\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextView);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.js","import FieldsCollection from './filter/fields-collection';\nimport FiltersCollection from './filter/filters-collection';\nimport FiltersView from './filter/filters-view';\n\nclass Filter {\n    constructor(selector = '.filter-form') {\n        if (!selector.length) {\n            selector = '.filter-form'\n        }\n\n        $(selector).each(\n            function (index, form) {\n                var prefix = $(form).data('prefix'),\n                    fields = new FieldsCollection(),\n                    collection,\n                    view;\n\n                fields.loadConfigFromGlobalVariable(prefix);\n\n                collection = new FiltersCollection();\n                collection.loadValuesFromGlobalVariable(prefix);\n\n                if (!collection.length) {\n                    collection.add({});\n                }\n\n                view = new FiltersView({\n                    fields: fields,\n                    collection: collection\n                });\n\n                $(form).find('fieldset').first().append(view.render().el);\n            }\n        );\n    }\n}\n\nexport default Filter;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter.js","//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/backbone/backbone.js\n// module id = 137\n// module chunks = 0 1 2","import Backbone from 'backbone';\nimport _ from 'underscore';\n\nvar BaseView = Backbone.View.extend({\n    tagName: 'span',\n\n    className: 'form-inline',\n\n    inputIndex: null,\n\n    options: null,\n\n    events: {\n        'change select': 'focusInput',\n        'blur input':    'updateValues',\n        'change input':  'updateValues'\n    },\n\n    initialize: function (attributes, options) {\n        this.inputIndex = attributes.inputIndex;\n\n        if ('undefined' !== typeof attributes.options) {\n            this.options = attributes.options;\n        }\n    },\n\n    render: function () {\n        this.$el.html(\n            this.template({\n                inputIndex: this.inputIndex,\n                values:     this.model.get('values'),\n                options:    this.options\n            })\n        );\n\n        if (this.model.get('isNew')) {\n            this.focusOnNextTick();\n        }\n\n        this.model.set('isNew', false);\n\n        this.postRender();\n\n        return this;\n    },\n\n    postRender: function () {\n\n    },\n\n    focusInput: function () {\n        var inputs = this.$el.find('input');\n\n        if (inputs.length) {\n            inputs.first().focus();\n        }\n\n        this.updateValues();\n    },\n\n    focusOnNextTick: function () {\n        setTimeout(\n            _.bind(\n                this.focusInput,\n                this\n            ),\n            1\n        );\n    }\n});\n\nexport default BaseView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/base-view.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 141\n// module chunks = 0 1 2","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n        <select class=\\\"form-control input-sm filter-field\\\" name=\\\"ftr-id.<%- index %>\\\">\\n            <option value=\\\"\\\" disabled=\\\"disabled\\\" selected=\\\"selected\\\">Select a field to filter by...</option>\\n            <% _.each(fields, function (field) { %>\\n\\n            <% if (selected === field.id) { %>\\n            <option selected=\\\"selected\\\" value=\\\"<%- field.id.replace('+', ' ') %>\\\"><%- field.label %></option>\\n            <% } else { %>\\n            <option value=\\\"<%- field.id %>\\\"><%- field.label %></option>\\n            <% } %>\\n\\n            <% }); %>\\n        </select>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"form-inline\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-right visible-xs\\\"></span>\\n            <span class=\\\"form-inline filter-control-wrapper\\\"></span>\\n            <div class=\\\"pull-right btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"js-add btn btn-add btn-default btn-sm\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></button>\\n                <button type=\\\"button\\\" class=\\\"js-remove btn btn-remove btn-default btn-sm\\\"><span class=\\\"glyphicon glyphicon-minus\\\"></span></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/filter-template.html","module.exports = \"<span class=\\\"text-muted\\\"> is </span>\\n\\n&nbsp;\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% if ('undefined' === typeof values.value || null === values.value || '' === values.value) { %>\\n    <option value=\\\"\\\" selected=\\\"selected\\\">Yes or No</option>\\n    <option value=\\\"0\\\">No</option>\\n    <option value=\\\"1\\\">Yes</option>\\n    <% } else if (1 === parseInt(values.value, 10)) { %>\\n    <option value=\\\"\\\">Yes or No</option>\\n    <option value=\\\"0\\\">No</option>\\n    <option value=\\\"1\\\" selected=\\\"selected\\\">Yes</option>\\n    <% } else { %>\\n    <option value=\\\"\\\">Yes or No</option>\\n    <option value=\\\"0\\\" selected=\\\"selected\\\">No</option>\\n    <option value=\\\"1\\\">Yes</option>\\n    <% } %>\\n</select>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/boolean-template.html","module.exports = \"<%\\nvar options = {\\n    'on-or-between': 'is on or between',\\n    'between':       'is between',\\n    'on-or-before':  'is on or before',\\n    'before':        'is before',\\n    'on-or-after':   'is on or after',\\n    'after':         'is after',\\n    'is':            'is'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if ('today' === key) { %>\\n    <option value=\\\"\\\" disabled=\\\"disabled\\\">&mdash;</option>\\n    <% } %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></options>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></options>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<span class=\\\"filter-date-inputs\\\">\\n    <input name=\\\"ftr-start.<%- inputIndex %>\\\" type=\\\"date\\\" class=\\\"filter-start form-control input-sm\\\" value=\\\"<%- values.start %>\\\" />\\n\\n    <span class=\\\"filter-date-end-wrapper\\\">\\n        <span class=\\\"text-muted\\\">&nbsp; and &nbsp;</span>\\n        <input name=\\\"ftr-end.<%- inputIndex %>\\\" type=\\\"date\\\" class=\\\"filter-end form-control input-sm\\\" value=\\\"<%- values.end %>\\\" />\\n    </span>\\n</span>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/date-template.html","module.exports = \"<%\\nvar operators = {\\n    \\\"contains\\\":     \\\"contains\\\",\\n    \\\"not-contains\\\": \\\"does not contain\\\",\\n    \\\"is-empty\\\":     \\\"is empty\\\",\\n    \\\"is-not-empty\\\": \\\"is not empty\\\"\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"filter-op form-control input-sm\\\">\\n    <% _.each(operators, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control filter-value filter-input input-sm\\\">\\n    <option value=\\\"\\\"></option>\\n\\n    <% _.each(options, function (option) { %>\\n\\n    <% if (parseInt(values.value, 10) === option.value) { %>\\n    <option value=\\\"<%- option.value %>\\\" selected=\\\"selected\\\"><%- option.title %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- option.value %>\\\"><%- option.title %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/manytomany-template.html","module.exports = \"<%\\nvar options = {\\n    'is-less-than': 'is less than',\\n    'is':           'is',\\n    'is-more-than': 'is more than',\\n    'is-between':   'is between'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<span class=\\\"filter-numeric-inputs\\\">\\n    <input class=\\\"filter-operand1 form-control input-sm\\\" name=\\\"ftr-operand1.<%- inputIndex %>\\\" step=\\\"any\\\" type=\\\"number\\\"\\n        value=\\\"<%- values.operand1 %>\\\" />\\n\\n    <span class=\\\"filter-numeric-operand2-wrapper\\\">\\n        <span class=\\\"text-muted\\\">&nbsp; and &nbsp;</span>\\n        <input class=\\\"filter-operand2 form-control input-sm\\\" name=\\\"ftr-operand2.<%- inputIndex %>\\\" step=\\\"any\\\"\\n            type=\\\"number\\\" value=\\\"<%- values.operand2 %>\\\" />\\n    </span>\\n</span>\\n\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/numeric-template.html","module.exports = \"<%\\nvar operators = {\\n    \\\"is\\\":        \\\"is\\\",\\n    \\\"is-not\\\":    \\\"is not\\\",\\n    \\\"empty\\\":     \\\"is empty\\\",\\n    \\\"not-empty\\\": \\\"is not empty\\\"\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control filter-op input-sm\\\">\\n    <% _.each(operators, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<select name=\\\"ftr-value.<%- inputIndex %>\\\" class=\\\"form-control filter-value filter-input input-sm\\\">\\n    <option value=\\\"\\\"></option>\\n\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (parseInt(values.value, 10) === option.value) { %>\\n    <option value=\\\"<%- option.value %>\\\" selected=\\\"selected\\\"><%- option.title %></option>\\n    <% } else { %>\\n    <option value=\\\"<%- option.value %>\\\"><%- option.title %></option>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/reference-template.html","module.exports = \"<%\\nvar options = {\\n    'contains':         'contains',\\n    'does-not-contain': 'does not contain',\\n    'starts-with':      'starts with',\\n    'ends-with':        'ends with'\\n};\\n%>\\n\\n<select name=\\\"ftr-comp.<%- inputIndex %>\\\" class=\\\"form-control input-sm\\\">\\n    <% _.each(options, function (option, key) { %>\\n\\n    <% if (values.comp === key) { %>\\n    <option value=\\\"<%- key %>\\\" selected=\\\"selected\\\"><%- option %></options>\\n    <% } else { %>\\n    <option value=\\\"<%- key %>\\\"><%- option %></options>\\n    <% } %>\\n\\n    <% }); %>\\n</select>\\n\\n<input name=\\\"ftr-value.<%- inputIndex %>\\\" type=\\\"text\\\" class=\\\"filter-value form-control input-sm\\\" value=\\\"<%- values.value %>\\\" />\\n\"\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/text-template.html","import Backbone from 'backbone';\nimport _ from 'underscore';\n\nvar Model = Backbone.Model.extend({\n    defaults: {\n        id:       '',\n        label:    '',\n        type:     '',\n        options:  {},\n        defaults: {}\n    }\n});\n\nvar FieldsCollection = Backbone.Collection.extend({\n    model: Model,\n\n    loadConfigFromGlobalVariable: function (prefix) {\n        var name = 'FILTER_FIELDS';\n\n        if (prefix) {\n            name = prefix + name;\n        }\n\n        if ('undefined' === typeof window[name]) {\n            throw 'Could not find initial config for filter form';\n        }\n\n        _.each(\n            window[name],\n            function (field) {\n                this.add(field);\n            },\n            this\n        );\n    }\n});\n\nexport default FieldsCollection;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/fields-collection.js","import Backbone from 'backbone';\nimport _ from 'underscore';\nimport typeFactory from './type/factory';\nimport templateHtml from './filter-template.html';\n\nvar customHtml = $('#filter-template').text(),\n    template   = _.template(customHtml ? customHtml : templateHtml);\n\nvar FilterView = Backbone.View.extend({\n    events: {\n        'change .filter-field': 'selectField',\n        'click .js-add':       'addFilter',\n        'click .js-remove':    'removeFilter'\n    },\n\n    className: 'filter-row',\n\n    fields: null,\n\n    selected: null,\n\n    initialize: function (attributes, options) {\n        this.fields   = attributes.fields;\n        this.selected = this.model.get('field');\n        this.index    = attributes.index;\n    },\n\n    render: function () {\n        this.$el.html(\n            template({\n                fields:   this.fields.toJSON(),\n                selected: this.selected,\n                index:    this.index\n            })\n        );\n\n        if (this.selected) {\n            var selectedField = this.fields.findWhere({id: this.selected}),\n                values        = this.model.get('values');\n\n            _.each(\n                selectedField.get('defaults'),\n                function (value, key) {\n                    if ('undefined' === typeof values[key]) {\n                        values[key] = value;\n                    }\n                }\n            );\n\n            this.model.set('values', values);\n\n            this.$el.find('.filter-control-wrapper').html(\n                typeFactory(\n                    selectedField.get('type'),\n                    selectedField.get('options'),\n                    this.model,\n                    this.index\n                ).render().el\n            );\n        }\n\n        if (1 === this.collection.length) {\n            this.$el.find('.btn-remove').attr('disabled', 'disabled');\n        }\n\n        return this;\n    },\n\n    selectField: function (e) {\n        this.selected = this.$el.find('.filter-field').val();\n        this.model.set('field', this.selected);\n        this.render();\n    },\n\n    addFilter: function (e) {\n        e.preventDefault();\n        this.collection.add({});\n    },\n\n    removeFilter: function (e) {\n        e.preventDefault();\n        this.model.destroy();\n    }\n});\n\nexport default FilterView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/filter-view.js","import Backbone from 'backbone';\nimport _ from 'underscore';\n\nvar Model = Backbone.Model.extend({\n    defaults: {\n        field:  '',\n        isNew:  true,\n        values: {}\n    }\n});\n\nvar FiltersCollection = Backbone.Collection.extend({\n    model: Model,\n\n    loadValuesFromGlobalVariable: function (prefix) {\n        var name = 'FILTER_VALUES';\n\n        if (prefix) {\n            name = prefix + name;\n        }\n\n        if ('undefined' === typeof window[name]) {\n            throw 'Could not find initial values for filter form';\n        }\n\n        _.each(\n            window[name],\n            function (values, index) {\n                var modelData = {\n                    field:  values.id,\n                    isNew:  false,\n                    values: values\n                };\n\n                this.add(modelData);\n            },\n            this\n        );\n    }\n});\n\nexport default FiltersCollection;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/filters-collection.js","import FilterView from './filter-view';\nimport Backbone from 'backbone';\n\nvar FiltersView = Backbone.View.extend({\n    fields: null,\n\n    initialize: function (attributes, options) {\n        this.fields = attributes.fields;\n\n        this.collection.on('add remove', this.render, this);\n    },\n\n    render: function () {\n        this.$el.empty();\n\n        this.collection.each(\n            function (filter, index) {\n                var view = new FilterView({\n                    collection: this.collection,\n                    fields:     this.fields,\n                    model:      filter,\n                    index:      index\n                });\n\n                this.$el.append(view.render().el);\n            },\n            this\n        );\n\n        return this;\n    }\n});\n\nexport default FiltersView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/filters-view.js","import BaseView from './base-view';\nimport templateHtml from './boolean-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar BooleanView = BaseView.extend({\n    template: template,\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                value: this.$el.find('select').val()\n            }\n        );\n    }\n});\n\nexport default BooleanView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/boolean-view.js","import BaseView from './base-view';\nimport templateHtml from './date-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar DateView = BaseView.extend({\n    template: template,\n\n    singleInputOperators: ['on-or-before', 'before', 'on-or-after', 'after', 'is'],\n\n    doubleInputOperators: ['between'],\n\n    noInputOperators: ['today', 'yesterday', 'this-week', 'this-month', 'this-year'],\n\n    events: {\n        'change select': 'handleOperatorSelection',\n        'blur input':    'updateValues',\n        'change input':  'updateValues'\n    },\n\n    postRender: function () {\n        this.handleOperatorSelection();\n    },\n\n    handleOperatorSelection: function () {\n        var selected = this.$el.find('select').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.singleInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-date-inputs').show();\n            this.$el.find('.filter-date-end-wrapper').hide();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-date-inputs').hide();\n        } else {\n            this.$el.find('.filter-date-inputs').show();\n            this.$el.find('.filter-date-end-wrapper').show();\n        }\n    },\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:  this.$el.find('select').val(),\n                start: this.$el.find('input.filter-start').val(),\n                end:   this.$el.find('input.filter-end').val()\n            }\n        );\n    }\n});\n\nexport default DateView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/date-view.js","import BooleanView from './boolean-view';\nimport DateView from './date-view';\nimport NumericView from './numeric-view';\nimport TextView from './text-view';\nimport ReferenceView from './reference-view';\nimport ManyToManyView from './manytomany-view';\n\nvar typeMap = {\n    boolean:    BooleanView,\n    date:       DateView,\n    numeric:    NumericView,\n    text:       TextView,\n    reference:  ReferenceView,\n    manytomany: ManyToManyView\n};\n\nvar Factory = function (type, options, model, index) {\n    if (!options) {\n        options = {};\n    }\n\n    options.inputIndex = index;\n    options.model      = model;\n\n    return new typeMap[type](options);\n};\n\nexport default Factory;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/factory.js","import BaseView from './base-view';\nimport templateHtml from './manytomany-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar ManyToManyView = BaseView.extend({\n    template: template,\n\n    inputOperators: ['contains', 'not-contains'],\n\n    noInputOperators: ['is-empty', 'is-not-empty'],\n\n    events: {\n        'change select': 'handleOperatorSelection'\n    },\n\n    postRender: function () {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:  this.$el.find('select').val(),\n                value: this.$el.find('select.filter-value').val()\n            }\n        );\n    },\n\n    handleOperatorSelection: function () {\n        var selected = this.$el.find('.filter-op').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.inputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').show();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').hide();\n        }\n    }\n});\n\nexport default ManyToManyView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/manytomany-view.js","import BaseView from './base-view';\nimport templateHtml from './numeric-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar NumericView = BaseView.extend({\n    template: template,\n\n    singleInputOperators: ['is-less-than', 'is', 'is-more-than'],\n\n    doubleInputOperators: ['is-between'],\n\n    events: {\n        'change select': 'handleOperatorSelection',\n        'blur input':    'updateValues',\n        'change input':  'updateValues'\n    },\n\n    handleOperatorSelection: function () {\n        var selected = this.$el.find('select').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.singleInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-numeric-inputs').show();\n            this.$el.find('.filter-numeric-operand2-wrapper').hide();\n        } else {\n            this.$el.find('.filter-numeric-inputs').show();\n            this.$el.find('.filter-numeric-operand2-wrapper').show();\n        }\n    },\n\n    postRender: function () {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:     this.$el.find('select').val(),\n                operand1: this.$el.find('input.filter-operand1').val(),\n                operand2: this.$el.find('input.filter-operand2').val()\n            }\n        );\n    }\n});\n\nexport default NumericView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/numeric-view.js","import BaseView from './base-view';\nimport templateHtml from './reference-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar ReferenceView = BaseView.extend({\n    template: template,\n\n    inputOperators: ['is', 'is-not'],\n\n    noInputOperators: ['empty', 'not-empty'],\n\n    events: {\n        'change select': 'handleOperatorSelection'\n    },\n\n    postRender: function () {\n        this.handleOperatorSelection();\n    },\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:  this.$el.find('select').val(),\n                value: this.$el.find('select.filter-value').val()\n            }\n        );\n    },\n\n    handleOperatorSelection: function () {\n        var selected = this.$el.find('.filter-op').val();\n\n        this.focusInput();\n        this.updateValues();\n\n        if (-1 !== this.inputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').show();\n        } else if (-1 !== this.noInputOperators.indexOf(selected)) {\n            this.$el.find('.filter-input').hide();\n        }\n    }\n});\n\nexport default ReferenceView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/reference-view.js","import BaseView from './base-view';\nimport templateHtml from './text-template.html';\nimport _ from 'underscore';\n\nvar template = _.template(templateHtml);\n\nvar TextView = BaseView.extend({\n    template: template,\n\n    updateValues: function () {\n        this.model.set(\n            'values',\n            {\n                comp:  this.$el.find('select').val(),\n                value: this.$el.find('input.filter-value').val()\n            }\n        );\n    }\n});\n\nexport default TextView;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/filter/type/text-view.js"],"sourceRoot":""}