{"version":3,"sources":["webpack:///8.js","webpack:///./www/src/js/listing-keyboard-shortcuts.js","webpack:///./~/keymaster/keymaster.js"],"names":["webpackJsonp","131","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_keymaster__","__WEBPACK_IMPORTED_MODULE_0_keymaster___default","n","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","ListingKeyboardShortcuts","scope","arguments","undefined","this","a","setScope","nextRow","previousRow","edit","view","add","filter","next","selected","$","removeClass","addClass","previous","prev","editLink","attr","window","location","href","viewLink","click","addLink","filterButton","focus","175","exports","global","index","array","item","compareArray","a1","a2","updateModifierKey","event","k","_mods","modifierMap","dispatch","handler","modifiersMatch","keyCode","_downKeys","push","_MODIFIERS","assignKey","call","_handlers","getScope","mods","method","preventDefault","returnValue","stopPropagation","cancelBubble","clearModifier","splice","resetModifiers","keys","getKeys","split","getMods","code","shortcut","unbindKey","multipleKeys","j","obj","isPressed","getPressedKeyCodes","slice","tagName","srcElement","_scope","deleteScope","handlers","replace","mi","addEvent","object","addEventListener","attachEvent","noConflict","previousKey","16","18","17","91","⇧","shift","⌥","alt","option","⌃","ctrl","control","⌘","command","_MAP","backspace","tab","clear","enter","return","esc","escape","space","left","up","right","down","del","delete","home","end","pageup","pagedown",",",".","/","`","-","=",";","'","[","]","\\","x","toUpperCase","charCodeAt","document","unbind"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YAMA,SAASC,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCALhHC,OAAOC,eAAeP,EAAqB,cAAgBQ,OAAO,GAC7C,IAAIC,GAA0CR,EAAoB,KAC9DS,EAAkDT,EAAoBU,EAAEF,GAC7FG,EAAe,WAAc,QAASC,kBAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMf,OAAOC,eAAeO,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUd,EAAamB,EAAYC,GAAiJ,MAA9HD,IAAYV,iBAAiBT,EAAYqB,UAAWF,GAAiBC,GAAaX,iBAAiBT,EAAaoB,GAAqBpB,MCP1hBsB,EDayB,WCZ3B,QAAAA,4BAA0D,GAA9CC,GAA8CC,UAAAX,OAAA,OAAAY,KAAAD,UAAA,GAAAA,UAAA,GAAtC,oCAAsC1B,iBAAA4B,KAAAJ,0BACjDC,EAAMV,SACPU,EAAQ,sCAGZjB,EAAAqB,EAAIC,SAASL,GACbjB,IAAI,IAAKiB,EAAOG,KAAKG,SACrBvB,IAAI,IAAKiB,EAAOG,KAAKI,aACrBxB,IAAI,IAAKiB,EAAOG,KAAKK,MACrBzB,IAAI,IAAKiB,EAAOG,KAAKM,MACrB1B,IAAI,IAAKiB,EAAOG,KAAKO,KACrB3B,IAAI,IAAKiB,EAAOG,KAAKQ,QDgGzB,MA5EA1B,GAAac,2BACTJ,IAAK,UACLd,MAAO,WClBP,GACI+B,GADAC,EAAWC,EAAE,8CAGZD,GAASvB,QAGVuB,EAASE,YAAY,sBAErBH,EAAOC,EAASD,SAGZA,EAAKI,SAAS,sBAPlBF,EAAE,mCAAmCE,SAAS,wBD+BlDrB,IAAK,cACLd,MAAO,WCnBP,GACIoC,GADAJ,EAAWC,EAAE,8CAGZD,IAAaA,EAASvB,QAGvBuB,EAASE,YAAY,sBAErBE,EAAWJ,EAASK,SAGhBD,EAASD,SAAS,sBAPtBF,EAAE,kCAAkCE,SAAS,wBDgCjDrB,IAAK,OACLd,MAAO,WCnBP,GAAIsC,GAAWL,EAAE,iFAEbK,IAAYA,EAASC,KAAK,UAC1BC,OAAOC,SAASC,KAAOJ,EAASC,KAAK,YDwBzCzB,IAAK,OACLd,MAAO,WCpBP,GAAI2C,GAAWV,EAAE,iFAEbU,IAAYA,EAASJ,KAAK,SAC1BI,EAASC,WDyBb9B,IAAK,MACLd,MAAO,WCrBP,GAAI6C,GAAUZ,EAAE,uCAEZY,IAAWA,EAAQN,KAAK,UACxBC,OAAOC,SAASC,KAAOG,EAAQN,KAAK,YD0BxCzB,IAAK,SACLd,MAAO,WCtBP,GAAI8C,GAAeb,EAAE,4CAEjBa,KACAA,EAAaF,QAEbX,EAAE,8BAA8Bc,aD4BjC7B,2BCvBX1B,GAAA,WD8BMwD,IACA,SAAUzD,EAAQ0D,EAASxD,IElHhC,SAAAyD,GAmCD,QAAAC,OAAAC,EAAAC,GAEA,IADA,GAAA7C,GAAA4C,EAAA3C,OACAD,KAAA,GAAA4C,EAAA5C,KAAA6C,EAAA,MAAA7C,EACA,UAIA,QAAA8C,cAAAC,EAAAC,GACA,GAAAD,EAAA9C,QAAA+C,EAAA/C,OAAA,QACA,QAAAD,GAAA,EAAmBA,EAAA+C,EAAA9C,OAAeD,IAClC,GAAA+C,EAAA/C,KAAAgD,EAAAhD,GAAA,QAEA,UASA,QAAAiD,mBAAAC,GACA,IAAAC,IAAAC,KAAAD,GAAAD,EAAAG,EAAAF,IAIA,QAAAG,UAAAJ,GACA,GAAA5C,GAAAiD,EAAAJ,EAAAnD,EAAAwD,EAAA7C,CASA,IARAL,EAAA4C,EAAAO,SAEA,GAAAd,MAAAe,EAAApD,IACAoD,EAAAC,KAAArD,GAIA,IAAAA,GAAA,KAAAA,MAAA,IACAA,IAAA8C,GAAA,CACAA,EAAA9C,IAAA,CAEA,KAAA6C,IAAAS,KAAAT,IAAA7C,IAAAuD,UAAAV,IAAA,OAOA,IAJAF,kBAAAC,GAIAW,UAAAvC,OAAAwC,KAAAhD,KAAAoC,IAGA5C,IAAAyD,GAKA,IAHApD,EAAAqD,WAGAhE,EAAA,EAAeA,EAAA+D,EAAAzD,GAAAL,OAA2BD,IAI1C,GAHAuD,EAAAQ,EAAAzD,GAAAN,GAGAuD,EAAA5C,UAAA,OAAA4C,EAAA5C,MAAA,CAEA6C,EAAAD,EAAAU,KAAAhE,OAAA,CACA,KAAAkD,IAAAC,KACAA,EAAAD,IAAAR,MAAAY,EAAAU,MAAAd,IAAA,GACAC,EAAAD,KAAA,GAAAR,MAAAY,EAAAU,MAAAd,MAAAK,GAAA,IAEA,GAAAD,EAAAU,KAAAhE,QAAAmD,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAI,IACA,IAAAD,EAAAW,OAAAhB,EAAAK,KACAL,EAAAiB,eAAAjB,EAAAiB,iBACAjB,EAAAkB,aAAA,EACAlB,EAAAmB,iBAAAnB,EAAAmB,kBACAnB,EAAAoB,eAAApB,EAAAoB,cAAA,KAQA,QAAAC,eAAArB,GACA,GAAAC,GAAA7C,EAAA4C,EAAAO,QACAzD,EAAA2C,MAAAe,EAAApD,EAQA,IALAN,GAAA,GACA0D,EAAAc,OAAAxE,EAAA,GAGA,IAAAM,GAAA,KAAAA,MAAA,IACAA,IAAA8C,GAAA,CACAA,EAAA9C,IAAA,CACA,KAAA6C,IAAAS,KAAAT,IAAA7C,IAAAuD,UAAAV,IAAA,IAIA,QAAAsB,kBACA,IAAAtB,IAAAC,KAAAD,IAAA,CACA,KAAAA,IAAAS,GAAAC,UAAAV,IAAA,EAIA,QAAAU,WAAAvD,EAAAK,EAAAuD,GACA,GAAAQ,GAAAT,CACAS,GAAAC,QAAArE,OACAO,KAAAqD,IACAA,EAAAvD,EACAA,EAAA,MAIA,QAAAX,GAAA,EAAmBA,EAAA0E,EAAAzE,OAAiBD,IAEpCiE,KACA3D,EAAAoE,EAAA1E,GAAA4E,MAAA,KACAtE,EAAAL,OAAA,IACAgE,EAAAY,QAAAvE,GACAA,OAAAL,OAAA,KAGAK,IAAA,GACAA,EAAAwE,EAAAxE,GAEAA,IAAAyD,OAAAzD,OACAyD,EAAAzD,GAAAqD,MAA2BoB,SAAAL,EAAA1E,GAAAW,QAAAuD,SAAA5D,IAAAoE,EAAA1E,GAAAiE,SAK3B,QAAAe,WAAA1E,EAAAK,GACA,GAAAsE,GAAAP,EAEA1E,EAAAkF,EAAAC,EADAlB,IAKA,KAFAgB,EAAAN,QAAArE,GAEA4E,EAAA,EAAeA,EAAAD,EAAAhF,OAAyBiF,IAAA,CAaxC,GAZAR,EAAAO,EAAAC,GAAAN,MAAA,KAEAF,EAAAzE,OAAA,IACAgE,EAAAY,QAAAH,GACApE,EAAAoE,IAAAzE,OAAA,IAGAK,EAAAwE,EAAAxE,OAEAO,KAAAF,IACAA,EAAAqD,aAEAD,EAAAzD,GACA,MAEA,KAAAN,EAAA,EAAiBA,EAAA+D,EAAAzD,GAAAL,OAA2BD,IAC5CmF,EAAApB,EAAAzD,GAAAN,GAEAmF,EAAAxE,WAAAmC,aAAAqC,EAAAlB,UACAF,EAAAzD,GAAAN,QAQA,QAAAoF,WAAA3B,GAIA,MAHA,qBACAA,EAAAqB,EAAArB,KAEA,GAAAd,MAAAe,EAAAD,GAGA,QAAA4B,sBACA,MAAA3B,GAAA4B,MAAA,GAGA,QAAAhE,QAAA4B,GACA,GAAAqC,IAAArC,EAAApD,QAAAoD,EAAAsC,YAAAD,OAEA,kBAAAA,GAAA,UAAAA,GAAA,YAAAA,GAOA,QAAAvE,UAAAL,GAA2B8E,EAAA9E,GAAA,MAC3B,QAAAqD,YAAsB,MAAAyB,IAAA,MAGtB,QAAAC,aAAA/E,GACA,GAAAL,GAAAqF,EAAA3F,CAEA,KAAAM,IAAAyD,GAEA,IADA4B,EAAA5B,EAAAzD,GACAN,EAAA,EAAiBA,EAAA2F,EAAA1F,QACjB0F,EAAA3F,GAAAW,UAAAgF,EAAAnB,OAAAxE,EAAA,GACAA,IAMA,QAAA2E,SAAArE,GACA,GAAAoE,EAMA,OALApE,KAAAsF,QAAA,UACAlB,EAAApE,EAAAsE,MAAA,KACA,IAAAF,IAAAzE,OAAA,KACAyE,IAAAzE,OAAA,SAEAyE,EAIA,QAAAG,SAAAvE,GAEA,OADA2D,GAAA3D,EAAAgF,MAAA,EAAAhF,EAAAL,OAAA,GACA4F,EAAA,EAAoBA,EAAA5B,EAAAhE,OAAkB4F,IACtC5B,EAAA4B,GAAAjC,EAAAK,EAAA4B,GACA,OAAA5B,GAIA,QAAA6B,UAAAC,EAAA7C,EAAAgB,GACA6B,EAAAC,iBACAD,EAAAC,iBAAA9C,EAAAgB,GAAA,GACA6B,EAAAE,aACAF,EAAAE,YAAA,KAAA/C,EAAA,WAAgDgB,EAAAlC,OAAAkB,SAchD,QAAAgD,cACA,GAAA/C,GAAAT,EAAApC,GAEA,OADAoC,GAAApC,IAAA6F,EACAhD,EAlRA,GAAAA,GACAY,KACAX,GAAagD,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,GACbd,EAAA,MAEA7B,GACA4C,IAAA,GAAAC,MAAA,GACAC,IAAA,GAAAC,IAAA,GAAAC,OAAA,GACAC,IAAA,GAAAC,KAAA,GAAAC,QAAA,GACAC,IAAA,GAAAC,QAAA,IAGAC,GACAC,UAAA,EAAAC,IAAA,EAAAC,MAAA,GACAC,MAAA,GAAAC,OAAA,GACAC,IAAA,GAAAC,OAAA,GAAAC,MAAA,GACAC,KAAA,GAAAC,GAAA,GACAC,MAAA,GAAAC,KAAA,GACAC,IAAA,GAAAC,OAAA,GACAC,KAAA,GAAAC,IAAA,GACAC,OAAA,GAAAC,SAAA,GACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAQ,IAAAC,IAAA,IACRC,IAAA,IAAAC,IAAA,IAAAC,KAAA,KAEAjE,EAAA,SAAAkE,GACA,MAAA9B,GAAA8B,MAAAC,cAAAC,WAAA,IAEAxF,IAEA,KAAAP,EAAA,EAAUA,EAAA,GAAKA,IAAA+D,EAAA,IAAA/D,GAAA,IAAAA,CAkBf,IAAAE,IACA+C,GAAA,WACAC,GAAA,SACAC,GAAA,UACAC,GAAA,UAiKA,KAAApD,IAAAS,GAAAC,UAAAV,IAAA,CA+CA2C,UAAAqD,SAAA,mBAAAjG,GAAiDI,SAAAJ,KACjD4C,SAAAqD,SAAA,QAAA5E,eAGAuB,SAAA9D,OAAA,QAAAyC,eAGA,IAAA0B,GAAAzD,EAAApC,GAUAoC,GAAApC,IAAAuD,UACAnB,EAAApC,IAAAU,kBACA0B,EAAApC,IAAA0D,kBACAtB,EAAApC,IAAAoF,wBACAhD,EAAApC,IAAAgB,cACAoB,EAAApC,IAAA8E,oBACA1C,EAAApC,IAAA+E,sCACA3C,EAAApC,IAAA4F,sBACAxD,EAAApC,IAAA8I,OAAApE,UAEAjG,EAAA0D,QAAAoB,WAEC/C","file":"8.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 131:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_keymaster__ = __webpack_require__(175);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_keymaster___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_keymaster__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar ListingKeyboardShortcuts = function () {\n    function ListingKeyboardShortcuts() {\n        var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'dewdrop-listing-keyboard-shortcuts';\n\n        _classCallCheck(this, ListingKeyboardShortcuts);\n\n        if (!scope.length) {\n            scope = 'dewdrop-listing-keyboard-shortcuts';\n        }\n\n        __WEBPACK_IMPORTED_MODULE_0_keymaster___default.a.setScope(scope);\n        __WEBPACK_IMPORTED_MODULE_0_keymaster___default()('j', scope, this.nextRow);\n        __WEBPACK_IMPORTED_MODULE_0_keymaster___default()('k', scope, this.previousRow);\n        __WEBPACK_IMPORTED_MODULE_0_keymaster___default()('e', scope, this.edit);\n        __WEBPACK_IMPORTED_MODULE_0_keymaster___default()('v', scope, this.view);\n        __WEBPACK_IMPORTED_MODULE_0_keymaster___default()('c', scope, this.add);\n        __WEBPACK_IMPORTED_MODULE_0_keymaster___default()('/', scope, this.filter);\n    }\n\n    _createClass(ListingKeyboardShortcuts, [{\n        key: 'nextRow',\n        value: function nextRow() {\n            var selected = $('.bootstrap-table tbody tr.keyboard-selected'),\n                next;\n\n            if (!selected.length) {\n                $('.bootstrap-table tbody tr:first').addClass('keyboard-selected');\n            } else {\n                selected.removeClass('keyboard-selected');\n\n                next = selected.next();\n\n                if (next) {\n                    next.addClass('keyboard-selected');\n                }\n            }\n        }\n    }, {\n        key: 'previousRow',\n        value: function previousRow() {\n            var selected = $('.bootstrap-table tbody tr.keyboard-selected'),\n                previous;\n\n            if (!selected || !selected.length) {\n                $('.bootstrap-table tbody tr:last').addClass('keyboard-selected');\n            } else {\n                selected.removeClass('keyboard-selected');\n\n                previous = selected.prev();\n\n                if (previous) {\n                    previous.addClass('keyboard-selected');\n                }\n            }\n        }\n    }, {\n        key: 'edit',\n        value: function edit() {\n            var editLink = $('.bootstrap-table tbody tr.keyboard-selected a[data-keyboard-role=\"edit\"]:first');\n\n            if (editLink && editLink.attr('href')) {\n                window.location.href = editLink.attr('href');\n            }\n        }\n    }, {\n        key: 'view',\n        value: function view() {\n            var viewLink = $('.bootstrap-table tbody tr.keyboard-selected a[data-keyboard-role=\"view\"]:first');\n\n            if (viewLink && viewLink.attr('href')) {\n                viewLink.click();\n            }\n        }\n    }, {\n        key: 'add',\n        value: function add() {\n            var addLink = $('a[data-keyboard-role=\"create\"]:first');\n\n            if (addLink && addLink.attr('href')) {\n                window.location.href = addLink.attr('href');\n            }\n        }\n    }, {\n        key: 'filter',\n        value: function filter() {\n            var filterButton = $('button[data-keyboard-role=\"filter\"]:first');\n\n            if (filterButton) {\n                filterButton.click();\n\n                $('.filter-form .filter-field').focus();\n            }\n        }\n    }]);\n\n    return ListingKeyboardShortcuts;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ListingKeyboardShortcuts);\n\n/***/ }),\n\n/***/ 175:\n/***/ (function(module, exports, __webpack_require__) {\n\n//     keymaster.js\n//     (c) 2011-2013 Thomas Fuchs\n//     keymaster.js may be freely distributed under the MIT license.\n\n;(function(global){\n  var k,\n    _handlers = {},\n    _mods = { 16: false, 18: false, 17: false, 91: false },\n    _scope = 'all',\n    // modifier keys\n    _MODIFIERS = {\n      '⇧': 16, shift: 16,\n      '⌥': 18, alt: 18, option: 18,\n      '⌃': 17, ctrl: 17, control: 17,\n      '⌘': 91, command: 91\n    },\n    // special keys\n    _MAP = {\n      backspace: 8, tab: 9, clear: 12,\n      enter: 13, 'return': 13,\n      esc: 27, escape: 27, space: 32,\n      left: 37, up: 38,\n      right: 39, down: 40,\n      del: 46, 'delete': 46,\n      home: 36, end: 35,\n      pageup: 33, pagedown: 34,\n      ',': 188, '.': 190, '/': 191,\n      '`': 192, '-': 189, '=': 187,\n      ';': 186, '\\'': 222,\n      '[': 219, ']': 221, '\\\\': 220\n    },\n    code = function(x){\n      return _MAP[x] || x.toUpperCase().charCodeAt(0);\n    },\n    _downKeys = [];\n\n  for(k=1;k<20;k++) _MAP['f'+k] = 111+k;\n\n  // IE doesn't support Array#indexOf, so have a simple replacement\n  function index(array, item){\n    var i = array.length;\n    while(i--) if(array[i]===item) return i;\n    return -1;\n  }\n\n  // for comparing mods before unassignment\n  function compareArray(a1, a2) {\n    if (a1.length != a2.length) return false;\n    for (var i = 0; i < a1.length; i++) {\n        if (a1[i] !== a2[i]) return false;\n    }\n    return true;\n  }\n\n  var modifierMap = {\n      16:'shiftKey',\n      18:'altKey',\n      17:'ctrlKey',\n      91:'metaKey'\n  };\n  function updateModifierKey(event) {\n      for(k in _mods) _mods[k] = event[modifierMap[k]];\n  };\n\n  // handle keydown event\n  function dispatch(event) {\n    var key, handler, k, i, modifiersMatch, scope;\n    key = event.keyCode;\n\n    if (index(_downKeys, key) == -1) {\n        _downKeys.push(key);\n    }\n\n    // if a modifier key, set the key.<modifierkeyname> property to true and return\n    if(key == 93 || key == 224) key = 91; // right command on webkit, command on Gecko\n    if(key in _mods) {\n      _mods[key] = true;\n      // 'assignKey' from inside this closure is exported to window.key\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = true;\n      return;\n    }\n    updateModifierKey(event);\n\n    // see if we need to ignore the keypress (filter() can can be overridden)\n    // by default ignore key presses if a select, textarea, or input is focused\n    if(!assignKey.filter.call(this, event)) return;\n\n    // abort if no potentially matching shortcuts found\n    if (!(key in _handlers)) return;\n\n    scope = getScope();\n\n    // for each potential shortcut\n    for (i = 0; i < _handlers[key].length; i++) {\n      handler = _handlers[key][i];\n\n      // see if it's in the current scope\n      if(handler.scope == scope || handler.scope == 'all'){\n        // check if modifiers match if any\n        modifiersMatch = handler.mods.length > 0;\n        for(k in _mods)\n          if((!_mods[k] && index(handler.mods, +k) > -1) ||\n            (_mods[k] && index(handler.mods, +k) == -1)) modifiersMatch = false;\n        // call the handler and stop the event if neccessary\n        if((handler.mods.length == 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91]) || modifiersMatch){\n          if(handler.method(event, handler)===false){\n            if(event.preventDefault) event.preventDefault();\n              else event.returnValue = false;\n            if(event.stopPropagation) event.stopPropagation();\n            if(event.cancelBubble) event.cancelBubble = true;\n          }\n        }\n      }\n    }\n  };\n\n  // unset modifier keys on keyup\n  function clearModifier(event){\n    var key = event.keyCode, k,\n        i = index(_downKeys, key);\n\n    // remove key from _downKeys\n    if (i >= 0) {\n        _downKeys.splice(i, 1);\n    }\n\n    if(key == 93 || key == 224) key = 91;\n    if(key in _mods) {\n      _mods[key] = false;\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = false;\n    }\n  };\n\n  function resetModifiers() {\n    for(k in _mods) _mods[k] = false;\n    for(k in _MODIFIERS) assignKey[k] = false;\n  };\n\n  // parse and assign shortcut\n  function assignKey(key, scope, method){\n    var keys, mods;\n    keys = getKeys(key);\n    if (method === undefined) {\n      method = scope;\n      scope = 'all';\n    }\n\n    // for each shortcut\n    for (var i = 0; i < keys.length; i++) {\n      // set modifier keys if any\n      mods = [];\n      key = keys[i].split('+');\n      if (key.length > 1){\n        mods = getMods(key);\n        key = [key[key.length-1]];\n      }\n      // convert to keycode and...\n      key = key[0]\n      key = code(key);\n      // ...store handler\n      if (!(key in _handlers)) _handlers[key] = [];\n      _handlers[key].push({ shortcut: keys[i], scope: scope, method: method, key: keys[i], mods: mods });\n    }\n  };\n\n  // unbind all handlers for given key in current scope\n  function unbindKey(key, scope) {\n    var multipleKeys, keys,\n      mods = [],\n      i, j, obj;\n\n    multipleKeys = getKeys(key);\n\n    for (j = 0; j < multipleKeys.length; j++) {\n      keys = multipleKeys[j].split('+');\n\n      if (keys.length > 1) {\n        mods = getMods(keys);\n        key = keys[keys.length - 1];\n      }\n\n      key = code(key);\n\n      if (scope === undefined) {\n        scope = getScope();\n      }\n      if (!_handlers[key]) {\n        return;\n      }\n      for (i = 0; i < _handlers[key].length; i++) {\n        obj = _handlers[key][i];\n        // only clear handlers if correct scope and mods match\n        if (obj.scope === scope && compareArray(obj.mods, mods)) {\n          _handlers[key][i] = {};\n        }\n      }\n    }\n  };\n\n  // Returns true if the key with code 'keyCode' is currently down\n  // Converts strings into key codes.\n  function isPressed(keyCode) {\n      if (typeof(keyCode)=='string') {\n        keyCode = code(keyCode);\n      }\n      return index(_downKeys, keyCode) != -1;\n  }\n\n  function getPressedKeyCodes() {\n      return _downKeys.slice(0);\n  }\n\n  function filter(event){\n    var tagName = (event.target || event.srcElement).tagName;\n    // ignore keypressed in any elements that support keyboard data input\n    return !(tagName == 'INPUT' || tagName == 'SELECT' || tagName == 'TEXTAREA');\n  }\n\n  // initialize key.<modifier> to false\n  for(k in _MODIFIERS) assignKey[k] = false;\n\n  // set current scope (default 'all')\n  function setScope(scope){ _scope = scope || 'all' };\n  function getScope(){ return _scope || 'all' };\n\n  // delete all handlers for a given scope\n  function deleteScope(scope){\n    var key, handlers, i;\n\n    for (key in _handlers) {\n      handlers = _handlers[key];\n      for (i = 0; i < handlers.length; ) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);\n        else i++;\n      }\n    }\n  };\n\n  // abstract key logic for assign and unassign\n  function getKeys(key) {\n    var keys;\n    key = key.replace(/\\s/g, '');\n    keys = key.split(',');\n    if ((keys[keys.length - 1]) == '') {\n      keys[keys.length - 2] += ',';\n    }\n    return keys;\n  }\n\n  // abstract mods logic for assign and unassign\n  function getMods(key) {\n    var mods = key.slice(0, key.length - 1);\n    for (var mi = 0; mi < mods.length; mi++)\n    mods[mi] = _MODIFIERS[mods[mi]];\n    return mods;\n  }\n\n  // cross-browser events\n  function addEvent(object, event, method) {\n    if (object.addEventListener)\n      object.addEventListener(event, method, false);\n    else if(object.attachEvent)\n      object.attachEvent('on'+event, function(){ method(window.event) });\n  };\n\n  // set the handlers globally on document\n  addEvent(document, 'keydown', function(event) { dispatch(event) }); // Passing _scope to a callback to ensure it remains the same by execution. Fixes #48\n  addEvent(document, 'keyup', clearModifier);\n\n  // reset modifiers to false whenever the window is (re)focused.\n  addEvent(window, 'focus', resetModifiers);\n\n  // store previously defined key\n  var previousKey = global.key;\n\n  // restore previously defined key and return reference to our key object\n  function noConflict() {\n    var k = global.key;\n    global.key = previousKey;\n    return k;\n  }\n\n  // set window.key and window.key.set/get/deleteScope, and the default filter\n  global.key = assignKey;\n  global.key.setScope = setScope;\n  global.key.getScope = getScope;\n  global.key.deleteScope = deleteScope;\n  global.key.filter = filter;\n  global.key.isPressed = isPressed;\n  global.key.getPressedKeyCodes = getPressedKeyCodes;\n  global.key.noConflict = noConflict;\n  global.key.unbind = unbindKey;\n\n  if(true) module.exports = assignKey;\n\n})(this);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 8.js","import key from 'keymaster';\n\nclass ListingKeyboardShortcuts {\n    constructor(scope = 'dewdrop-listing-keyboard-shortcuts') {\n        if (!scope.length) {\n            scope = 'dewdrop-listing-keyboard-shortcuts'\n        }\n\n        key.setScope(scope);\n        key('j', scope, this.nextRow);\n        key('k', scope, this.previousRow);\n        key('e', scope, this.edit);\n        key('v', scope, this.view);\n        key('c', scope, this.add);\n        key('/', scope, this.filter);\n    }\n\n    nextRow() {\n        var selected = $('.bootstrap-table tbody tr.keyboard-selected'),\n            next;\n\n        if (!selected.length) {\n            $('.bootstrap-table tbody tr:first').addClass('keyboard-selected');\n        } else {\n            selected.removeClass('keyboard-selected');\n\n            next = selected.next();\n\n            if (next) {\n                next.addClass('keyboard-selected');\n            }\n        }\n    }\n\n    previousRow() {\n        var selected = $('.bootstrap-table tbody tr.keyboard-selected'),\n            previous;\n\n        if (!selected || !selected.length) {\n            $('.bootstrap-table tbody tr:last').addClass('keyboard-selected');\n        } else {\n            selected.removeClass('keyboard-selected');\n\n            previous = selected.prev();\n\n            if (previous) {\n                previous.addClass('keyboard-selected');\n            }\n        }\n\n    }\n\n    edit() {\n        var editLink = $('.bootstrap-table tbody tr.keyboard-selected a[data-keyboard-role=\"edit\"]:first');\n\n        if (editLink && editLink.attr('href')) {\n            window.location.href = editLink.attr('href');\n        }\n    }\n\n    view() {\n        var viewLink = $('.bootstrap-table tbody tr.keyboard-selected a[data-keyboard-role=\"view\"]:first');\n\n        if (viewLink && viewLink.attr('href')) {\n            viewLink.click();\n        }\n    }\n\n    add() {\n        var addLink = $('a[data-keyboard-role=\"create\"]:first');\n\n        if (addLink && addLink.attr('href')) {\n            window.location.href = addLink.attr('href');\n        }\n    }\n\n    filter() {\n        var filterButton = $('button[data-keyboard-role=\"filter\"]:first');\n\n        if (filterButton) {\n            filterButton.click();\n\n            $('.filter-form .filter-field').focus();\n        }\n    }\n}\n\nexport default ListingKeyboardShortcuts;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/listing-keyboard-shortcuts.js","//     keymaster.js\n//     (c) 2011-2013 Thomas Fuchs\n//     keymaster.js may be freely distributed under the MIT license.\n\n;(function(global){\n  var k,\n    _handlers = {},\n    _mods = { 16: false, 18: false, 17: false, 91: false },\n    _scope = 'all',\n    // modifier keys\n    _MODIFIERS = {\n      '⇧': 16, shift: 16,\n      '⌥': 18, alt: 18, option: 18,\n      '⌃': 17, ctrl: 17, control: 17,\n      '⌘': 91, command: 91\n    },\n    // special keys\n    _MAP = {\n      backspace: 8, tab: 9, clear: 12,\n      enter: 13, 'return': 13,\n      esc: 27, escape: 27, space: 32,\n      left: 37, up: 38,\n      right: 39, down: 40,\n      del: 46, 'delete': 46,\n      home: 36, end: 35,\n      pageup: 33, pagedown: 34,\n      ',': 188, '.': 190, '/': 191,\n      '`': 192, '-': 189, '=': 187,\n      ';': 186, '\\'': 222,\n      '[': 219, ']': 221, '\\\\': 220\n    },\n    code = function(x){\n      return _MAP[x] || x.toUpperCase().charCodeAt(0);\n    },\n    _downKeys = [];\n\n  for(k=1;k<20;k++) _MAP['f'+k] = 111+k;\n\n  // IE doesn't support Array#indexOf, so have a simple replacement\n  function index(array, item){\n    var i = array.length;\n    while(i--) if(array[i]===item) return i;\n    return -1;\n  }\n\n  // for comparing mods before unassignment\n  function compareArray(a1, a2) {\n    if (a1.length != a2.length) return false;\n    for (var i = 0; i < a1.length; i++) {\n        if (a1[i] !== a2[i]) return false;\n    }\n    return true;\n  }\n\n  var modifierMap = {\n      16:'shiftKey',\n      18:'altKey',\n      17:'ctrlKey',\n      91:'metaKey'\n  };\n  function updateModifierKey(event) {\n      for(k in _mods) _mods[k] = event[modifierMap[k]];\n  };\n\n  // handle keydown event\n  function dispatch(event) {\n    var key, handler, k, i, modifiersMatch, scope;\n    key = event.keyCode;\n\n    if (index(_downKeys, key) == -1) {\n        _downKeys.push(key);\n    }\n\n    // if a modifier key, set the key.<modifierkeyname> property to true and return\n    if(key == 93 || key == 224) key = 91; // right command on webkit, command on Gecko\n    if(key in _mods) {\n      _mods[key] = true;\n      // 'assignKey' from inside this closure is exported to window.key\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = true;\n      return;\n    }\n    updateModifierKey(event);\n\n    // see if we need to ignore the keypress (filter() can can be overridden)\n    // by default ignore key presses if a select, textarea, or input is focused\n    if(!assignKey.filter.call(this, event)) return;\n\n    // abort if no potentially matching shortcuts found\n    if (!(key in _handlers)) return;\n\n    scope = getScope();\n\n    // for each potential shortcut\n    for (i = 0; i < _handlers[key].length; i++) {\n      handler = _handlers[key][i];\n\n      // see if it's in the current scope\n      if(handler.scope == scope || handler.scope == 'all'){\n        // check if modifiers match if any\n        modifiersMatch = handler.mods.length > 0;\n        for(k in _mods)\n          if((!_mods[k] && index(handler.mods, +k) > -1) ||\n            (_mods[k] && index(handler.mods, +k) == -1)) modifiersMatch = false;\n        // call the handler and stop the event if neccessary\n        if((handler.mods.length == 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91]) || modifiersMatch){\n          if(handler.method(event, handler)===false){\n            if(event.preventDefault) event.preventDefault();\n              else event.returnValue = false;\n            if(event.stopPropagation) event.stopPropagation();\n            if(event.cancelBubble) event.cancelBubble = true;\n          }\n        }\n      }\n    }\n  };\n\n  // unset modifier keys on keyup\n  function clearModifier(event){\n    var key = event.keyCode, k,\n        i = index(_downKeys, key);\n\n    // remove key from _downKeys\n    if (i >= 0) {\n        _downKeys.splice(i, 1);\n    }\n\n    if(key == 93 || key == 224) key = 91;\n    if(key in _mods) {\n      _mods[key] = false;\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = false;\n    }\n  };\n\n  function resetModifiers() {\n    for(k in _mods) _mods[k] = false;\n    for(k in _MODIFIERS) assignKey[k] = false;\n  };\n\n  // parse and assign shortcut\n  function assignKey(key, scope, method){\n    var keys, mods;\n    keys = getKeys(key);\n    if (method === undefined) {\n      method = scope;\n      scope = 'all';\n    }\n\n    // for each shortcut\n    for (var i = 0; i < keys.length; i++) {\n      // set modifier keys if any\n      mods = [];\n      key = keys[i].split('+');\n      if (key.length > 1){\n        mods = getMods(key);\n        key = [key[key.length-1]];\n      }\n      // convert to keycode and...\n      key = key[0]\n      key = code(key);\n      // ...store handler\n      if (!(key in _handlers)) _handlers[key] = [];\n      _handlers[key].push({ shortcut: keys[i], scope: scope, method: method, key: keys[i], mods: mods });\n    }\n  };\n\n  // unbind all handlers for given key in current scope\n  function unbindKey(key, scope) {\n    var multipleKeys, keys,\n      mods = [],\n      i, j, obj;\n\n    multipleKeys = getKeys(key);\n\n    for (j = 0; j < multipleKeys.length; j++) {\n      keys = multipleKeys[j].split('+');\n\n      if (keys.length > 1) {\n        mods = getMods(keys);\n        key = keys[keys.length - 1];\n      }\n\n      key = code(key);\n\n      if (scope === undefined) {\n        scope = getScope();\n      }\n      if (!_handlers[key]) {\n        return;\n      }\n      for (i = 0; i < _handlers[key].length; i++) {\n        obj = _handlers[key][i];\n        // only clear handlers if correct scope and mods match\n        if (obj.scope === scope && compareArray(obj.mods, mods)) {\n          _handlers[key][i] = {};\n        }\n      }\n    }\n  };\n\n  // Returns true if the key with code 'keyCode' is currently down\n  // Converts strings into key codes.\n  function isPressed(keyCode) {\n      if (typeof(keyCode)=='string') {\n        keyCode = code(keyCode);\n      }\n      return index(_downKeys, keyCode) != -1;\n  }\n\n  function getPressedKeyCodes() {\n      return _downKeys.slice(0);\n  }\n\n  function filter(event){\n    var tagName = (event.target || event.srcElement).tagName;\n    // ignore keypressed in any elements that support keyboard data input\n    return !(tagName == 'INPUT' || tagName == 'SELECT' || tagName == 'TEXTAREA');\n  }\n\n  // initialize key.<modifier> to false\n  for(k in _MODIFIERS) assignKey[k] = false;\n\n  // set current scope (default 'all')\n  function setScope(scope){ _scope = scope || 'all' };\n  function getScope(){ return _scope || 'all' };\n\n  // delete all handlers for a given scope\n  function deleteScope(scope){\n    var key, handlers, i;\n\n    for (key in _handlers) {\n      handlers = _handlers[key];\n      for (i = 0; i < handlers.length; ) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);\n        else i++;\n      }\n    }\n  };\n\n  // abstract key logic for assign and unassign\n  function getKeys(key) {\n    var keys;\n    key = key.replace(/\\s/g, '');\n    keys = key.split(',');\n    if ((keys[keys.length - 1]) == '') {\n      keys[keys.length - 2] += ',';\n    }\n    return keys;\n  }\n\n  // abstract mods logic for assign and unassign\n  function getMods(key) {\n    var mods = key.slice(0, key.length - 1);\n    for (var mi = 0; mi < mods.length; mi++)\n    mods[mi] = _MODIFIERS[mods[mi]];\n    return mods;\n  }\n\n  // cross-browser events\n  function addEvent(object, event, method) {\n    if (object.addEventListener)\n      object.addEventListener(event, method, false);\n    else if(object.attachEvent)\n      object.attachEvent('on'+event, function(){ method(window.event) });\n  };\n\n  // set the handlers globally on document\n  addEvent(document, 'keydown', function(event) { dispatch(event) }); // Passing _scope to a callback to ensure it remains the same by execution. Fixes #48\n  addEvent(document, 'keyup', clearModifier);\n\n  // reset modifiers to false whenever the window is (re)focused.\n  addEvent(window, 'focus', resetModifiers);\n\n  // store previously defined key\n  var previousKey = global.key;\n\n  // restore previously defined key and return reference to our key object\n  function noConflict() {\n    var k = global.key;\n    global.key = previousKey;\n    return k;\n  }\n\n  // set window.key and window.key.set/get/deleteScope, and the default filter\n  global.key = assignKey;\n  global.key.setScope = setScope;\n  global.key.getScope = getScope;\n  global.key.deleteScope = deleteScope;\n  global.key.filter = filter;\n  global.key.isPressed = isPressed;\n  global.key.getPressedKeyCodes = getPressedKeyCodes;\n  global.key.noConflict = noConflict;\n  global.key.unbind = unbindKey;\n\n  if(typeof module !== 'undefined') module.exports = assignKey;\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/keymaster/keymaster.js\n// module id = 175\n// module chunks = 8"],"sourceRoot":""}