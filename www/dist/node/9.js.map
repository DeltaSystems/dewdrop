{"version":3,"sources":["webpack:///./www/src/js/datetime-picker.js","webpack:///./~/jquery-timepicker/jquery.timepicker.js"],"names":["DatetimePicker","styleWrapper","$","document","body","append","renderInputs","$input","dateValue","timeValue","$row","$left","$right","$date","$time","val","data","attr","parent","on","each","index","input","value","split","date","time","Modernizr","touch","inputtypes","timepicker","change","trigger","content","yearRange","inputName","popover","container","placement","html","indexOf","$popover","e","preventDefault","options","changeMonth","changeYear","defaultDate","toDate","onSelect","selected","datepicker","format"],"mappings":"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AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA,0CAA0C;;AAE1C;;AAEA;AACA;AACA;;AAEA,oDAAoD,8CAA8C;AAClG;;AAEA;AACA;AACA,sCAAsC,wBAAwB;AAC9D,0CAA0C,4BAA4B;AACtE,uCAAuC,0BAA0B;AACjE,sCAAsC,yBAAyB;AAC/D,0CAA0C,6BAA6B;AACvE,sCAAsC,yBAAyB;AAC/D,uCAAuC,0BAA0B;AACjE,wCAAwC,2BAA2B;AACnE,yCAAyC,4BAA4B;;AAErE,0CAA0C,+BAA+B;AACzE,oDAAoD,uCAAuC,EAAE;AAC7F,yCAAyC,4BAA4B;AACrE,qDAAqD,wCAAwC,EAAE;AAC/F,mDAAmD,sCAAsC;AACzF,iBAAiB;;AAEjB;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,kBAAkB;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA,gCAAgC,yBAAyB;AACzD,sCAAsC,yBAAyB;AAC/D,8BAA8B,yBAAyB;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,UAAU;AAC3C,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B,2BAA2B,GAAG,MAAM,GAAG;AACvC;AACA;AACA,2BAA2B,IAAI;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA,qEAAqE,aAAa;;AAElF;AACA;AACA;AACA;;AAEA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL","file":"9.js","sourcesContent":["import tp from 'jquery-timepicker/jquery.timepicker';\nimport moment from 'moment';\n\nclass DatetimePicker {\n    constructor() {\n        // Used to append popovers.  Avoids WP and Bootstrap CSS conflicts.\n        var styleWrapper = $('<div class=\"bootstrap-wrapper\"></div>');\n\n        $(document.body).append(styleWrapper);\n\n        var renderInputs = function ($input, dateValue, timeValue) {\n            var $row   = $('<div class=\"row\"></div>'),\n                $left  = $('<div class=\"col-xs-6\"></div>'),\n                $right = $('<div class=\"col-xs-6\"></div>'),\n                $date  = $('<input type=\"text\" class=\"date-input form-control\" />'),\n                $time  = $('<input type=\"text\" class=\"time-input form-control\" />');\n\n            $row.append($left);\n            $row.append($right);\n\n            $left.append($date);\n            $right.append($time);\n\n            $date.val(dateValue);\n            $time.val(timeValue);\n\n            $date.data('input', $input.attr('name'));\n            $time.data('input', $input.attr('name'));\n\n            $input.parent().append($row);\n\n            $date.on(\n                'change',\n                function () {\n                    $input.val($date.val() + ' ' + $time.val())\n                }\n            );\n\n            $time.on(\n                'change',\n                function () {\n                    $input.val($date.val() + ' ' + $time.val())\n                }\n            );\n        };\n\n        $('.input-timestamp').each(\n            function (index, input) {\n                var $input = $(input),\n                    value  = $input.val().split(' '),\n                    date   = value[0],\n                    time   = value[1];\n\n                $input.attr('type', 'hidden');\n\n                renderInputs($input, date, time);\n            }\n        );\n\n        if (Modernizr.touch && Modernizr.inputtypes.date) {\n            $('.date-input').attr('type', 'date');\n            $('.time-input').attr('type', 'time');\n        } else {\n            $('.time-input').timepicker({\n                change: function () {\n                    $(this).trigger('change');\n                }\n            });\n\n            $('.date-input').each(\n                function (index, input) {\n                    var $input = $(input),\n                        content,\n                        yearRange,\n                        inputName = $input.attr('name');\n\n                    content  = '<div class=\"date-input-popover\" data-input=\"' + $input.data('input') + '\">';\n                    content += '<a href=\"#\" class=\"btn btn-link btn-close\">';\n                    content += '<span class=\"glyphicon glyphicon-remove text-muted\"></span>';\n                    content += '</a>';\n                    content += '<div class=\"date-wrapper\"></div>';\n                    content += '</div>';\n\n                    $input.popover({\n                        container: styleWrapper,\n                        placement: 'bottom',\n                        trigger:   'manual',\n                        content:   content,\n                        html:      true\n                    });\n\n                    if (inputName && inputName.indexOf('birthdate') > -1) {\n                        yearRange = '-100:+0';\n                    } else {\n                        yearRange = '-100:+100';\n                    }\n\n                    $input.on(\n                        'focus',\n                        function () {\n                            var $popover;\n\n                            $input.popover('show');\n                            $popover = $('[data-input=\"' + $input.data('input') + '\"] .date-wrapper');\n\n                            $('[data-input=\"' + $input.data('input') + '\"] a').on(\n                                'click',\n                                function (e) {\n                                    e.preventDefault();\n                                    $input.popover('hide');\n                                }\n                            );\n\n                            var options = {\n                                changeMonth: true,\n                                changeYear:  true,\n                                yearRange:   yearRange,\n                                defaultDate: moment($input.val(), 'MM/DD/YYYY').toDate(),\n                                onSelect: function (e) {\n                                    var selected = $popover.datepicker('getDate');\n\n                                    if (selected) {\n                                        $input.val(moment(selected).format('MM/DD/YYYY'));\n                                    } else {\n                                        $input.val('');\n                                    }\n\n                                    $input.trigger('change');\n                                    $input.popover('hide');\n                                }\n                            };\n\n                            $popover.datepicker(options);\n                        }\n                    );\n\n                    $('input, textarea, select').on(\n                        'focus',\n                        function () {\n                            if (this !== $input[0]) {\n                                $input.popover('hide');\n                            }\n                        }\n                    );\n                }\n            );\n        }\n    }\n}\n\nexport default DatetimePicker;\n\n\n\n// WEBPACK FOOTER //\n// ./www/src/js/datetime-picker.js","/**\n * jQuery Timepicker\n * http://timepicker.co\n *\n * Enhances standard form input fields helping users to select (or type) times.\n *\n * Copyright (c) 2016 Willington Vega; Licensed MIT, GPL\n */\n\nif (typeof jQuery !== 'undefined') {\n    (function($, undefined) {\n\n        function pad(str, ch, length) {\n            return (new Array(length + 1 - str.length).join(ch)) + str;\n        }\n\n        function normalize() {\n            if (arguments.length === 1) {\n                var date = arguments[0];\n                if (typeof date === 'string') {\n                    date = $.fn.timepicker.parseTime(date);\n                }\n                return new Date(0, 0, 0, date.getHours(), date.getMinutes(), date.getSeconds());\n            } else if (arguments.length === 3) {\n                return new Date(0, 0, 0, arguments[0], arguments[1], arguments[2]);\n            } else if (arguments.length === 2) {\n                return new Date(0, 0, 0, arguments[0], arguments[1], 0);\n            } else {\n                return new Date(0, 0, 0);\n            }\n        }\n\n        $.TimePicker = function() {\n            var widget = this;\n\n            widget.container = $('.ui-timepicker-container');\n            widget.ui = widget.container.find('.ui-timepicker');\n\n            if (widget.container.length === 0) {\n                widget.container = $('<div></div>').addClass('ui-timepicker-container')\n                                    .addClass('ui-timepicker-hidden ui-helper-hidden')\n                                    .appendTo('body')\n                                    .hide();\n                widget.ui = $( '<div></div>' ).addClass('ui-timepicker')\n                                    .addClass('ui-widget ui-widget-content ui-menu')\n                                    .addClass('ui-corner-all')\n                                    .appendTo(widget.container);\n                widget.viewport = $('<ul></ul>').addClass( 'ui-timepicker-viewport' )\n                                    .appendTo( widget.ui );\n\n                if ($.fn.jquery >= '1.4.2') {\n                    widget.ui.delegate('a', 'mouseenter.timepicker', function() {\n                        // passing false instead of an instance object tells the function\n                        // to use the current instance\n                        widget.activate(false, $(this).parent());\n                    }).delegate('a', 'mouseleave.timepicker', function() {\n                        widget.deactivate(false);\n                    }).delegate('a', 'click.timepicker', function(event) {\n                        event.preventDefault();\n                        widget.select(false, $(this).parent());\n                    });\n                }\n            }\n        };\n\n        $.TimePicker.count = 0;\n        $.TimePicker.instance = function() {\n            if (!$.TimePicker._instance) {\n                $.TimePicker._instance = new $.TimePicker();\n            }\n            return $.TimePicker._instance;\n        };\n\n        $.TimePicker.prototype = {\n            // extracted from from jQuery UI Core\n            // http://github,com/jquery/jquery-ui/blob/master/ui/jquery.ui.core.js\n            keyCode: {\n                ALT: 18,\n                BLOQ_MAYUS: 20,\n                CTRL: 17,\n                DOWN: 40,\n                END: 35,\n                ENTER: 13,\n                HOME: 36,\n                LEFT: 37,\n                NUMPAD_ENTER: 108,\n                PAGE_DOWN: 34,\n                PAGE_UP: 33,\n                RIGHT: 39,\n                SHIFT: 16,\n                TAB: 9,\n                UP: 38\n            },\n\n            _items: function(i, startTime) {\n                var widget = this, ul = $('<ul></ul>'), item = null, time, end;\n\n                // interval should be a multiple of 60 if timeFormat is not\n                // showing minutes\n                if (i.options.timeFormat.indexOf('m') === -1 && i.options.interval % 60 !== 0) {\n                    i.options.interval = Math.max(Math.round(i.options.interval / 60), 1) * 60;\n                }\n\n                if (startTime) {\n                    time = normalize(startTime);\n                } else if (i.options.startTime) {\n                    time = normalize(i.options.startTime);\n                } else {\n                    time = normalize(i.options.startHour, i.options.startMinutes);\n                }\n\n                end = new Date(time.getTime() + 24 * 60 * 60 * 1000);\n\n                while(time < end) {\n                    if (widget._isValidTime(i, time)) {\n                        item = $('<li>').addClass('ui-menu-item').appendTo(ul);\n                        $('<a>').addClass('ui-corner-all').text($.fn.timepicker.formatTime(i.options.timeFormat, time)).appendTo(item);\n                        item.data('time-value', time);\n                    }\n                    time = new Date(time.getTime() + i.options.interval * 60 * 1000);\n                }\n\n                return ul.children();\n            },\n\n            _isValidTime: function(i, time) {\n                var min = null, max = null;\n\n                time = normalize(time);\n\n                if (i.options.minTime !== null) {\n                    min = normalize(i.options.minTime);\n                } else if (i.options.minHour !== null || i.options.minMinutes !== null) {\n                    min = normalize(i.options.minHour, i.options.minMinutes);\n                }\n\n                if (i.options.maxTime !== null) {\n                    max = normalize(i.options.maxTime);\n                } else if (i.options.maxHour !== null || i.options.maxMinutes !== null) {\n                    max = normalize(i.options.maxHour, i.options.maxMinutes);\n                }\n\n                if (min !== null && max !== null) {\n                    return time >= min && time <= max;\n                } else if (min !== null) {\n                    return time >= min;\n                } else if (max !== null) {\n                    return time <= max;\n                }\n\n                return true;\n            },\n\n            _hasScroll: function() {\n                // fix for jQuery 1.6 new prop method\n                var m = typeof this.ui.prop !== 'undefined' ? 'prop' : 'attr';\n                return this.ui.height() < this.ui[m]('scrollHeight');\n            },\n\n            /**\n             * TODO: Write me!\n             *\n             * @param i\n             * @param direction\n             * @param edge\n             * */\n            _move: function(i, direction, edge) {\n                var widget = this;\n                if (widget.closed()) {\n                    widget.open(i);\n                }\n                if (!widget.active) {\n                    widget.activate( i, widget.viewport.children( edge ) );\n                    return;\n                }\n                var next = widget.active[direction + 'All']('.ui-menu-item').eq(0);\n                if (next.length) {\n                    widget.activate(i, next);\n                } else {\n                    widget.activate( i, widget.viewport.children( edge ) );\n                }\n            },\n\n            //\n            // protected methods\n            //\n\n            register: function(node, options) {\n                var widget = this, i = {}; // timepicker instance object\n\n                i.element = $(node);\n\n                if (i.element.data('TimePicker')) {\n                    return;\n                }\n\n                i.options = $.metadata ? $.extend({}, options, i.element.metadata()) : $.extend({}, options);\n                i.widget = widget;\n\n                // proxy functions for the exposed api methods\n                $.extend(i, {\n                    next: function() {return widget.next(i) ;},\n                    previous: function() {return widget.previous(i) ;},\n                    first: function() { return widget.first(i) ;},\n                    last: function() { return widget.last(i) ;},\n                    selected: function() { return widget.selected(i) ;},\n                    open: function() { return widget.open(i) ;},\n                    close: function() { return widget.close(i) ;},\n                    closed: function() { return widget.closed(i) ;},\n                    destroy: function() { return widget.destroy(i) ;},\n\n                    parse: function(str) { return widget.parse(i, str) ;},\n                    format: function(time, format) { return widget.format(i, time, format); },\n                    getTime: function() { return widget.getTime(i) ;},\n                    setTime: function(time, silent) { return widget.setTime(i, time, silent); },\n                    option: function(name, value) { return widget.option(i, name, value); }\n                });\n\n                widget._setDefaultTime(i);\n                widget._addInputEventsHandlers(i);\n\n                i.element.data('TimePicker', i);\n            },\n\n            _setDefaultTime: function(i) {\n                if (i.options.defaultTime === 'now') {\n                    i.setTime(normalize(new Date()));\n                } else if (i.options.defaultTime && i.options.defaultTime.getFullYear) {\n                    i.setTime(normalize(i.options.defaultTime));\n                } else if (i.options.defaultTime) {\n                    i.setTime($.fn.timepicker.parseTime(i.options.defaultTime));\n                }\n            },\n\n            _addInputEventsHandlers: function(i) {\n                var widget = this;\n\n                i.element.bind('keydown.timepicker', function(event) {\n                    switch (event.which || event.keyCode) {\n                    case widget.keyCode.ENTER:\n                    case widget.keyCode.NUMPAD_ENTER:\n                        event.preventDefault();\n                        if (widget.closed()) {\n                            i.element.trigger('change.timepicker');\n                        } else {\n                            widget.select(i, widget.active);\n                        }\n                        break;\n                    case widget.keyCode.UP:\n                        i.previous();\n                        break;\n                    case widget.keyCode.DOWN:\n                        i.next();\n                        break;\n                    default:\n                        if (!widget.closed()) {\n                            i.close(true);\n                        }\n                        break;\n                    }\n                }).bind('focus.timepicker', function() {\n                    i.open();\n                }).bind('blur.timepicker', function() {\n                    setTimeout(function() {\n                        if (i.element.data('timepicker-user-clicked-outside')) {\n                            i.close();\n                        }\n                    });\n                }).bind('change.timepicker', function() {\n                    if (i.closed()) {\n                        i.setTime($.fn.timepicker.parseTime(i.element.val()));\n                    }\n                });\n            },\n\n            select: function(i, item) {\n                var widget = this, instance = i === false ? widget.instance : i;\n                widget.setTime(instance, $.fn.timepicker.parseTime(item.children('a').text()));\n                widget.close(instance, true);\n            },\n\n            activate: function(i, item) {\n                var widget = this, instance = i === false ? widget.instance : i;\n\n                if (instance !== widget.instance) {\n                    return;\n                } else {\n                    widget.deactivate();\n                }\n\n                if (widget._hasScroll()) {\n                    var offset = item.offset().top - widget.ui.offset().top,\n                        scroll = widget.ui.scrollTop(),\n                        height = widget.ui.height();\n                    if (offset < 0) {\n                        widget.ui.scrollTop(scroll + offset);\n                    } else if (offset >= height) {\n                        widget.ui.scrollTop(scroll + offset - height + item.height());\n                    }\n                }\n\n                widget.active = item.eq(0).children('a').addClass('ui-state-hover')\n                                                        .attr('id', 'ui-active-item')\n                                          .end();\n            },\n\n            deactivate: function() {\n                var widget = this;\n                if (!widget.active) { return; }\n                widget.active.children('a').removeClass('ui-state-hover').removeAttr('id');\n                widget.active = null;\n            },\n\n            /**\n             * _activate, _deactivate, first, last, next, previous, _move and\n             * _hasScroll were extracted from jQuery UI Menu\n             * http://github,com/jquery/jquery-ui/blob/menu/ui/jquery.ui.menu.js\n             */\n\n            //\n            // public methods\n            //\n\n            next: function(i) {\n                if (this.closed() || this.instance === i) {\n                    this._move(i, 'next', '.ui-menu-item:first');\n                }\n                return i.element;\n            },\n\n            previous: function(i) {\n                if (this.closed() || this.instance === i) {\n                    this._move(i, 'prev', '.ui-menu-item:last');\n                }\n                return i.element;\n            },\n\n            first: function(i) {\n                if (this.instance === i) {\n                    return this.active && this.active.prevAll('.ui-menu-item').length === 0;\n                }\n                return false;\n            },\n\n            last: function(i) {\n                if (this.instance === i) {\n                    return this.active && this.active.nextAll('.ui-menu-item').length === 0;\n                }\n                return false;\n            },\n\n            selected: function(i) {\n                if (this.instance === i)  {\n                    return this.active ? this.active : null;\n                }\n                return null;\n            },\n\n            open: function(i) {\n                var widget = this,\n                    selectedTime = i.getTime(),\n                    arrange = i.options.dynamic && selectedTime;\n\n                // return if dropdown is disabled\n                if (!i.options.dropdown) { return i.element; }\n\n                // fix for issue https://github.com/wvega/timepicker/issues/56\n                // idea from https://prototype.lighthouseapp.com/projects/8887/tickets/248-results-popup-from-ajaxautocompleter-disappear-when-user-clicks-on-scrollbars-in-ie6ie7\n                i.element.data('timepicker-event-namespace', Math.random());\n\n                $(document).bind('click.timepicker-' + i.element.data('timepicker-event-namespace'), function(event) {\n                    if (i.element.get(0) === event.target) {\n                        i.element.data('timepicker-user-clicked-outside', false);\n                    } else {\n                        i.element.data('timepicker-user-clicked-outside', true).blur();\n                    }\n                });\n\n                // if a date is already selected and options.dynamic is true,\n                // arrange the items in the list so the first item is\n                // cronologically right after the selected date.\n                // TODO: set selectedTime\n                if (i.rebuild || !i.items || arrange) {\n                    i.items = widget._items(i, arrange ? selectedTime : null);\n                }\n\n                // remove old li elements keeping associated events, then append\n                // the new li elements to the ul\n                if (i.rebuild || widget.instance !== i || arrange) {\n                    // handle menu events when using jQuery versions previous to\n                    // 1.4.2 (thanks to Brian Link)\n                    // http://github.com/wvega/timepicker/issues#issue/4\n                    if ($.fn.jquery < '1.4.2') {\n                        widget.viewport.children().remove();\n                        widget.viewport.append(i.items);\n                        widget.viewport.find('a').bind('mouseover.timepicker', function() {\n                            widget.activate(i, $(this).parent());\n                        }).bind('mouseout.timepicker', function() {\n                            widget.deactivate(i);\n                        }).bind('click.timepicker', function(event) {\n                            event.preventDefault();\n                            widget.select(i, $(this).parent());\n                        });\n                    } else {\n                        widget.viewport.children().detach();\n                        widget.viewport.append(i.items);\n                    }\n                }\n\n                i.rebuild = false;\n\n                // theme\n                widget.container.removeClass('ui-helper-hidden ui-timepicker-hidden ui-timepicker-standard ui-timepicker-corners').show();\n\n                switch (i.options.theme) {\n                case 'standard':\n                    widget.container.addClass('ui-timepicker-standard');\n                    break;\n                case 'standard-rounded-corners':\n                    widget.container.addClass('ui-timepicker-standard ui-timepicker-corners');\n                    break;\n                default:\n                    break;\n                }\n\n                /* resize ui */\n\n                // we are hiding the scrollbar in the dropdown menu adding a 40px\n                // padding to the wrapper element making the scrollbar appear in the\n                // part of the wrapper that's hidden by the container (a DIV).\n                if ( ! widget.container.hasClass( 'ui-timepicker-no-scrollbar' ) && ! i.options.scrollbar ) {\n                    widget.container.addClass( 'ui-timepicker-no-scrollbar' );\n                    widget.viewport.css( { paddingRight: 40 } );\n                }\n\n                var containerDecorationHeight = widget.container.outerHeight() - widget.container.height(),\n                    zindex = i.options.zindex ? i.options.zindex : i.element.offsetParent().css( 'z-index' ),\n                    elementOffset = i.element.offset();\n\n                // position the container right below the element, or as close to as possible.\n                widget.container.css( {\n                    top: elementOffset.top + i.element.outerHeight(),\n                    left: elementOffset.left\n                } );\n\n                // then show the container so that the browser can consider the timepicker's\n                // height to calculate the page's total height and decide if adding scrollbars\n                // is necessary.\n                widget.container.show();\n\n                // now we need to calculate the element offset and position the container again.\n                // If the browser added scrollbars, the container's original position is not aligned\n                // with the element's final position. This step fixes that problem.\n                widget.container.css( {\n                    left: i.element.offset().left,\n                    height: widget.ui.outerHeight() + containerDecorationHeight,\n                    width: i.element.outerWidth(),\n                    zIndex: zindex,\n                    cursor: 'default'\n                } );\n\n                var calculatedWidth = widget.container.width() - ( widget.ui.outerWidth() - widget.ui.width() );\n\n                // hardcode ui, viewport and item's width. I couldn't get it to work using CSS only\n                widget.ui.css( { width: calculatedWidth } );\n                widget.viewport.css( { width: calculatedWidth } );\n                i.items.css( { width: calculatedWidth } );\n\n                // XXX: what's this line doing here?\n                widget.instance = i;\n\n                // try to match input field's current value with an item in the\n                // dropdown\n                if (selectedTime) {\n                    i.items.each(function() {\n                        var item = $(this), time;\n\n                        if ($.fn.jquery < '1.4.2') {\n                            time = $.fn.timepicker.parseTime(item.find('a').text());\n                        } else {\n                            time = item.data('time-value');\n                        }\n\n                        if (time.getTime() === selectedTime.getTime()) {\n                            widget.activate(i, item);\n                            return false;\n                        }\n                        return true;\n                    });\n                } else {\n                    widget.deactivate(i);\n                }\n\n                // don't break the chain\n                return i.element;\n            },\n\n            close: function(i) {\n                var widget = this;\n\n                if (widget.instance === i) {\n                    widget.container.addClass('ui-helper-hidden ui-timepicker-hidden').hide();\n                    widget.ui.scrollTop(0);\n                    widget.ui.children().removeClass('ui-state-hover');\n                }\n\n                $(document).unbind('click.timepicker-' + i.element.data('timepicker-event-namespace'));\n\n                return i.element;\n            },\n\n            closed: function() {\n                return this.ui.is(':hidden');\n            },\n\n            destroy: function(i) {\n                var widget = this;\n                widget.close(i, true);\n                return i.element.unbind('.timepicker').data('TimePicker', null);\n            },\n\n            //\n\n            parse: function(i, str) {\n                return $.fn.timepicker.parseTime(str);\n            },\n\n            format: function(i, time, format) {\n                format = format || i.options.timeFormat;\n                return $.fn.timepicker.formatTime(format, time);\n            },\n\n            getTime: function(i) {\n                var widget = this,\n                    current = $.fn.timepicker.parseTime(i.element.val());\n\n                // if current value is not valid, we return null.\n                // stored Date object is ignored, because the current value\n                // (valid or invalid) always takes priority\n                if (current instanceof Date && !widget._isValidTime(i, current)) {\n                    return null;\n                } else if (current instanceof Date && i.selectedTime) {\n                    // if the textfield's value and the stored Date object\n                    // have the same representation using current format\n                    // we prefer the stored Date object to avoid unnecesary\n                    // lost of precision.\n                    if (i.format(current) === i.format(i.selectedTime)) {\n                        return i.selectedTime;\n                    } else {\n                        return current;\n                    }\n                } else if (current instanceof Date) {\n                    return current;\n                } else {\n                    return null;\n                }\n            },\n\n            setTime: function(i, time, silent) {\n                var widget = this, previous = i.selectedTime;\n\n                if (typeof time === 'string') {\n                    time = i.parse(time);\n                }\n\n                if (time && time.getMinutes && widget._isValidTime(i, time)) {\n                    time = normalize(time);\n                    i.selectedTime = time;\n                    i.element.val(i.format(time, i.options.timeFormat));\n\n                    // TODO: add documentaion about setTime being chainable\n                    if (silent) { return i; }\n                } else {\n                    i.selectedTime = null;\n                }\n\n                // custom change event and change callback\n                // TODO: add documentation about this event\n                if (previous !== null || i.selectedTime !== null) {\n                    i.element.trigger('time-change', [time]);\n                    if ($.isFunction(i.options.change)) {\n                        i.options.change.apply(i.element, [time]);\n                    }\n                }\n\n                return i.element;\n            },\n\n            option: function(i, name, value) {\n                if (typeof value === 'undefined') {\n                    return i.options[name];\n                }\n\n                var time = i.getTime(),\n                    options, destructive;\n\n                if (typeof name === 'string') {\n                    options = {};\n                    options[name] = value;\n                } else {\n                    options = name;\n                }\n\n                // some options require rebuilding the dropdown items\n                destructive = ['minHour', 'minMinutes', 'minTime',\n                               'maxHour', 'maxMinutes', 'maxTime',\n                               'startHour', 'startMinutes', 'startTime',\n                               'timeFormat', 'interval', 'dropdown'];\n\n\n                $.each(options, function(name) {\n                    i.options[name] = options[name];\n                    i.rebuild = i.rebuild || $.inArray(name, destructive) > -1;\n                });\n\n                if (i.rebuild) {\n                    i.setTime(time);\n                }\n            }\n        };\n\n        $.TimePicker.defaults =  {\n            timeFormat: 'hh:mm p',\n            minHour: null,\n            minMinutes: null,\n            minTime: null,\n            maxHour: null,\n            maxMinutes: null,\n            maxTime: null,\n            startHour: null,\n            startMinutes: null,\n            startTime: null,\n            interval: 30,\n            dynamic: true,\n            theme: 'standard',\n            zindex: null,\n            dropdown: true,\n            scrollbar: false,\n            // callbacks\n            change: function(/*time*/) {}\n        };\n\n        $.TimePicker.methods = {\n            chainable: [\n                'next',\n                'previous',\n                'open',\n                'close',\n                'destroy',\n                'setTime'\n            ]\n        };\n\n        $.fn.timepicker = function(options) {\n            // support calling API methods using the following syntax:\n            //   $(...).timepicker('parse', '11p');\n            if (typeof options === 'string') {\n                var args = Array.prototype.slice.call(arguments, 1),\n                    method, result;\n\n                // chainable API methods\n                if (options === 'option' && arguments.length > 2) {\n                    method = 'each';\n                } else if ($.inArray(options, $.TimePicker.methods.chainable) !== -1) {\n                    method = 'each';\n                // API methods that return a value\n                } else {\n                    method = 'map';\n                }\n\n                result = this[method](function() {\n                    var element = $(this), i = element.data('TimePicker');\n                    if (typeof i === 'object') {\n                        return i[options].apply(i, args);\n                    }\n                });\n\n                if (method === 'map' && this.length === 1) {\n                    return $.makeArray(result).shift();\n                } else if (method === 'map') {\n                    return $.makeArray(result);\n                } else {\n                    return result;\n                }\n            }\n\n            // calling the constructor again on a jQuery object with a single\n            // element returns a reference to a TimePicker object.\n            if (this.length === 1 && this.data('TimePicker')) {\n                return this.data('TimePicker');\n            }\n\n            var globals = $.extend({}, $.TimePicker.defaults, options);\n\n            return this.each(function() {\n                $.TimePicker.instance().register(this, globals);\n            });\n        };\n\n        /**\n         * TODO: documentation\n         */\n        $.fn.timepicker.formatTime = function(format, time) {\n            var hours = time.getHours(),\n                hours12 = hours % 12,\n                minutes = time.getMinutes(),\n                seconds = time.getSeconds(),\n                replacements = {\n                    hh: pad((hours12 === 0 ? 12 : hours12).toString(), '0', 2),\n                    HH: pad(hours.toString(), '0', 2),\n                    mm: pad(minutes.toString(), '0', 2),\n                    ss: pad(seconds.toString(), '0', 2),\n                    h: (hours12 === 0 ? 12 : hours12),\n                    H: hours,\n                    m: minutes,\n                    s: seconds,\n                    p: hours > 11 ? 'PM' : 'AM'\n                },\n                str = format, k = '';\n            for (k in replacements) {\n                if (replacements.hasOwnProperty(k)) {\n                    str = str.replace(new RegExp(k,'g'), replacements[k]);\n                }\n            }\n            // replacements is not guaranteed to be order and the 'p' can cause problems\n            str = str.replace(new RegExp('a','g'), hours > 11 ? 'pm' : 'am');\n            return str;\n        };\n\n        /**\n         * Convert a string representing a given time into a Date object.\n         *\n         * The Date object will have attributes others than hours, minutes and\n         * seconds set to current local time values. The function will return\n         * false if given string can't be converted.\n         *\n         * If there is an 'a' in the string we set am to true, if there is a 'p'\n         * we set pm to true, if both are present only am is setted to true.\n         *\n         * All non-digit characters are removed from the string before trying to\n         * parse the time.\n         *\n         * ''       can't be converted and the function returns false.\n         * '1'      is converted to     01:00:00 am\n         * '11'     is converted to     11:00:00 am\n         * '111'    is converted to     01:11:00 am\n         * '1111'   is converted to     11:11:00 am\n         * '11111'  is converted to     01:11:11 am\n         * '111111' is converted to     11:11:11 am\n         *\n         * Only the first six (or less) characters are considered.\n         *\n         * Special case:\n         *\n         * When hours is greater than 24 and the last digit is less or equal than 6, and minutes\n         * and seconds are less or equal than 60, we append a trailing zero and\n         * start parsing process again. Examples:\n         *\n         * '95' is treated as '950' and converted to 09:50:00 am\n         * '46' is treated as '460' and converted to 05:00:00 am\n         * '57' can't be converted and the function returns false.\n         *\n         * For a detailed list of supported formats check the unit tests at\n         * http://github.com/wvega/timepicker/tree/master/tests/\n         */\n        $.fn.timepicker.parseTime = (function() {\n            var patterns = [\n                    // 1, 12, 123, 1234, 12345, 123456\n                    [/^(\\d+)$/, '$1'],\n                    // :1, :2, :3, :4 ... :9\n                    [/^:(\\d)$/, '$10'],\n                    // :1, :12, :123, :1234 ...\n                    [/^:(\\d+)/, '$1'],\n                    // 6:06, 5:59, 5:8\n                    [/^(\\d):([7-9])$/, '0$10$2'],\n                    [/^(\\d):(\\d\\d)$/, '$1$2'],\n                    [/^(\\d):(\\d{1,})$/, '0$1$20'],\n                    // 10:8, 10:10, 10:34\n                    [/^(\\d\\d):([7-9])$/, '$10$2'],\n                    [/^(\\d\\d):(\\d)$/, '$1$20'],\n                    [/^(\\d\\d):(\\d*)$/, '$1$2'],\n                    // 123:4, 1234:456\n                    [/^(\\d{3,}):(\\d)$/, '$10$2'],\n                    [/^(\\d{3,}):(\\d{2,})/, '$1$2'],\n                    //\n                    [/^(\\d):(\\d):(\\d)$/, '0$10$20$3'],\n                    [/^(\\d{1,2}):(\\d):(\\d\\d)/, '$10$2$3']\n                ],\n                length = patterns.length;\n\n            return function(str) {\n                var time = normalize(new Date()),\n                    am = false, pm = false, h = false, m = false, s = false;\n\n                if (typeof str === 'undefined' || !str.toLowerCase) { return null; }\n\n                str = str.toLowerCase();\n                am = /a/.test(str);\n                pm = am ? false : /p/.test(str);\n                str = str.replace(/[^0-9:]/g, '').replace(/:+/g, ':');\n\n                for (var k = 0; k < length; k = k + 1) {\n                    if (patterns[k][0].test(str)) {\n                        str = str.replace(patterns[k][0], patterns[k][1]);\n                        break;\n                    }\n                }\n                str = str.replace(/:/g, '');\n\n                if (str.length === 1) {\n                    h = str;\n                } else if (str.length === 2) {\n                    h = str;\n                } else if (str.length === 3 || str.length === 5) {\n                    h = str.substr(0, 1);\n                    m = str.substr(1, 2);\n                    s = str.substr(3, 2);\n                } else if (str.length === 4 || str.length > 5) {\n                    h = str.substr(0, 2);\n                    m = str.substr(2, 2);\n                    s = str.substr(4, 2);\n                }\n\n                if (str.length > 0 && str.length < 5) {\n                    if (str.length < 3) {\n                        m = 0;\n                    }\n                    s = 0;\n                }\n\n                if (h === false || m === false || s === false) {\n                    return false;\n                }\n\n                h = parseInt(h, 10);\n                m = parseInt(m, 10);\n                s = parseInt(s, 10);\n\n                if (am && h === 12) {\n                    h = 0;\n                } else if (pm && h < 12) {\n                    h = h + 12;\n                }\n\n                if (h > 24) {\n                    if (str.length >= 6) {\n                        return $.fn.timepicker.parseTime(str.substr(0,5));\n                    } else {\n                        return $.fn.timepicker.parseTime(str + '0' + (am ? 'a' : '') + (pm ? 'p' : ''));\n                    }\n                } else {\n                    time.setHours(h, m, s);\n                    return time;\n                }\n            };\n        })();\n    })(jQuery);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jquery-timepicker/jquery.timepicker.js\n// module id = 171\n// module chunks = 9"],"sourceRoot":""}